%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <795E><7ECF><7F51><7EDC><4E0E><6DF1><5EA6><5B66><4E60>-<90B1><9521><9E4F>.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: yy
%%CreationDate: 2022/5/1, 15:23:18
%%BoundingBox: 0 0 178 103
%%HiResBoundingBox: 0 0 177.2844 102.3064
%%CropBox: 0 0 177.2844 102.3064
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 803 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2021-05-18T22:09:40+08:00"
   xmp:CreatorTool="LaTeX with hyperref"
   pdf:Producer="MiKTeX-dvipdfmx (20200315)">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>邱锡鹏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">神经网络与深度学习</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 69 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PBAAAA+STIXTwoMath-Identity-H)
%%Title: (PBAAAA+STIXTwoMath-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PBAAAA+STIXTwoMath-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-978 -1641 3072 2627} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2016 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.  Portions copyright \\\(c\\\) Copyright 2010, 2012, 2014 Adobe Systems Incorporated.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4648 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-15 0 469 485 510 530 603 616 630 647 655 668 704 719] def
/OtherBlues [-235 -220] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PBAAAA+STIXTwoMath-Identity-H-Identity-H /Identity-H 0 [/PBAAAA+STIXTwoMath-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALF+STIXTwoMath-Identity-H /PBAAAA+STIXTwoMath-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QYYALG+FZSSJW--GB1-0-GBK-EUC-H)
%%Title: (QYYALG+FZSSJW--GB1-0-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QYYALG+FZSSJW--GB1-0-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -234 1063 863} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 8101 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H /Identity-H 0 [/QYYALG+FZSSJW--GB1-0-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
true set_gvm
%ADOBeginSubsetFont: QJJAAA+STIXTwoText-Bold-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QJJAAA+STIXTwoText-Bold-Identity-H)
%%Title: (QJJAAA+STIXTwoText-Bold-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QJJAAA+STIXTwoText-Bold-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-948 -434 1429 1047} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2018 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1936 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 15 dict dup begin
/BlueValues [-19 5 468 491 532 548 628 649 657 670 700 719 809 814] def
/OtherBlues [-239 -218 72 82 242 252] def
/FamilyBlues [-15 0 468 491 532 548 628 649 657 670 700 717 804 814] def
/FamilyOtherBlues [-237 -219 72 82 242 252] def
/BlueShift 6 def
/StdHW [41] def
/StdVW [143] def
/StemSnapH [41 50] def
/StemSnapV [143 149] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QJJAAA+STIXTwoText-Bold-Identity-H-Identity-H /Identity-H 0 [/QJJAAA+STIXTwoText-Bold-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALH+STIXTwoText-Bold-Identity-H /QJJAAA+STIXTwoText-Bold-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GFNBAA+STIXTwoText-Identity-H)
%%Title: (GFNBAA+STIXTwoText-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GFNBAA+STIXTwoText-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-948 -373 1297 1047} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2018 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2082 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 15 dict dup begin
/BlueValues [-15 0 468 491 532 548 628 649 657 670 700 717 804 814] def
/OtherBlues [-237 -219 72 82 242 252] def
/FamilyBlues [-15 0 468 491 532 548 628 649 657 670 700 717 804 814] def
/FamilyOtherBlues [-237 -219 72 82 242 252] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GFNBAA+STIXTwoText-Identity-H-Identity-H /Identity-H 0 [/GFNBAA+STIXTwoText-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALI+STIXTwoText-Identity-H /GFNBAA+STIXTwoText-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QYYALJ+FZKTJW--GB1-0-GBK-EUC-H)
%%Title: (QYYALJ+FZKTJW--GB1-0-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QYYALJ+FZKTJW--GB1-0-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-109 -227 1055 863} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 7415 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H /Identity-H 0 [/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UGXAAA+SourceHanSerifCN-Light-Identity-H)
%%Title: (UGXAAA+SourceHanSerifCN-Light-Identity-H Adobe Identity 0)
%%Version: 1.001
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UGXAAA+SourceHanSerifCN-Light-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-994 -1050 2930 1810} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2017 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 64785 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 18 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 524 541 747 764] def
/OtherBlues [-281 -281 -271 -271] def
/StdHW [36] def
/StdVW [67] def
/StemSnapH [36 47 63] def
/StemSnapV [38 67 79] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 1
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 747 764] def
/StdHW [34] def
/StdVW [65] def
/StemSnapH [34 53 116] def
/StemSnapV [65 76 117] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 2
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [38] def
/StdVW [36] def
/StemSnapH [38 61] def
/StemSnapV [36 47 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 3
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-1100 -1100 1900 1900] def
/StdHW [30] def
/StdVW [43] def
/StemSnapH [30 61] def
/StemSnapV [43 52 69] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 4
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [0 0 524 524 747 747 802 802] def
/StdHW [33] def
/StdVW [61] def
/StemSnapH [33 47 105] def
/StemSnapV [61 98] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 5
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 120] def
/StemSnapV [40 120] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 6
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [36] def
/StdVW [36] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 7
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [63] def
/StdVW [47] def
/StemSnapH [34 63 78] def
/StemSnapV [47 74] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 8
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 524 541 747 764 792 792] def
/OtherBlues [-281 -281 -271 -271 -177 -177] def
/StdHW [37] def
/StdVW [61] def
/StemSnapH [37 53 106] def
/StemSnapV [37 61 72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 9
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [39] def
/StdVW [46] def
/StemSnapH [39 50 110] def
/StemSnapV [46 59 109] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 10
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 747 764] def
/StdHW [31] def
/StdVW [57] def
/StemSnapH [31 55] def
/StemSnapV [38 57 70] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 11
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [60] def
/StemSnapH [32 62] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 12
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [30] def
/StdVW [52] def
/StemSnapH [30 48] def
/StemSnapV [52 69] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 13
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [31] def
/StdVW [31] def
/StemSnapH [31 46 68] def
/StemSnapV [31 46 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 14
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-15 0 511 525 726 743] def
/OtherBlues [-272 -272 -262 -262 -202 -202 -172 -172] def
/StdHW [37] def
/StdVW [69] def
/StemSnapH [37 54 94] def
/StemSnapV [43 69 99] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 15
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [50] def
/StemSnapH [32 43 109] def
/StemSnapV [38 50 109] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 16
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-14 0 702 716] def
/StdHW [36] def
/StdVW [61] def
/StemSnapH [36 50 65] def
/StemSnapV [61 71] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 17
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [31] def
/StemSnapH [32 43 69] def
/StemSnapV [31 46 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <051C60D8A8C9B5EE31016ECB81E0C1366BAD401163892378F09CCEE0154E6
2994282057923F54B325CC9A5AE05541130069BD6350B359AFF79A4F1203E4F9
65AFD06CDD29B899DCCFF61E378EF8BE0D6B163503EF8D2BB88E2DA55D0DE272
114CCF5BD1FD2B8ECBBBA5C87B1265A800E5B0CEF> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H /Identity-H 0 [/UGXAAA+SourceHanSerifCN-Light-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALK+SourceHanSerifCN-Light-Identity-H /UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: MZQAAA+SourceHanSerifCN-Bold-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (MZQAAA+SourceHanSerifCN-Bold-Identity-H)
%%Title: (MZQAAA+SourceHanSerifCN-Bold-Identity-H Adobe Identity 0)
%%Version: 1.001
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /MZQAAA+SourceHanSerifCN-Bold-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1011 -1046 2926 1806} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2017 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 64785 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 18 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 543 562 750 768] def
/OtherBlues [-264 -264 -254 -254] def
/StdHW [41] def
/StdVW [139] def
/StemSnapH [41 65] def
/StemSnapV [139 159] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 1
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 750 768] def
/StdHW [36] def
/StdVW [126] def
/StemSnapH [36 45 105] def
/StemSnapV [126 141 170] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 2
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [51] def
/StdVW [58] def
/StemSnapH [51 65 88] def
/StemSnapV [58 73 102] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 3
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-1100 -1100 1900 1900] def
/StdHW [26] def
/StdVW [30] def
/StemSnapH [26 52 78] def
/StemSnapV [30 84 110] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 4
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [0 0 543 543 750 750 840 840] def
/StdHW [33] def
/StdVW [132] def
/StemSnapH [33 61] def
/StemSnapV [132 158] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 5
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 120] def
/StemSnapV [40 120] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 6
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [36] def
/StdVW [36] def
/StemSnapH [36 48] def
/StemSnapV [36 48] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 7
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [107] def
/StdVW [92] def
/StemSnapH [107 113] def
/StemSnapV [92 103 127] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 8
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 543 562 750 768] def
/OtherBlues [-264 -264 -254 -254 -181 -181] def
/StdHW [40] def
/StdVW [126] def
/StemSnapH [40 72] def
/StemSnapV [94 126 157] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 9
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [47] def
/StdVW [152] def
/StemSnapH [47 60 180] def
/StemSnapV [109 152 179] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 10
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 750 768] def
/StdHW [36] def
/StdVW [119] def
/StemSnapH [36 98 115] def
/StemSnapV [102 119] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 11
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [64] def
/StdVW [109] def
/StemSnapH [64 90] def
/StemSnapV [83 109] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 12
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [29] def
/StdVW [107] def
/StemSnapH [29 48] def
/StemSnapV [75 107 127] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 13
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [41] def
/StdVW [41] def
/StemSnapH [41 75 101] def
/StemSnapV [41 52 99] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 14
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-19 0 535 551 742 760] def
/OtherBlues [-271 -271 -260 -260 -232 -232 -178 -178] def
/StdHW [39] def
/StdVW [138] def
/StemSnapH [39 65 91] def
/StemSnapV [112 138] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 15
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [52] def
/StdVW [153] def
/StemSnapH [52 161] def
/StemSnapV [153 166] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 16
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-16 0 713 729] def
/StdHW [37] def
/StdVW [121] def
/StemSnapH [37 88] def
/StemSnapV [106 121 132] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 17
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [41] def
/StdVW [41] def
/StemSnapH [41 78 104] def
/StemSnapV [41 55 90] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <051C60D8A8C9B5EE31016ECB81E0C1366BAD401163892378F09CCEE0154E6
2994282057923F54B325CC9A5AE05541130069BD6350B359AFF79A4F1203E4F9
65AFD06CDD29B899DCCFF61E378EF8BE0D6B163503EF8D2BB88E2DA55D0DE272
114CCF5BD1FD2B8ECBBBA5C87B1265A800E5B0CEF> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /MZQAAA+SourceHanSerifCN-Bold-Identity-H-Identity-H /Identity-H 0 [/MZQAAA+SourceHanSerifCN-Bold-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALL+SourceHanSerifCN-Bold-Identity-H /MZQAAA+SourceHanSerifCN-Bold-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ELRBAA+STIXTwoMath-Identity-H)
%%Title: (ELRBAA+STIXTwoMath-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ELRBAA+STIXTwoMath-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-978 -1641 3072 2627} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2016 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.  Portions copyright \\\(c\\\) Copyright 2010, 2012, 2014 Adobe Systems Incorporated.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4876 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-15 0 469 485 510 530 603 616 630 647 655 668 704 719] def
/OtherBlues [-235 -220] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ELRBAA+STIXTwoMath-Identity-H-Identity-H /Identity-H 0 [/ELRBAA+STIXTwoMath-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALM+STIXTwoMath-Identity-H /ELRBAA+STIXTwoMath-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: HIBBAA+LMSans8-Regular-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HIBBAA+LMSans8-Regular-Identity-H)
%%Title: (HIBBAA+LMSans8-Regular-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HIBBAA+LMSans8-Regular-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-446 -314 1510 1154} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2003, 2009 B. Jackowski and J. M. Nowacki (on behalf of TeX users groups). This work is released under the GUST Font License --  see http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt for details.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 105 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-21 0 444 459 656 677 694 715] def
/BlueScale 0.04546 def
/BlueFuzz 0 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 60 62 63 64 66 69 70 71 73 78 91] def
/StemSnapV [76 77 80 84 86 87 90 91 94 98 100 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B8524C50> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HIBBAA+LMSans8-Regular-Identity-H-Identity-H /Identity-H 0 [/HIBBAA+LMSans8-Regular-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/QYYALN+LMSans8-Regular-Identity-H /HIBBAA+LMSans8-Regular-Identity-H-Identity-H findfont ct_VMDictPut
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -102.306 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 102.306 li
177.284 102.306 li
177.284 0 li
cp
clp
false sop
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 8 GetGlyphDirectory
1929 <001C60D8A8C9B7AC35A0E44596F9773E422119C0DD97DDFBB56EB051F4
8ADD5036EF60981EC6A0B83A510685BAE4F49373D951615D44C071B44BD00F42
716BF135D9C792DC91417EA84038CDBA8D2027E33CFDC1D024627AE89582A197
BD20227E1412A9454114CE7F0F0354C390F32F5207294AE4E2725D33D1137B8F
3CC167EB9C10C040963E45B28F0A47926266DDCF00FB8D268A8D2BDF7577930C
2668880BE4C8D18153784DF0D1A4718A4F> |
1829 <001C60D8A8C9B8771BAF4709D6D4A9E016D93C007021FA8AD04A823FA8
7388D4C55B9AF819BC029E9C52BF> |
1927 <001C60D8A8C9B7AC355578F0AFBF2ABA49231DD42B98E13BC66C31BB11
87975D4B1EDDEFD42BD4E59A726DCE91358EC40A5F077CBA7C186B55BA13370F
060B7FCF> |
1928 <001C60D8A8C9B7AC3555053734DD1D67297344016111D36CE07A723ABA
1EFD86AC13812366B7F164CA450F6FEEBE31BD222D29FC2C2A1A22BDCB33B478
9D76A1082D3FBCC3D0C0E4CB7B4959AAC47B9722CB4D9EB88FCF4517DE20636D
5C3A934205A1436885482AD1> |
1926 <001C60D8A8C9B7AC355E8E1D620B1ECAD79066F7FE5949D279CA1E6F18
41CA4CE12881D6C9DF86810331C4A370FD36A778D6919E7942FF5EB87197E634
F8FD9049E79663C0447EFB45592D51953A09015ACB124B05E976984CBD> |
1931 <001C60D8A8C9B7AC35A0E44599192AC2E0E5C1B1E926D79110C1D6E740
92D9D24BF6DFF465DBC28C40C8A710570CB45B67500BCB9BA3A636488CAF40BE
3FCE494B5CE34AC0FCF01F1D91B5C236544E1A0F17BE3507A06C1400771D75F8
F3> |
1934 <001C60D8A8C9B7AC35A182D8F2AA2354653D2C1EDDAA0DF20B30D74BE0
0FF650E4312E9EA7E5595B658A044B3E7B50FD18877CAB5D13CA652873AD3E88
3708569345B9035E76FC92934B5D785C23BCD9F8E85E91A8F8CDD75AFAB6AA34
178E36CFF7DBFB1E9407A98868B299585A2C7DDD0F21D4C8E0FD337106DC9BE2
F82EEA17820369F37AB31E4766DFA71C1F921A12A962195205AE2DF3A6E1BDCA
D6BBDBA223E0FE496AA9B0E84F998A29BE9170AD8200D07D5E39A3CCB6680791
48D0D908EDF213E8C73879A08A349A400F5BC58318683362E50C49B9A56CBFB9
2E84F038DD> |
1930 <001C60D8A8C9B7AC357E9949B91C1FECB983388BFC07B6CED6C0798DFE
26AC7794C6E89E06270DFB409D6D997F33FFFEB48DA5FFDDC821CE747EB9C3EF
23B1C73A4A9CC2F246DE79969BAA59C3> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-72.1444 -15.4408 mo
(\007\211\007%\007\207)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 14 GetGlyphDirectory
32507 <0C1C60D8A8C9B5EE31C47EFBE18ADE2D5663EAFDB6BDC1CAD391080AC
5EFE354CECFA1FD3838437763C2581BC35C6EF0F49E3ED36D6D2896FDEA53B01
4B6D7FE70F29ECCF3406CE2ED0FC953AFE0D1C124CED10B4A8C08D1A83539360
E6987566E935344BBA1A3F25B615D9FB9029C79A0D82F607DE5281DB03DE0171
72082C3C8493CD9E5921BED6DF1C03F947594EF73F2574324B189EEAFB6132EE
61169881FFB0D9ACE1706B4DEBDE67CCBD7F63DEFEBB61A03BD33E74EFEC2B62
537740E49B8823F4E70DE5BC7B413AAC1D9A3ED449CFEF2776CDD7C15F08B621
2DBE332B3A42955DFE473E1C9E25FF2840BCE2157F880ED0864FC31A9D2147C0
04BC5F8014AC0D4F9697814D44351D596369E84CF9E3AD7607845AB7CAB6172A
2CE1DF0D37907661A1FBEAF6871BE0DCDFF5C3A7DEF9A4E8417E8E1A5BCAF7BB
809F94169624289140C5B3895DDE4EAED2B0046B44275F92BCBE6EBD83130D25
8BE9B97163D014BBAFB6ABEDF11956BC353BBF631547E339D99E2B84F5986A82
2DD9EB240BCF8391AC06C3E7C7782483832FD29736DE52C83681A8405F7C1A37
E8DF19BAB3F1752F930B2F8CABB36603E42F59990243AD4DE7A1D6E70F243BAD
D540B3437BD7C127995E0679351008E370E1E3909DE21CB7E29ECC3A8D653768
97259073BC4C65D88C82157E15FCB69A2C82B692EAB3115E60456D441381F498
B1A52802E57> |
17998 <0C1C60D8A8C9B5EE3176DF8EC042671A49CD2C43C0BB56DA7191637C1
B15EAA16F6DABB8310AD66826B4E657D1ABFF87A21FE94D9D8F8A96898AB7FD2
DBDA49E589459F5D1FBB25484097453CA71C8F8A744FE7F17D6593C190D86071
B7D2EE660464B38773309EDCCEC02D60F837A7492EE005B4F9F1662D5E6B8967
870ED5C4841225790F3A7D45D14BA94374CBC50C71E8068E3DF9E60953607844
0878EBCD8787526052887EFCE4B49BA62A1B117557B0C68683565F6C94E9FC40
786826A9125AEC18C549C23BD1794D2626A64967442C5B33A4CBCBFDDF20A1D4
266DBF2BB5A459554ED365E89707B981FB28B83DD3CD04FB4B0061E09DF39330
37A671EF160ED778D7ED9D7099D222FA02D8D625C6B50E6C9C3426EE91ADD806
5C999A9A78CCA2AC95E8ED0257D415AAA6F3B1797DCB025ECD391D41D33F0CB2
6F1E970FB7A1C4C6805AB0F8B3268DFF37AC945FF187CE031317FB26AA157373
E98C8D4E134B71BC5D54C5E4882A24033> |
11200 <0C1C60D8A8C9B5EE31764DFA9798CB73D48A9C84997F1D1AE8A525E06
0E136787E6E6CEE7BD769D339BA3FE5BF47A35774092217706BE3E4C440BECCB
084E4C6DF9A2056AF2B7264312562ADE8CA5575EC968607B1F608C4E25273E29
EBBF37F9A1539A73B3B4E8C2D2DE2EE476DC7C6ECD2D6A3A277C80AA299B60CE
93672BAD60EECC528DE30C26CB081B235489557E2F059762A20B197F1DF53564
64061DC2A6502DCF92DED041DA7676B4AB4A8175BB601973A54BAE9F77BD8DEA
7C0540B8E6CC7E84EFFDD58C3AA161699768E81D45C2AD8AD985219C8C7DF8E4
CD90BFD0AFFC4EE216007A3D9102F4B549EF219942D0C7AC346416CBB5995D20
662A7CFFBF4FB40E41097FA92D7885DECBB1501A5E7101938C9C342FA6402D14
6712FFB0853A6208A0ED067BAFE72616FF4C739B6A8983707E42E11C9B7C7C57
1FC51737B6E4A58482DD6DB98DC56BB2E23B689DB3910DA3A3093044346F7C34
3ACA07653CCD6E0B0FBC370C9D2C80AFBF1E8F167CEA8698B6D47EE6040A9FF6
926C8EB71B3C5F89B730FD2BB3777F35A8ED5469C84A29FF5A30BC05ABD3F9EE
E3DD5A7381CA9D0CBB68857EAE44F7300EF9EEE61A5B162A79A6F3186BCB899D
E1A8135AB2A851A> |
11211 <0C1C60D8A8C9B5EE3176854382BD8B39C7ABB8F4C276F4AAEA52C2856
A80D5346A1ACDDB241CD2916A7FE2B58427A46C663A4DC2F1AB87E94CB7E0DEA
8250DF4C14FD855996FC8BBB31EE111A4BE976DC0FDFCE045F8B818CCCE59D93
E062AD9CF3B04C4D670114457F49C45325B0A0DE2067FA6ADD26E43A2E3D22F1
E9A9C7AD92FC2E9E37C0F438A51FFBC445855EC5FB5D4E95395880873B0140B0
61B888727CC10B6C9355C49F9B62DB7DD52FD128E8E614DB15493DE36C986094
F9810858B3C8C6227B4AABD7E5EF4FD992AFB3E2FE8554639A411016BDD1B707
98EA581C959354501E659030A29BDEC3AFF75D537CE0630FB3429B0ACE64ABC4
3411A4299C3D4FE74425453546DA9961E4F1B1419E1A0D6F948C3D628294E47A
6AB9E103105BF569D39E6D9D308672EB8F474A672094F3286B9E61E69B730F84
39D6AC30DC4927FDF88DB4D07E6FD89FAF67A8B8888D8072D261CFCB168D3930
691E022A1BDD5CBE0D2A29A9FF0D40ED0404AA3BD46B27C35DE953F7768CC8E1
0D184DD85EECCCFB1E8A5E637270690C34632235E05AA4219CA3DF2D76481A72
C39E12244B7848D118EC2AA1CB75491DB625DC555B0811E979B83CE006974CFE
8771A01D4F6D355237D7FFCD0ACA2C0B8C01E2872C1A3EE181D3F560E9B19A0B
4DF2AFE551D3F3DC57D51C594E2E5CD188497C5886E11A81035E54E7707AD456
12883EA1057CF679A4429D3> |
11143 <0C1C60D8A8C9B5EE3176320F8F4722D862E9718127B60B0A4AF39AD7A
EA8B9DF1BD6D58C3656C7BBE12870FE76B9C965E8245C4B4B993CB97A569DC70
55381FA5134EEBC41AB03B83D0206C263E8E4686973FE766C0A773DC19DA37B2
646CE790E5C090CF21EC784CA639EF45857F6BFF7CB14E01527F9F03B9A7D6D9
45D7A647156A36F9E992A001110608C697CA9ABBFE229F9172997898BBC606FE
1C02843A8C03477EDD720BEE6C4EA10703658FC6E8D12248A43AE2DBB9C1A251
F9ACC6EE009BEA7CA4EFEBEE1EF67909A3FBB55B1D5E22944FFC8985071329D4
AF9552FE11B6879D4E9B075B456E5D04CB5EE08E703FEACCCBAF594B037913F1
836FDEE4978A95E99A923B38FFFD383E3F37EB695A672FB33A3AB5D8297BFE70
CD58C706AF76510ADFEB7F4D3BC34B7DF779143CDFA8A29DB7E9731622B6FCD5
C71903A66A154CE4D5E43B93F0A2B3AA45E68DA2084A04DD96548CF6BB93CEC5
8BF0B11480720091EDA5696484E3F0F718306DB9E556C6F4AB7058FAF1864060
7CC655106FED62B8F74D681D63D92C870888A5603F36A7A852BBD6EFB31FC191
A02794593C793F9F9D86479B6EACE35DFFBE588A14D5DE2567406A9C5A9E1775
FD4062C9072814180BEAA1C439B400BDD2E6989A7421BC41A5A5A1B9510ED3FC
6429BB12669A03B420DDAC7806B4F6BF413B25468BE5669E77B40CEA4FDBA09F
100148D89> |
20442 <0C1C60D8A8C9B5EE31764DF6AC02B1C29DA9F84EA714F104EB2DDBF60
D9EB4A4299BB9B2F4ABBBB4546AFDFA102DA279B58639DED7A67FD68269BA651
3DE6543A8BEF35F82D185304BACD2B8D94BCACFB6581F9758BC83D547C401E47
29C9790F2007466FDFA3B1A4616067D07B08B36CD8C57F0F8424FF3710245FB2
6BB0CADCF9552565B592EF7BD555FA4D6D0344FCCACE329B49BD04D39B501ADE
27844DFDDC129EF54DA2F3AAB13E785F37A84F5C6691CF1FDF79810EFE6BDD93
CFE26F2DA6E18A75AD6E090BCDE286B61541FBFE59410778DB583B8F67F30D82
5F69CBA9B5D66AA73BD2CC67AAD8F309D8D6D4E38A115677DE46D94B89C0E656
3F940BEC8A8AF239565F40AF50D522F76A5C194CC35A4075B727A28EFED06AB6
465D6101B880613AFC3608463439EE87EFBBD6C5A399AE1617C58CE8C54DE31B
0C969B754165513C508BFF5E460489F457D4CA80E8E6C3530A9D9240725C4531
037DEEA1BFB5FC97162F32D776300760FA7F45457AB43DF2D32B79B6117D7E33
C4661924EDD0AD44F0D472ADA09C5C13EC356FC69A5CC9660BC6810EF62D45AF
54688C7709049BB83380FFAEA2659D61A270A81DAD2F358E7268C23EF49E9CE9
4D80B9851880FE6089E9BC101AB32F9E4ABAFB0175597E1D60F3ECAAA13CA351
44C028467A229E5C243D30840> |
12181 <0C1C60D8A8C9B5EE31765C2CD64E1306CFBE29F1D6F9966A7B340B489
A362EBDDF5FE6AC0E3832935C4DC086D23D3A22F44172DCCB776F2AE70C0252E
BF633186FD6BF73D6AA678D133392CF72320F8AEC16527299FD5ED64F39A762F
CD4F57CA8719FA237024C9FB88E17B3968623F66E87E2605DB826EC354FA07EA
91A1C8A034C9B3DF4E337C89F8AC592FFECDA2A81841323AF57909400E7AEEF3
3B422B4AC188F48AA2F5B96716BF8DA9C194C418608F8C5CFA45324E984B0FD3
3EFA791820A22E1685E3D25BC3032CEA23CDA2B6832C7ECC31EAC224C731A11C
E1849767F295660628D96E9E021658E76DF359B254B8B4044AA1DB107B0F0> |
11025 <0C1C60D8A8C9B5EE31764DB6C1BEDDAEFE76E9C680A4D8D2907121277
DE1BA4112EEBD95997A8E8C690ADF8959173937884C882AC71FC74B162097321
0C09296633EA1DA8ACA1B8B86B3B3C59E38DB40A550729452F4384CF374232B8
9492B749699EE438404C468F8114A8AC6CA16E0167E5BC07AF4CB4CCF02E6ED3
D824C60A155B7CB26DDB0B28D907F10A4AA5BAA2A659C3FC3ED3C8C025D0C163
6431A4A5C7FF6236C945D7CA90AB8AE19806843D1B269086B9284A80580D809D
90EA89B571811A1D338C112BD8E8825C6C879439EF582BED53D91438A8A8AE3B
88B51146D4BF8D4B2A92A37000A57E487D2297810C9331519DB44D6A21C0F459
C1F175F67A7EBE1A6C193AE22DB6FC5E75A347660E02CF0B6E7DAE2FC3F4C442
64FAA3C694E9FF1E6D2BBCD3236451A44A1922A2D7DAEB98161716F3F8394> |
30636 <0C1C60D8A8C9B5EE31764D35F20A0CE9555F2E5490B5A5773C15826F5
C398E354EBDA663CC78466E89617B67369DF5F2F4E34B0F626A29CC1A96640ED
2EEECB3FF4FDDF7FDD3C5BBD9A6B373DF26975D6AA67B6B1D220E56D547FE5E9
5A604D2F240A7D49C23AB647FA4679475F7518CBCAB5BB614B292A9305A43929
92FF630361B724A76D2B70A9E1D6F930A2ECF90A484EFEDE09CD87D65B71E041
CFD0C8C3389E65198788F3DE56B2C06FB1EE362095156C3D3D54E85CCA1221EC
FF70B86D530E218055FCE69C932299FB82E0E335D09012A910788B46C507BEB3
0CB651AF9C756649F0AB13D0FA6494E87862ED16D414B48967B17C0D909B7892
B2A7F86AF9EBED126BEA7AACB0873D69FDC2ACC58359677B75BF983F0E9C81AA
805B977062374F660C31D46C63E66C4EE8EB6C28D3758C9B81136E580A96F8CD
C34F2F30D444B996667E450F766ED0712C2C0F3A3BFFA89583692789E81D2473
DC134281D82BBB540907098FC24A60EF445C5B99664EF6D1FD0B4D170D125A6D
C6F7356A42C594DD6BB39CCEDC397FF60C09AEB3F32B2687806C47F1D4E5305A
C257C787BC8905868B6AAE0006F6BC8A8904BD047D4ABC07C741865FA4423B3C
F69762F82F6D99539E872F70322A35DB2EF9246B6E20DA9C0CB01429287D12E2
D96A8B2CD2B3CEB533566C7C71C9A45A4B1D57F96F2F5FBF4AEFE5FC568C5329
50A77753AEF> |
41033 <0C1C60D8A8C9B5EE3176E1000E96871148C7BAF07B58B622434A64967
624F2871067E741A6F0C426AA0BE3667565CD62128D3122C96A0ED30E00EA015
FECE11417CED9391DAB57127902346831441C3D1C2F5068DDD73A9B583184DEE
C576477E1EDCBBEC2D0BD2EEE903B02105E5547A3EFB57D006AB041C093D5A36
765A1F4E1C050337CA0B0F516BE7140DB45764ED7BC36F59C69DB724B94A37E6
BA859B5D3FEBE8D2986F980F3D14B7669266DF6E422B819B4862B34FCB6B76D7
7E2B95AF23A54C11F661B8F0FE21E2B992A0C1DA481B96C76839D23D40B27D09
B5EB2A0E56F80EDFFB10BDB08DBCF4AD1E22E6F9C0237CB7D2D4EEC73AA2E7BE
63605231D6C2F0753CEC0DFE0999F5563FA984F5B57C89D700541DE2F1C140C0
C476EDF62B61B553C5417BD4E82748FF9EFF3E748878D80A25149775AEFA5346
D32EB0605B1B9BBD0BC1AA023E5D8B0AEBE83FC6C50C455EF12DFAB1DC91DBAB
CF345046C1DDE904E32174729DEEE7356B551C53ADB141DD57D35D419277B8A2
70F802541EF220D951C17049415D0B936E9625808325133D10234FE9D4FA7918
F7C092001982624A7A0F31BED31149A605FA7F55EEDF8721D25CE049A7D46D7B
8970E9DF6577BC6A0C844AC95CC8AC23707198838DDE145DA8FBAE09173A63BD
CE1B0FCB201D4908647E23E8D06BD7C3C620FAFB74497AD74519C0F3BC207108
EDB2CD64F1B6234C9CF3E973779AA634D5FA710470C23FFAE994501D72165A55
59928> |
27733 <0C1C60D8A8C9B5EE317642CB1CBBEA898A57AC00F7F00B31849977B42
197C26946DA8E520EF4F0FED68235A7B32B345A7C9B8592D6C82E5C8A6FEB1BF
1DD6B2305D8F8DE8D1EF5D6C4AFDAF821BAD54CD4954B3B5EF05E32CEE97CE64
0ABD37590F14921FF4286DFF32341E0446D9B1876D323C3A06C8EBCFA47B914E
EB0E7A228DD43B7058EE8742F1F0834EC1B3E259FEF6A333534403BA8954DBF9
C7C980E29CD33B2A90701407D24D160D3B97C767709C6E47DDE9111CFCE216F4
4C6DA0B3CE7B82D590688E06EE899E2BA43BCC01F725232441C87665EC3FDC14
31AE420F6C25ADB375FE22D79B9DA7C3386E1FD08C3218004B3D05D49C5D171C
DA22B2D416FCC106DEA06DE0C021A0E9C45003EF0B66940986D11BFF57856E7E
695F6FAABB6F5E8F1912B314DA0408CDB687282794A9A791AD74713983FB878E
1BCCB2D1C063158D76986FB721CB7082995CE505416AEE6AE> |
17169 <0C1C60D8A8C9B5EE31764D3934C5265999C438C01422F644829CDA3B3
09774B23994051064B36DD95770D81A262444B59E215AD1A0C5C44223895062D
886C46A62610885A265551435030E3E6BE25E78F5564C543366D53102EBD49CE
D106C7A1C789FCF0CCB91C9EB5BCF988FFBE7AC89B8B19BBDAB4D24F3D6D0612
29ADC41254EEA1E9DC86932BF6C2E49467ACFEE6C3F050B0A331821292508DE0
82C4133AB7D021D84FCDAADB59330FBD36305C6D809A023B1DE3E63710341593
9B43C6031BBA07690752284787C44FB69C3FD5536D7B434731318> |
21139 <0C1C60D8A8C9B5EE3176FA3F3A05DFF001B79BB7DCC8800FACC3634A8
D7F57CA5DCEBDFBDD5A2F98F4067FAD89DDB77EFFF41FBB51D4CD11331B14337
10EF6AB834F1433CF57190EA9013095F66D141F559FC5325A075B293BB4BD7C3
78C736CB4AA49EC256FD75D2A102E5D4493365FB27971D91406203DC3F3B9113
B8F215B1ABFB90463BF68F87F934A3116BA702FD4D9271CB5E898F7E4DA586AA
4C94CFC7D297518E73FA263C40DACC05C7225DABB9610D807EE3059AE1DC3F2F
B57CCCE7B87C870C6EBD2AEFCA1C625179A2D807A4527AA95F398DAAA6502809
2BB689A6312A9802C0538> |
20669 <0C1C60D8A8C9B5EE31762582AD99FD9F6F9DD49DE1CD66CDE338BFA57
C0966FF1FE0D754CD0A7C0920398FA9A19AAF0CDFADCD2E7BDAC12DF5A8E197D
9A6C7A654F6F1C6DD60D6F903D486F905423E188CE679929E2D3502DA3D9330A
B3B40EFF62E88B0DCA584ABF03B92845C6D3D6727E20BD1384063495A7D399FC
2F9> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
-52.1044 -15.4408 mo
(~\373FN+\300+\313+\207O\332/\225+\021w\254\240IlU)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
98.7086 -15.4408 mo
(\007\210\007\206\007\210\007\207)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
120.777 -15.4408 mo
(C\021)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
132.704 -15.4408 mo
(\007\213)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
139.977 -15.4408 mo
(R\223)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
151.904 -15.4408 mo
(\007\207\007\216)
[4.93144 0 ]xsh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
164.109 -15.4408 mo
(P\275)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
334.686 -15.4408 mo
(\007\213\007\212)
[4.93143 0 ]xsh
.3985 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-72.1444 -11.6548 mo
344.549 -11.6548 li
@
gsave
10.0601 98.5728 mo
174.816 98.5728 li
174.816 5.76051 li
10.0601 5.76051 li
10.0601 98.5728 li
clp
.389159 lw
132.647 52.1647 mo
132.647 48.1347 129.38 44.8678 125.35 44.8678 cv
121.32 44.8678 118.053 48.1347 118.053 52.1647 cv
118.053 56.1948 121.32 59.4617 125.35 59.4617 cv
129.38 59.4617 132.647 56.1948 132.647 52.1647 cv
cp
.16 .95 .95 0 cmyk
@
.778328 lw
130.214 47.3001 mo
125.35 47.3001 li
125.35 57.0294 li
120.485 57.0294 li
0 0 0 1 cmyk
@
.389159 lw
125.35 44.8678 mo
125.35 59.4617 li
@
132.647 52.1647 mo
118.053 52.1647 li
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 3 GetGlyphDirectory
4283 <001C60D8A8C9B6AD61404F84D3A19488CB60382F5FE41AF75351FD3E66
A7A277F987D902D103C5C18BCCEBFBE929203CF93F6D3216> |
1060 <001C60D8A8C9B738A232BA25867880CC2E500361680234C9E9FF118FD3
E7612276> |
4284 <001C60D8A8C9B6AD61404F84D3B67BDC694536E7C521CA26B3F7645401
F24A> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
155.737 54.5778 mo
(\020\273\004$\020\274)sh
.778328 lw
133.814 52.1647 mo
148.291 52.1647 li
0 0 0 .9 cmyk
@
151.327 52.1647 mo
150.062 51.9118 147.786 51.4059 146.268 50.2676 cv
147.533 51.6588 147.533 52.6706 146.268 54.0619 cv
147.786 52.9236 150.062 52.4177 151.327 52.1647 cv
cp
f
.389159 lw
88.476 52.1647 mo
88.476 48.1347 85.2091 44.8678 81.1791 44.8678 cv
77.1491 44.8678 73.8822 48.1347 73.8822 52.1647 cv
73.8822 56.1948 77.1491 59.4617 81.1791 59.4617 cv
85.2091 59.4617 88.476 56.1948 88.476 52.1647 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
1646 <001C60D8A8C9B5AEADA680CF3200F4C5CA23BEE83620A4A946C15810E4
107F4E295AB9E4AE9193A5CC11B0003CB9155076C27CDE1322A2A216DD70F78F
A6234D379EDAD7A53EE55C9CA3C00C8A3792517D6EF0B973CCD0BCB35C843F0B
0522> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
77.5365 54.2428 mo
(\006n)sh
.778328 lw
89.6435 52.1647 mo
113.85 52.1647 li
0 0 0 .9 cmyk
@
116.885 52.1647 mo
115.621 51.9118 113.344 51.4059 111.826 50.2676 cv
113.091 51.6588 113.091 52.6706 111.826 54.0619 cv
113.344 52.9236 115.621 52.4177 116.885 52.1647 cv
cp
f
17.5498 59.4617 mo
13.5198 59.4617 10.2529 56.1947 10.2529 52.1647 cv
10.2529 48.1347 13.5198 44.8678 17.5498 44.8678 cv
21.5798 44.8678 24.8467 48.1347 24.8467 52.1647 cv
24.8467 56.1947 21.5798 59.4617 17.5498 59.4617 cv
0 .100392 .100392 0 cmyk
f
.389159 lw
24.8468 52.1647 mo
24.8468 48.1347 21.5799 44.8678 17.5499 44.8678 cv
13.5198 44.8678 10.2529 48.1347 10.2529 52.1647 cv
10.2529 56.1948 13.5198 59.4617 17.5499 59.4617 cv
21.5799 59.4617 24.8468 56.1948 24.8468 52.1647 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
4450 <001C60D8A8C9B66EAD7EC4DA1A38C414BE0BD8C4675145E588B4097C2C
11AAF2A21EE41FEC4373D20B6B7DDF07F65536BBACA82F5F986163C4D2F4E2E0
D63D8DD738562E655410CD17FCBC5B33E3F825205089F9C32477AF12210B030B
FB82C750F1A901EFA6EFB890C3F98914C0B8F555D8D2AC786AB2C65E413FBC0A
D612010E5C98A845AB2E93E077F8029181725DAA16E524D2B70E36D62FD31F5E
3555B622ECCDCF01CFB92231D49F3E345E3A862E03363710EEC820CA3E0F6DEE
27EA0A3DECB4718C8330EBB4267BF9A9078E2A8BA5BE44E99BD781704F6237C7
783940727C86> |
4524 <001C60D8A8C9B7ECD93D74E788CEF2EDF5E74BBF409C06379362E6D5D8
6A2DBB6AEB98C0B0A04A959A9EA15CDE270B7867C8EBA7620D4A97F34237DD17
52432454AED8FAC2C7FA41A79F99E8D776CDB3DB2164AF377AAEEBC7E361F9E7
4ECF18A887E82B7BA1A2FB2196707D410FB63632> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
13.2036 53.3591 mo
(\021b)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
18.146 54.9938 mo
(\021\254)sh
.778328 lw
26.0143 52.1647 mo
69.6792 52.1647 li
0 0 0 .9 cmyk
@
72.7146 52.1647 mo
71.4499 51.9118 69.1733 51.4059 67.6556 50.2676 cv
68.9203 51.6588 68.9203 52.6706 67.6556 54.0619 cv
69.1733 52.9236 71.4499 52.4177 72.7146 52.1647 cv
cp
f
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
4448 <001C60D8A8C9B68CDD4EAA3754C1BDCCF2C1159E5DA5D843205943B63C
11D59E3DDC80A6BA76D5E9B8AB204C9AF25C8D8D330631BB10CA3EEE31B0DD94
9FD13C2372ABB68ED632FB25737351092B33EDD93BE59E59EE3649A9AD75A6C8
CD211A54ECF557B52854F66D09D65B549C88DCDFFF4225551D8E57B34BD1D864
F0D113B98E9A2B8E5BE092616DDA8F5C45F2A4742126B380391875FBBBAB58E5
DEB9B2087F015D33E1779D05F246> |
1985 <001C60D8A8C9B7B4A1E885A708B75820A1B92A0911D348340142D4BE40
D4B26786E1B8DFB4345D7528B7B9902B8EE559684F8E3CF03218843E19EBB705
255711E1C444559B4EBFD6AF18C3DFC1A0BA2045130AFC73CC0B905CB38692D8
313E9C4A9892BB41CF> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
44.1547 48.5593 mo
(\021`)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
50.8256 50.194 mo
(\021\254)sh
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
15.5298 73.6432 mo
(\007\301)sh
17.5498 98.3787 mo
13.5198 98.3787 10.2529 95.1118 10.2529 91.0818 cv
10.2529 87.0516 13.5198 83.7847 17.5498 83.7847 cv
21.5798 83.7847 24.8467 87.0516 24.8467 91.0818 cv
24.8467 95.1118 21.5798 98.3787 17.5498 98.3787 cv
0 .100392 .100392 0 cmyk
f
.389159 lw
24.8468 91.0817 mo
24.8468 87.0517 21.5799 83.7848 17.5499 83.7848 cv
13.5198 83.7848 10.2529 87.0517 10.2529 91.0817 cv
10.2529 95.1117 13.5198 98.3786 17.5499 98.3786 cv
21.5799 98.3786 24.8468 95.1117 24.8468 91.0817 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4647 <001C60D8A8C9B5822B74228264C8CDA0F33D911BC3AB518F4AECB3E662
960EF2EE93B2CE2747C9777528467900FB5E4F0A917B56201F116406C8724413
A6E059BC9F2DEA9CA6EA438BFC5F6BB14A72BBA9DBAF00C9F6B3CA842B97239F
F2B32FEF5C7A69612292FCCD920B80BDF18053299E316EF09873B57B16C0E2> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
12.1441 92.276 mo
(\021b)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
17.0864 93.9107 mo
(\022')sh
.778328 lw
24.7704 86.6655 mo
71.3692 58.1645 li
0 0 0 .9 cmyk
@
73.9585 56.5809 mo
72.7477 57.025 70.5417 57.7812 68.6532 57.602 cv
70.4579 58.1289 70.9858 58.992 70.6328 60.8387 cv
71.3336 59.0758 73.0116 57.4565 73.9585 56.5809 cv
cp
f
0 0 0 1 cmyk
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
43.0952 66.3571 mo
(\021`)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
49.766 67.9918 mo
(\022')sh
17.5498 40.0032 mo
13.5198 40.0032 10.2529 36.7363 10.2529 32.7063 cv
10.2529 28.6763 13.5198 25.4093 17.5498 25.4093 cv
21.5798 25.4093 24.8467 28.6763 24.8467 32.7063 cv
24.8467 36.7363 21.5798 40.0032 17.5498 40.0032 cv
0 .100392 .100392 0 cmyk
f
.389159 lw
24.8468 32.7063 mo
24.8468 28.6762 21.5799 25.4093 17.5499 25.4093 cv
13.5198 25.4093 10.2529 28.6762 10.2529 32.7063 cv
10.2529 36.7363 13.5198 40.0032 17.5499 40.0032 cv
21.5799 40.0032 24.8468 36.7363 24.8468 32.7063 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4523 <001C60D8A8C9B7EA3AC73239691A85BCD0C4F9BDE0B33C5FCC116816A5
112536F5913072C43803894489418E84BD0927369CA451E6F153461D54527DB5
724A4E610D57BAF5585DE02976B0DFB139C3EF4F55D30F0A1A2454D2D5241E53
D6D1B6A41F5B26142F23C0A7CC107C> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
13.1978 33.9011 mo
(\021b)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
18.1401 35.5359 mo
(\021\253)sh
.778328 lw
25.6441 35.1816 mo
70.1821 48.8018 li
0 0 0 .9 cmyk
@
73.0848 49.6894 mo
71.9493 49.0777 69.9202 47.9282 68.8018 46.3958 cv
69.6044 48.0961 69.3085 49.0637 67.6922 50.0242 cv
69.4764 49.3795 71.8014 49.5615 73.0848 49.6894 cv
cp
f
0 0 0 1 cmyk
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
44.1489 38.8298 mo
(\021`)sh
QYYALF+STIXTwoMath-Identity-H [5.83749 0 0 -5.83749 0 0 ]msf
50.8198 40.4646 mo
(\021\253)sh
17.5498 20.5447 mo
13.5198 20.5447 10.2529 17.2778 10.2529 13.2478 cv
10.2529 9.21774 13.5198 5.95086 17.5498 5.95086 cv
21.5798 5.95086 24.8467 9.21774 24.8467 13.2478 cv
24.8467 17.2778 21.5798 20.5447 17.5498 20.5447 cv
0 .100392 .100392 0 cmyk
f
.389159 lw
24.8468 13.2478 mo
24.8468 9.21775 21.5799 5.95084 17.5499 5.95084 cv
13.5198 5.95084 10.2529 9.21775 10.2529 13.2478 cv
10.2529 17.2778 13.5198 20.5447 17.5499 20.5447 cv
21.5799 20.5447 24.8468 17.2778 24.8468 13.2478 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4274 <001C60D8A8C9B7BEB13D3AD119696FB355784086E9BA2D3D596EF297CB
3AA1F087A53704C83FFECA0D0B4A9054B0EEBBFE2B8B866FBDD3F85DC0CAD47F
B655D8B269FEBE5B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
15.5689 15.8435 mo
(\020\262)sh
.778328 lw
24.7704 17.6639 mo
71.3692 46.1649 li
0 0 0 .9 cmyk
@
73.9585 47.7486 mo
73.0116 46.8729 71.3336 45.2536 70.6328 43.4908 cv
70.9858 45.3374 70.4579 46.2006 68.6532 46.7275 cv
70.5417 46.5483 72.7477 47.3045 73.9585 47.7486 cv
cp
f
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: PBAAAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/PBAAAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4422 <001C60D8A8C9B7CB35EFD96E319B60F6715B2355478FAD7348D1B3DB11
647454183BA73DB3D7C2D6683C5D2E3B1A568BCC55FE38C259D589FB739A756E
F7AE297047295B491F00FDCE6D612C81348AE02475B9B6316D697055C856E26E
9813416A24401C7EBDC31D86E48054B2970D0CA9AB5C42C6696AA0A39C820019> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALF+STIXTwoMath-Identity-H [7.78328 0 0 -7.78328 0 0 ]msf
47.061 30.6345 mo
(\021F)sh
grestore
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 7 GetGlyphDirectory
13245 <0C1C60D8A8C9B5EE317638D4178DA72760CD981C0DA8F9B882D9E6336
4A675BBEEDE6D702B74D328394496AE249867650819E7A71A4158DD8466512A0
C202C319866581915E17BBC93AEF66C4C57726005B5AF0712740003389FF8725
306CAB7C08DDC2E7801E93F2F3AF788535D1104C389F06AC62D49D433F505222
50DF96BF60766E6F375E86264C34ACC5F611E88CA220E38DBFBC36AC389BDD8A
3E661E7F64FE4549AC21197101BCF6B27A013BB73E9BFA489EF8D750E4ABF0FE
B9689FA2280641E422F2B8C157080751DB186B49AA0C6D530E3B3AADC4D9B462
71D60909FF76995A93C17C95AD6DEDD9762F3B3C6271606C15EBFD1950E01560
68C73F427A6D330377358B90DF3E27BF80195F81AB192217636B54DF3CE5B703
3137F984C8F4419C9503226D8E0CEED71B9450108025A07B8F5563B1FF4EEACE
FFD6C0886EE9BFDDF761E> |
9693 <0C1C60D8A8C9B5EE31767505281AA8CA1736D23515C04981B79788BC6E
9EE93A3BE964B34104450D0ACD24455D6FA36E638E9014194BFC0AE2E7704026
B08DF45DDF0F3E4CC642FF97B2ED5DA3DCC8AC3D81C31ADDAE1D15> |
11157 <0C1C60D8A8C9B5EE3176FB6EB538069D5CE2510DFCF0A09A05E78D63C
BED01F22E6A884ED8EC1A57911A9852BD70F19B2A138854D0DCD32C3C2ED1E28
31BAB8B6BFADBB29FFCAB315CB72CE8C335AD57F24CE580B2BC432DCA514635D
66DCF2D839B1B1436AFD8992915A7559950E54FD0F87B2A3A8CA6DFEB305BBB8
97E4D3CAFA75AFD780CDECB27A0173A0A979E46F6C797DFD9B0FE4D35E9FD9E2
C527B204A6D19F4B5F76FB8E9F8C058CE51871C3138843B107DD37B1922E2463
CD808C66A2B91665EFFC2A1FBE1B8C229C877EA1AA40C716B46115AB2B296248
E2F95E40CD4E6F05B223C604697E7516DBA1A1132518AEB2B501306BF8D185C6
FA35A02CE9AA40CEDF32E5187> |
31261 <0C1C60D8A8C9B5EE31764D094026AE4EE39D179F1733DFEDC626384CE
7047B60E15383DE1DAE438D85B96F7C8AAB52FDFCB9D769570B2F2ECD8CE7482
8E4D366E4666CA4BFF62AE6C82D2EC5B3ECD88F7068E97B31A194119C440DFA6
250BFC9681E1E92036D64DCC7E84FFCEE3BD7C2CCF747E9EB882E59CCE540969
44EA9CA752F55D75C67453AB2A297EB42675232671B381E06AC4AD6A8B722A63
122244A8D639CD75969AC4A0987767435A3E95F1E674B1B9DC0CA4B5BCAA76F6
09D05B5D3A915DEF9EA0D36C3C92BEB1E4F269DB3B54C63DA5EF77E77C307790
98FEAF67B3DB8634E0B768359A4048CBF15E2B832402DB01E4922442315A1FC8
110051225DA5D6C1A0F13EA3B0324EF6271E4CCAE8915BE0A66ADF335A593A11
6306D7DDE119BF3D894BAACC5CAA47F72D846B720235DC9FFF068C22F317C092
0E49B7AC4A116093455E0E6735F23188379B7F3F6B72651ED7E5FF970446BAB5
91C4F55D1F0BD5491AE57DA3B199893BC43C79241CFEFB3CD5518D2C3ABED6D9
F176437397BB19A02F9D1403FB973B01623DEE6F8564F76997F3BD073ADC662F
13C9E859E> |
28344 <0C1C60D8A8C9B5EE31767F1407EF8D9138BD8318837C9908474305F70
589C28D80DC42982B7BF48158AD0DBE02391FE32091D47885B685DA2E7F1BC41
89849CB79B86783D4396CACDB297CC9F176D70D195CD29D220FE2E911EC31BFF
7CBCEDCFCFFF2CE2787EEAD7653284E0ADB405ADF54CE09706D9AC941FB72FD9
329D79419DDB820CC4ED4D37365AB0E1E563232182C43788A4A862D2EC073627
F7D56EB25B89FF120B984530AE60A75ACC9A94ECC8CC6C2DE3E0CC5B18D8A039
7AF09A4321374F98CC234C55E4909352285EE9CB29E2F205FFE73433F35ACDDF
E7602ABE9052B2B647F9ABCDD894F5B623FC02731CC3AA6C2FB993A2435A33C3
84E4042ACA6BB54D43AA9971079764861C94853640FCF3A03444BE273F7681E2
C120AEE18E6936D082F08FA98EFF4E701528C5D281308BFC3A2364D513469063
5A27E5E5AD80882C7BD54AD7857D9CD7F1EBD20FED04C2446> |
22491 <0C1C60D8A8C9B5EE31525A986D05369EF9488AB649D6243EDE4EA0A3C
B4EEE6600DFBD8BFA316A786E87A303AB53ACAA6409824FA71422BB0289E211C
FA5D8BBD9786F972B45BFC58CE6CD34AB15A5ED23D7905369AB8831F37983280
632FBA4A9A47AB8C1AF5E43B561120251C37F8AAB99434AAADDBC45F967B9D5B
AAB28042B30448E4571F11327D334CE2D182F0AF184E4BA169A6777F1AB194BD
57F5237A3D9B508474CEF5C85DDC2FA2510B7CECB27E310488F51C820978AD49
A8E5D5C8E2EB10857A6540C120721B851825FBA9826C246C853649D3CFB4D2D5
15F9D077122C559B9A757E90FAD3FCAFDF56FCEAB38A9F6065CF3662C2CC0100
259F742355A5FF0D8A7D97B4F1D6D0F65F9F0286344342E1A0C7B246F1A1C87D
781573AF0403840DA4AE206B6AE920172F2E7A2103B276EFDF4D14C9E3155E9C
97CA84A07AAB43EAC1CF000672C19B9F1CAC56DD83EF0A7D305CAA30C2CA3E87
DF9A11A06E52AD7CFFC898157223697F6B4D78209524A37D83D0B7F0093FB3E6
D02F0678E6BC761A46D8821CD438007EECF0800720EF94219D70F6AF8D6163DA
0E3A99A68A9BBA2C14BC493891CE318D7BDBBF5D7054D83E0369460FB4C9172A
6BE76E90E479E2F454876EDF87A13801C185448C3692B717AC6F2D760A84AD83
16B1BCA4E9B851BAAB733FB65D65E1EE7BA66FFC8D7076C1C48BDA15B0B9D878
C3B8C00E73B8162CF45CBBD15E632BAC4C7C6AEF2DC8DD7B4905CAA78E0AA314
5603136D35EB99ADD3AAD5EBC9FAFE1759E055C95812CC9E5B2A46D6FA129EE3
C5463> |
13464 <0C1C60D8A8C9B5EE3177D00FF7E47CC7D58B41FAB5BDC175EF15686CF
27A0E1D3B65CC9900E0F60C5D7CBE6C4E6602AF9847D3919E3A44C0CD5A0D5FE
E72CA35E958B495985B3C4A63116CBE5E781079020B595C61F50810C57CBBC1D
EEF3DC40D0C0A5C5617E8588F500005F982E9B1D7600A4401FE5A18E0A2642C6
ADA839A947527E498B91642DB640A35FE9ACC89040578CB3CAF256177E3E7F9C
C0757EC1A08C8C989956C736F7633E6604F64DFEB7A9513D1C38C7BE6E757F0A
1FBB20FE2DD4A1D11050A6E61C85FE2031766151270A0C02BD63963FE4E8BF5C
AF66FC9478D436B68F167C097326B1DAE95835A2EDDB38C587788B9FA3AA7B3D
4B507221041F42FF4A6229291E7851C8CC365E3C3AAAE2409E38EF5D2C960824
68D3DD54BED54A1E3A1F571A335677D46AC99B330EAF1C630C7FD5224515F013
FBD881376A5CC85EF3CD76C2B5B7EA1E3881255CEEDE485E6A87BA8C8BD1B498
0C443A7AE7BD9F66F825DD909F64EF8D8487EA133B76FE778024563F720723FC
748533C0B57E9D26531F44C60CC1C4B6D23777EEE1E320875CD8B978E9C1E577
11DEE27F2CB30E82BC66F344C625D11547C561F06A1F0D7ED6D789AF5AAF8CC6
BB6FC2EA6BA05E4A9E3D68B5D93EA82F7910B2B291C55BA082EDF879873A9F7E
7B77F60EBF47AD54008821148C13ADFA4D6DE16EA9F7A55770495EB79DA58597
BEB1C> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
43.2636 113.526 mo
(3\275)sh
QYYALI+STIXTwoText-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
53.9986 113.526 mo
(\007\211\007%\007\207)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
72.2446 113.526 mo
(%\335+\225z\035n\270~\373FNW\3334\230)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 32 GetGlyphDirectory
13315 <0C1C60D8A8C9B5EE3176CED987FC68A2162A988F4B458C7803BAD10CA
A6D61B02944DC4859F7569D3A073A84E06103E641E4D9E357BABE26675AFE22D
23715B0CA096AECE9628A669C2B8BF8C0611690A9441658C9AEA0AD6095A5D9D
2DD7C37F5EB1F026D54B0F3C2985739E927D9BA22EC6D600F837BCA8BF2ACCB9
067A5342355115873CA54BBF271ED92C4389A0E40D4796333B98D11E545993AD
A8D31A68925CA1B0EF25F76D4FFF16FE17D09CCB3ED26CABC9BA73873465B471
CDD2A87142190FDCB04A6BB33C0D4B69C60033DF396949D547ACEDBBE787087B
D90AFDC2EF094D23F8EBFE512FFCAE9DF7DDBC3898455834CB24C93D5D2FEB7E
6DE9CFCFE1A> |
21204 <0C1C60D8A8C9B5EE31764D492DCCC72903E5DAFF3A4BEA1E41EF08F53
24127674A6592FE4906B3DC0813D4654D1405F315B73AA9D92E9A0B394949C97
38B87B86523D1D8083FDC776F6BC333A30A3FE84C7F879AC437118BFD1612700
A420E1F525405A36E03220C7F21E4394E6C50BFEE65487DB7D9A5305862A3655
51DF39D78F28DF66FA0908001570E799898C18F13C347E1FFD1778C94E8BDB8D
BCC1D62D35A7F90FB5414C3E2D861C4BCC5C562E79FA8CAF54615E12057BE2EA
E07AC584ED01CB80C00ECB98F81843F01118C0E9673AE1B91817D8D566DA16B8
2BF0B17368DB651FC02D8FA9362> |
30394 <0C1C60D8A8C9B5EE31766D90E730547A87E6F246E49B4D8AAC7E34486
9000CFA300B54ECBBC0B6BE3338CFA28DC9BC86D4B23ACDDE40CDA79DE9B8D09
9023FAE5B4B4D53E58D24562FEFD98BE73E93CFCC3B9D75E0B147A9634C55787
8D32DC7AE007F097DB5B9C58C47B82DDA3A5F9F285700BB870FA9DF25A53A4F8
86015FAE0D615DC12F60597A2E1FA349DE6EE474EFA1B409B11ECF9F4771D1C4
2E41494699E1B3F237BFA38A879E18E4977240FA54352BC85C60FB31049E918A
A2F7123D05064857B3D3BE1A6AB368374CB959877E278D6995AB008DC20EDF79
0B23131A9CFFA7A35AA1EB19DD78EB570BBC66991F164B04746B149E107585D9
F7987153C6C380270141145D6E05F4D18FA66DC13FBBC08FCE698606FB42EB9A
7280142BC7596E2FD5E7EA8CC85E8FDF1769CB62654210ECFA4DFF0FB14A8E39
53084D69B5C6172362F1DD9B71B3F7B476ED6B429C48781ADF8D4E4AD33E9BD2
DBA69D11C89BB2DBE8CAB2C967C1097BDC23247B838DFA4DA148DFA59A4338C1
B9415853115026F415D> |
18928 <0C1C60D8A8C9B5EE3176FA390E0D9E8C7298C0682E90C12E98B39429E
D77C53AF7E5760D01C9AF2AAA514FCD3C53E60E747A60061748A8857ACB8C187
14843F5EA96539EA7AF5680E0E8B5EBB72FFE301BDDD7A7CD1AEF716B789311A
FAAAF729B0F4B0D6D23720C62676DE51336E964ED1EE666FD4FA680C672809F5
089ADF886390F0AF674698D09807B94D30DF6E1C619D5EE7146A6B3358C028F3
99FD42C7DF517D46FDBC1FCEFC3C8BD898D7E0C5F699162E75CDFF5B2476B4D5
D2812D517BDD18E9DAC773740A7CD3D7CBCB6F38F5B7C2F0907F58F28B3304A1
F643DB54872BBC2E0EE63C908C92B1AAC4935D13DAECF5848AB87BAA17EC39E5
4A57300993037C99C027E192725E554E5FF84E290D524389BEA367C0885C7044
C1EECBEE0510C87690EB19DB2C3F1A79296779A823D1AE2B71C1907AB5864A6C
E9F042E3852B718B042DC881AF156CF4218200F06A015E0C1ACFB5390F3FC236
1C5199EF2335B72541358E389A873CEB6AD3928521495F0C302CF0CBE6C4AF97
B83E0D86FF78F33719CB243378A4DD5B2DC65B5DC1CB9617AC8B2C7E28C8621F
F4F42C5F8D5731BF6CBD0CA91AA87A8787037885FCAB499C34C79B2FD5CB14D7
F1339659B9428AF350DD0CD5C0CFE8C6FF21B41999BBB8DBDE04267ABE228B95
60A5E2B24CA622D1BE137DEA1370C3199F6C491AE76A6F3E0198D0E0F27486CD
4DFBEDCCD4A2444> |
9840 <0C1C60D8A8C9B5EE3176FA390F10948E5A80E9945FC403488E2323B31D
4468C2127EF97475615D0EBD6707C84381AE7EAD6B4E21F7B6A8FC6E2519114D
21DE128BA02307FD3736ED7FBC0C3C79692654BF9671C2C620FCE93F5920A765
9607CD8805E5309E67AA9FDF01E657CDA1F2C0B0A811B4CA3AACFB0FDB1C69E9
FECA2D8AB4CAE3C69C8FBE1E71DD11A85CB45DA981220406DE47C25D151BE8EC
63B3DC04EFAC9FEAF83D260412A0A145258F7B202F079A1E37201F0F1D669895
671036B4177A149F657849BE2975461674068F4B0E32C3D627ECFF3BBC2194F5
DAABC422955A200CA48E34D99CFFC17C777D258815F03875EB65B1A6D6B4A2E8
89DAF9047E3FBFCBC14D04CEE62BE0A064C8430F73C17065C68F2CD2545DEC30
82AC044BCF87D9C59EBA9F0734B37985743EE9449112D37FD7ED4977E08F2BDD
6D4A4BC90423444903338E604E6E2C96F4A4> |
9581 <0C1C60D8A8C9B5EE3176D0A540AD4D23998383D3001F02E658B30C0E45
F04C52A3702290E985AF96063BFCDA62C0CAD437C2729B3452F8E30EADF6DCA6
0002BD9EA73FC7FE1EF69960600F7DC7760ACFD7DFE688E1DD6FA2B9490E867B
75213FB40C41B851DDF54C973F8B4B083AFEC42E51A11C9C79A2864FE779C7AC
F9247E0775C1002539E4EB82A261BC8EE7C07857CA006730818151B5CAA36B6E
C18A83FB0EF020BB20> |
38178 <0C1C60D8A8C9B5EE31764DCA20703499279C35E8BEF72592B47AB50D3
74CDB8D08442DDF332DC522A1CCD9BFF131CB1431405C31623D0EDC9BD0E820A
B11F333CB015ABE898F98102ABECEADF66DB3C6FD3A26EE7F6D834E242E5D41E
149C50DA6EC9042BA1FC51BAAA34DF6F060F93BC2B5A87DC36FF1759AFE879ED
3D864BC2C64860E19AE4C8FE666C3528310D9EE9FF2CE154C64151AA6605ADE4
F8104F3632EF8D4786532004CF0192F22940C64D205C36055CC5764969267F0E
A676E4F63FC69BD58B52AF557983057A4D258DDCB0F5B84E444402E707C706C5
461EEB801BBC6B8E2B4B2113705955BF29C3292888AB2517B84C05C174F3FF6A
2C39403A2478C41A088303464235FEF9FDFE61C0DF46F2C0628105CF4BF5D1CF
6309550B459E17BC4E943B583257AFFAA436539D6B8450AFF130FE89C55E1B7F
4A44E9C4F29545818C2C45E942D32E54AC8665314DAB3D436FA1FE6408FE5826
A9BB87C863F59818CA5C8> |
9795 <0C1C60D8A8C9B5EE31713EB8051C75E769334C8D967BDBD227A495D097
3A26D7B9C24B5C9345EA76B8CC4963EBF9B271F52D832A3F2706EA18BBF96732
986636CBFB7FB6FB0267D15973F9E999F84ABD0BA61AF0BC9BB5C7FC43A42FFD
1C2669AB4FDA7D30E016E4E00EF9F480008C8A5D1CE29FA4C6495BA8C339928A
ABF039737C80DD47B8D31F016AFB9EE6AF611515D203D1F1B6103DBE68536511
CFDED14FE339A5BF8A00408365477370E4A0FBE4BF48B590C941DBE29FC1CDF9
099DC1FB> |
32521 <0C1C60D8A8C9B5EE31763D2C8C27AFFB75F431644CE65A4021279D987
4938FC6C6FE26165D1E00042ED4FE469E29627F3464DC96E688901248791E734
40BA6C4C6F9DAA023FAE345BA941AB2A470433FCE44993783ABEDE821ACC8299
F425932E3E384F81DC7339566FBCE11B6C1EDECC6026B4173F7EC4B4091342F1
077BBF0440A83D5243731861145CD801FAE4C5DF9543466528553720D485D504
E501BA19BBC590161E0D832BB538843B75D601766E9BF9B0E0BD437A274F388E
17634ADC97B855AEF159C0CB417AA4E0E4A2BD1862C75CFFBB2F42BA08EA1633
4491E3A84D9A334812E319D5B8DEF24C4D80558BB68CB6DC25B924535B920AA0
E7E1DC3984FAAD875F0852D00C24E63CF2CF5A63BC87112F4FE86EBA7D6B3C65
A54550367F11D6F995CC50A870CDFBF50E2370441DC2FB04630D2A321312E5B3
E0B9959750AE81788845167C9BDD01D755C0BFDFF7BF2AD749B39EADA6501575
22FD87091DF6F446372EF96427A11C3CBC62177276B4526CCA5A76CB2D5EA0F0
FDF10574726B8012E741BD86A3E4B6FDD340F56CFA107A900FABD13B79C70A40
38133D5E9E421F114924DD57F8B4F0E6489B93AC4BE531CCC60A34B80BCD6F64
9309E46D1C9DA2A00EC39D8A46A13EA3130D6C5936F1986A4605D95CD7F> |
13187 <0C1C60D8A8C9B5EE31767F14074C0F843C071462347BC363FC1612868
6AE6B1D7D9194E5BDEB01FD17F53DBE0AB2D7287FCB04B03F08C3A046FD8CE47
C48F2F6E529063B5E1D81FFAF51760E8F4DA230002A5C3D52061E23AFB49F139
C195812613782B1EA818764AD667D0DF0AE9E55B41BAB01766CE1888A5A54A7E
9315B6EC8CBDBF92D8E450ABBBEFA2E16E7B61DC06C374C654F5E75ADF2729F5
D10882E14A478AFE22538960DD79B4DD1D31F8189C4AC626293F9F5DBCA052F1
5291FC695363ED34129BB604619E94E04BE0B2C249C814CE2CC> |
29824 <0C1C60D8A8C9B5EE31764DF77AC93DA050D7D9EEB042A1EEDF95991D6
96B4DBEC373EA2A8D527C47D2A09352225E0DB88143B0385B7E424E748ED4CB1
BB885B6993446A92840990EA24A4D8DF867D5558319D832BE2DE45D60D188D0B
B914FBC209D86F08373D370C8FA1D4A4E1CA3A09EA044AA84C35F3B29436097E
33C77E6788384DE23670055E5B5DF5DDCEEF12BCE5D745777B56F5601DB40AA6
75A0B75DE5E84D885BDD72134432FC15B62D76B91830AE3EFD961DBB42D90C21
0B50266299B07C56B2AEF94D85BD0D813E6C54869503E378FB8E4E23D8365741
FE30AB068478535A70475E2CE928E74743C391DE531F88E0D91C8AF5C8996289
846B5EEEC50A7529E61D2389A60BCBDCFE9D7F1DD3E243C8179CA1EF98A090D9
DA15CAA0A0C4727631B06A70238D82C4DD2187D4D98548E2D6EF37B8B2D811C6
8C5CB9DEE6B42D956ADFA2C96491F4A6159509529B3AA9DF987D43005F762EB0
63A84CC3A91BA3269499F41D88B2FACE028F59909B09B66FC4B73> |
9519 <0C1C60D8A8C9B5EE31039A8CB6BBC668C55B6157D9C787C19E3C7E9B6F
059C9280DC26427ED5D800DA572DAAD451B4631962C16132C55917C69FE25822
19540054CF7D07908E618D4BFE4CB72616B561DA53A601ED31B861E7241017E6
43F8FDDF45096AE58CA553647E97ED2716883252DE764712B4A9C33B7988D5BC
484DF213F2027D3C0649> |
11982 <0C1C60D8A8C9B5EE3176FB74D31F6E0132E40E8FCDC047E0A7EB1317D
EDED2A3CE698F15F9E80E39A50E7D2F04ED6BE7DBF0F68C8D458375370D82969
5C00B2F952C6608C210FB1FC608839EB175C8824B1A973B9F064179999BF4243
41566DDD69DBBA985D2BE8DD5BEA810FAD149F1B777498B3E261344098AA3896
16143E090B55753E94420EE006C9FC9F48E116A82A15E9E5EA52075229C32BD5
4EFBFF93B45410828BA0EA57BBE7731F3600108BDB1124C7226B5A75AC1BE6FF
63D5631C9A3365E2A41CDCB14C87EC78300BFF8E96B64C42E1455F7F8F9F6E89
88A202B87334025EF4A7E1891731C47592D2757EC5360368A4649EE66BCE6E49
27E30B23FEDFAA05129D25A9D51A09BF4207602AE5AC251E9911E49D81893C44
D5A0EF40D510DA933050B9A87F09CDD1155173E1964EB23397227DA40871EB0A
18BA84BB972AF> |
13192 <0C1C60D8A8C9B5EE317624F58C89E4E5F6AE4AC724DE242E669EE3D7D
F338D62D2821A0FF5588F5658E1C6D473E8361023453F029C8C89CF1F2BB3798
88850B87FD7648A81AA53681CC2CE6AAECA646C76C1E41B014D15CEBBB1245DF
096206C54E4E2A57562FBE04F7643C238A77C175C769F7C457135646E5FDE721
785893919D66F644E6051958084A4B1241EB268A5F495B20FFED8624C6782E7A
B0C8F149524E9EA8203630F86E5547189CCB4D413247B6D61E7CD0DDF7D29BF4
E0CD363A1B5BB76AFA02812> |
17627 <0C1C60D8A8C9B5EE31760861B755F85C504669FA5B36533D01C71F6E1
B2FD69A0147C9263C796697CFCA2053C5D7B0CE7803FA131C69AD74480A3B617
E3F5848E7CB539F9A8E217BE2624C891A25AC4777EBE4BCA7B814899A6DE8FDF
FCB55E8DF958805CDE633D1CED85480BC955B5976548B1B3DDB65B28C3517A4E
E4C32E006399D88AF869BEE6186EF9B0E08C664CC9BB70A39FA3C56B8E548B91
52DE1C8EF02440B2AC450B12DD0DDB944281DC38BF105314AD4EBFF6BF68613C
75FBDBEF0866C0D843B804E2C7C374E224E871C2EC9E830DEE8144C9F159F586
EB0AF82B4599A70> |
18443 <0C1C60D8A8C9B5EE3176DAA679C7D9CBD04B19F9C342B0DDB9A7780A2
BC90C01F6F3F5499C99923F7D1774D2FCA1F75B50BF4A4D07307D3D5289AC61F
D94297F35E3A57BE3909CD7E90767F7B18C476127A0D6730FFE5F4858F47AE94
EC1D9176CBADD9FC8E9DC253624F7F0F06AB99724331440EC3D1C35D60A6F4E6
235C43CF3D1DBB52F66A21FC6C20CEAB3F3702AF76381D2CE025EB2A23798398
A7FE0951F8C046F2524A241666375A469DA329D4761A3F24C4CF051CA5B39372
8608C304452286FE43A910A413BA48452660AFEEAF570BC1938B917CF8F3E0D4
7F69C76F4A5A33EFACB665D292067EA83D97606498F7A2FC80DD558B72CF265D
44FC36C0744402DF1D70EF65728FC087861B7EE1B7A27E315F4DCAF3BD766D43
EE2EA4FBBD9D45CFFFB6F2BCC7036C73AF597577A739A0DBE4212A16017CD490
B2D7A695ED61E302B2BDF02AC9C7C25A78E84F6975D1647DF375C2F491BDABD8
677E5E62D58B2430AE2C91956A374878CD255FE360335E3090306EC8C090E7F5
EE2C6D230C14BFDC592BF0427A9C1F5F3F8233B4A4814A3729CA81A9434E210A
63280676D3894F7B14D95FB3A0A497700A22929F14F3188C026D4C5C7F1203FB
35191C4EA96AADCFCA908857699F672D67365AF27AA07EA295C2F7125CFC366D
B1A74710160422A30B30FC538957EB4AC72D5C66384D3981D33A9FA65C8EA395
BC7A2619F28D6D62FE723CB7B4AB961DDADCC2C73BC4D2BBD2CD59224F9FE12C
3B1FF5A5E8894011D840A292D060539901528D3A67620DFFDD5D9C5C07FF646D
5CDD036B35A161692263B4EF44B8D8FFB1A4333AE648760935A0A327887620F0
5176686FC37CBF6FBB74A10136182BAD68E92FECC005B3F2CEBF3> |
28946 <0C1C60D8A8C9B5EE3177711BC88E5DBDDA8EF67A20BFF9762D5F274F6
1C355B04025D7219F8F31D3FBAA897D8462D2D47C4CEA9F57A54F2B8EF94DADB
ABA471C1CCCD4CDDD465750CA312FCB520F97556E03CA4654F9B85167A30FDBB
138BCEB9683EE4A979A835C8859667CE70FB69D6F6E94CD1A4A1588B8A2C5F38
25FA3D655A5873AA21FCC126E4465B9F22220A8F20C6A22986F831F49CE5831E
9983A6A3FE63A9A38D5E05BCE593855F1FF9FE3546801E4968C355E88F201B88
66AB6FDAE3A9D575FB7AFFEE6073435506C78F2B7F0112DDE673C1453DAF12EB
41CCE1256505A231514F7BB6CC9454F63BAEA9D189D6C94D5DFCBB9C01E65A23
ED403B9F1583561806D0AB24847BEFDEC55A0A2C3267944C9101844AFD629F63
C010BCFEFA5B607D694DA63363A04E2F4EDE8C09E7F1D77DCA70876E575385C6
06E9146B636E5A3D7EE03FF020BB12D87FE8AB9AB5C38C05740B38DDDAA777F9
D5F533C2BE17EA24AE8FCBBF48904468036> |
12974 <0C1C60D8A8C9B5EE3153766C82C3FA21730AB9BCB6D57865ABBE9FC22
BE2BA34937A333744A8E95E4588CE931D8B9CE0D58CADF834316B39D32839B86
1EB7504CE179F899A0C3883985C2873FF909118749A63F52F52D5934C957DD5D
10D2F51D196C2B5E63897CED3C9659FC0411FB7A47BD9E4B7F36B73C90F0F831
97BEFB9ABE8EA99CEFD294CDB8D5875E4895ACDC84074708950CC5E8346FC06A
34F418743977DEEAEED935CD8048A8F4B5722BC3DB3C512F3ABD3F899347DF6D
C2B78F35BB6B18EBFF894669200C665008F5AC1A08BB5F443947C87AF46BCC23
3D68688E893D2DDBF4CDE2A3243FA40C3B363B810C02BA9B78D8C573FC3C1DD1
162B47AF7AE50871CD5DA43191565E295B7D4BC75F8597F7BA3A62741697C26C
FC9A33603D287FC6D40C89250ACB3DC481ACC63CC0CBEA39DEDD164338511D6B
A8903CDF691FD3D377DD3D2ACFFC94E1C45C79A63138BCB67D7EBF6B0C788044
F0A8563F936E9E9E604BF7437B86D20187C3F0B9AF32117C1E0183C6178B3990
5E57F9B2B4FE38D28C87600469E4DEED2DEEDDCF0A9FD261124B77CD563B774D
BEE49D5AFCAAA1A659F6A7BC15B4B54446015A3905A70A221C879DC441372BCC
CFE7AA1023FBED86BC9551A9273EF7DB85365C707E9D20C41D3740FB7C91080F
7E2101EF9B690E33C627C4A4C41068A2E4E13BA08A5F260491919F0BD6673498
C3209B76A146B8E85038925C3AA2BABFBB3ABE4C086025AD51B8A08A71FF1938
C23> |
20347 <0C1C60D8A8C9B5EE317642C2DB1569A1E51F1E669BA9A88E99924507E
0AFE336C9EF33D96F60773D8041F6340183EF25C14D84C75D9E9B0D0406D8567
FDCDD1C3F948CA8C54961E8A92AE89D217200C99684AD0C91E754CF1FC8AB16C
CEE794030299C0E0825ED81F6518E931FC109F322E35AAAC60BB00AF4B383BE5
FB74D8AF60987252901FF598EAAB961E4F9B33A22639F902ABDEBE57E4963D5B
337AEC330DE17653BE647A2B752B5A91F1FF244590DA76D6E3DA5410F5BF13BC
AA0F3D52A52098B823EF6AD00F99E3D81246B> |
19301 <0C1C60D8A8C9B5EE3177C8E41AB4F4F8EE911B72E2B294C3C2D6D914A
80DDB812102775BAF319EC2F679AF9D1AA25D496788ADE12DFE4426EBE600AE2
AAFA14B30481520EE3150D2094265C54BD544A5F7A54E495DE34C692CE84AA06
29CF40A58793C616E9165A6A1A48DC277293AD3E97E66EDA446C4665839A6D6A
51F553C9E88F2D6950ACA149199F5C7D8D2430EAF8134FD368FE2C5A90B14E53
332A814D9FB91224E927CD0D37717D60F6F0AA7C8A8D3D65B10BE26AD87C253F
C41B1208CDA2A946AED7EAEEF06B20836FDB85ADA8AB133DB8623F9147160C14
B2D374FE298B4E76F346AE67B694ED341A756882EB4103420F842C78AF834437
0EA31172AE883F7A6102A9C2D1D2C7048A34EF5BF0FD06D430797459D7235112
4B16BDF28F523D9A6EFF5213E4645E13AB7814CDF18E44B8ECFA581F4912DC98
8ECD50F44F368AB5EFFA7AD14C2994BDD0618DD739BE024945948FD673F844C2
43F1450E1E65EDF982F5AC20F69DE0DF4378BA7B0DFA5617340156A2C699B853
04AF6C22DCE2718AB047966495F49FA7ED3C621F9B616BAA19FC9284F3B54D8B
4C6F8EDAF61092E1A34EEA29FAFEC2DE197DF1F10243586065F68F43911904A8
CC5BCB4F03CCC8D7466A5F7D4060040D69CA14E2065A21DE5423051C6E3EA5F5
7AFB8D6944135CEC2E3CE718B43E80544EEC05ADE35C0A4295DE0B04FDE4471A
FF928FF833A5B365D309D37EC2F45713DEC518A4D86D3924FC2E446C08B7507B
F5F9EF58F4388913C06DF3F28FCE0C52405FAFA94FE7F05EFEC928FA1AB46408
4D88D28DF167403BCFE4E76F519480E9BD1ED682637F7B7314EB943407C0C3FB
9902267CF0925F0BF9F05F8DA6F8F046AED> |
11988 <0C1C60D8A8C9B5EE3176FB69B25A7F0F825E5BDD402F78E4135FE9C1A
AC16B52CB13747A13B40EE65E2524A417E64C4AAD99A91854181110F976ADC7D
855447DE22E64712CFE0D193992C5DD8F9F18D17E500DC696C26E5AB521A207D
2D9E13C4C40BEC313D6BB4B223023F6D3894C203E42CD1FACBE41CEE3936B6F3
2B1EA7656544E5049977CD6E1945178CA0B9414856F0E34C84D76A8263291902
46DA8AE389129949961B51638017285804EDC3DC5B295A9B661A8107584F167F
2B8A65BB68A6133E3406A21990379D6C48FCE2EB8A55D5A17CDCED4FE1DB9309
ADA3058CC38E786506DD9B1FE934027356A4893A031EA7039FB933CEC019D51C
C3C11FDDA6718AEFF56133F4630D467108D54656FBFB0ED704429D9FF729E352
54FE62114203ADA60257667A3A4B40DF821> |
42218 <0C1C60D8A8C9B5EE3153556BB8F994F301C23E474281C55880022FAD0
A0E732450C561A24B0BBCCD0DF9CB25844CE8A105D933159407D77FBA44F5BBB
9AFA7DC44DCB23030F24D6052B0799BC22E59BE1F09D11EB08650BF43AA714E6
033608786D0049A4A3691DBD035D99A19D62C1A9B6A8C13FD35EB0D7ED7604F2
452C91A0C2DB41740C9E20E61C3EC7A3EA88206D7A7FB1A30F53208AB10AC466
61BA8E571DD1CB87F3990BD41226BA3BBAF4EFBAA87A875B4AB4E6BA3297AF22
526E6C15D82578CB8D0E4F3CB1F817D661DB8B0EC9B49F3DEB6933BAF148BE40
0DA7FFE1C1707D465E8068EEB79F754CDF38C6DB18671D93CBFB985B5E04B718
4FAC3F92AF89BB5D1387D7BFBFC4B8B8093B66A4B528C1FD7BB230DBD968BFFC
57EB98F7B961F9EF0FA5A0D88389201C4045CA7C8841C716B459F0A11F01482E
B31BC8A9E602FF4409D9B871BB6F1B6EA10DA0BF66722735E84214C901289466
908C013E2A9CEF16E114F71D1CF400826AA6F518283C024886A82B6EF776B9D> |
21224 <0C1C60D8A8C9B5EE31713EB8A01831DA06E07DF6762B4CE8E2C66F5B5
D0394FDD0BFF2BA81F8B180C8FF4F94B30BDF884413ACEF01B3D76B5E9E0F2E4
18FE2E0F7FB15A9370C91EA05037E069177682E938B49E192EA8DB1B482EDCDF
A71BCE6C5058F4B8B68BC069BE639FDAE9AEC64C2478F022585E97D4E31CDBDF
E80B95F5BE7C2AED3769FE136AE7CF1632484B6F2964F9EB16C4619B80A43002
C0C4E0BD86C2F200510264BEAABE713B132BB746E2D0C8FE6E0E5999F6071F13
A887BF71D8D68E9600DF68D5753C6EB8932DF3EE07FB5583E11893457B8AE5E0
E7C24A8AD8645B6F224E09B3CC7FCFC7085B4AA5F561C726DCCF533FE727E659
29B4CD32EF32A9F9A3CCA744FD8011763010F16C0E2A3A3568DE9D959F4F90A3
9C71D061935242E0363C66524E129839B44CD17299D6C26C318F754BAF2B9768
E5ECD29F96A45B78D5CEE46D6B1625422F247C5CDF6389D2887884DBDB9> |
41112 <0C1C60D8A8C9B5EE3176E10015E3A1DD9E149189A585BF5CCDC4F7B60
F082059113A4860792CC0228A82633CEC0FB992AA5680D0ADF534552D0F5E316
B354FF662F7422D6BD8A3CA17A4639210B19BDE382ED436C75E619CF14A39836
A9F3C2385AD32ED82E31FB2D25D09731B6532B940D960986E3ED5495DEE83E41
E5BD6C5A072EEAEDB21F640089032A1AB478CE65DD11F46B9D66A45596EBB129
5424802DE2B4E9BA86010C6C34E3294D790C5AE73147E56D69E70D037334A34C
CC374B781E399E9E39D69448CF21FF5103D8E8FB5F410857F055B08D10CF535C
71C81696733E33EAAE11BDE9B2D111F1CAF07EAD793C88C5F36059D6F3187006
AB2F33BF345BA16F7E3CD14CA28E3647ECC1E86BABAA8951AD3742DBB5C56C85
A4A0338A12EA735196D9B636029FBB5CA425D732502B5F1C34141E695E5E9984
5A14CFD7C738CF6650909DB362CA504429EE66AF373F1F8E7C05FCE4FD7> |
9714 <0C1C60D8A8C9B5EE3177D449D907ECF62B51B31293B3E02C92B5427D15
4CFCB0B6F93304C27A6CC619F0CCC4EC9A7F3C29F749A2708DF90C7137E899D6
84E8385390C00A8A9866782426E10AF0327AE92D3E6B560AE101E214BCBD0BD0
9F6535DA3FEA60EBC7574966C433A06FCB5C57F3AEF2EB5F40A3581A2EBB92CB
798A81290823B47264A050AE255107A33124F577078C36E9C6D00F5C2BDA9151
A776BD091517C844FC47B7557BB16D7E4827DCDC5E81C1EE55ABDB6894259348
5BB4447EA1937962777726088D71E750A75B0A504D4F851FDEC835BE2F14339F
FCFB9E3AA8405FCCD3732997A88518455488EEBE9A22596ED005186B8D705CB8
2C6858457416CB56D03878A6B15265F6913A885BD14C0D8A6DF6FB56BBC57824
5E0A345A8EBCB5E2EAB7F4A8F5C41B1F60E6397D5B9012CDF6A7B4BD2BF64616
C6E8B9250787AEDE07E4A477E19CEFE0A67A11A737766D1EBD04357C5B0BB2FD
19FFC5B7810CD8800D23063F95AB68971A26FC4ADBD8E15D8689C3828F1766A4
392340C374B6100280746AFA92EF060EF5B8E182913490A6318F9D06DA68FE7D
AD8C25B692B6AE97572A15CFC2E3007597AB81A7F4> |
11668 <0C1C60D8A8C9B5EE3176D5BCBE37C01374214090A0AF1A22EB2BB7C02
DEC348E472854A1BDB6A063F0283A985282CC219F20A2EAAFB7EA4E1D6C30D48
E258275BDF9E9A2772F0EEC2AC77EAD8347C500517F6C24A62C4AE0DB0A97A85
668DF2506BFA7FD17075882FECF382F55FB669D486B06CC7ED7B2A2BA8E26F7B
BAC5F3C27A475A228F086F7DB2A6A938A019E2FE925556329560168CE67CC3C4
EEA0FD2923F4E2DE571745CA85BAEE7FE4D0D4CCDAFE33BEF> |
9695 <0C1C60D8A8C9B5EE3176FA390ED6AF0FBD8F412D96E6B11A217F453A67
E6061D6C80992D027E6B6EEED25F281810127ABDF3977457B9571C7671509785
298B0F2F94578345A60A596C43DBB6D1F1567DB376043B193C4A5F4DED4D580B
5AACE99B790952524CA10FF91550D328579CE0F9E6597CB9CDB0A4C744DC4570
3884D0CFE012A9F707833A9A37F7A784E3B396A4C0485A495EB13431C6A43BE4
692B1F01582C4CB0D129E9584617F098C43CF03415D9B46CD581> |
10056 <0C1C60D8A8C9B5EE31764DB97C826981E782AEC572274EE80E345E4F7
FB6EB441365082875327C18F3408429FFEFA8B94F7A995C3A7C60DDB198B51DE
F6E3AF69744CF4CB545D9607AC6E2A3AD8CE99B97E083943D9A4FFD5078A6B0C
B10AFDA1FF481BD086CF2517B41B40DFD771B96DB9B1132ED0B4F0C3D8C00BB3
634B9EAE73BAABAFF75A8143B1968488739FEDBDCBC4C5A4F297371DBBEB38A5
2E9719D7D407058EE8C0F17B269087B9F747B6847D0652A1C286BDB1068010AB
5F2DAC1EA1BDC380A55B61819F3F45E02382938B2CD9DFEBE584072BB7592720
E14B7CD4D0A38258BB80B1185A585E0A35DDF8733021361F0843A6AD43F6E75F
8F9B95F565065A3F32E11C3895B447E11E24D508E82733697F27A3833AAB6F5B
F5D485045E667881BF68C8D330F0E7D7217C8616124FFDAE92CC3A5FE1BD048F
56ACDEE530986400EF135818026DD52683E3C689483B12F857F2DF5B9E9EAA10
E43D3B86E001D2EF5092063A0CF2A55C3FEDA7C94814F09091EC2805ABFA594C
645E014AE7B2413D8E05C6C33A08A451F58731D4E34B52A50> |
27680 <0C1C60D8A8C9B5EE3176FB688089FEA81259DE8036EC6E8B74090D3E8
A7AEF33FE0DCB50B742A3451B1110FC8FE800F404F74C78C50EF668AC16AFA42
52C1D6BBFD9FEABBA56480B27B5F5FD04AD9D865846BF0A258132D4A4180998D
2ED1BC746A8F010C5FB98DDB931C18A4AD3AD8229318B074AE540D23BC84A9FF
1AECE9553D00457627FC612ABF5F05C39A45A9B79BB5A53983589F303C45EBE4
C8DEE9E57607C7CDDA182857C23E108056BD8D2B3B127FE6D73F4FB6B3A87B79
66D9E9B6573FE77A5265AC6EEF259F2FD5F69201102B8A69E1CDF3361CD22E01
5FC055845BF9C6DAA3723D9C2FCDEB4A9310C5272FCAF364F81C5AD78543BC5C
B2A92E4F63337261B291C7E9A2EC784C66B35CC173F1EE66FAAF0A66B940CE44
14487> |
9687 <0C1C60D8A8C9B5EE3176FB6B1BFB61988C948598F418B2ED8F2C4C929A
9664D0407D22B998C6BC91D42EE055769A7179144ACF64A29B886402124AD304
D3966F4BAB0009DC7A51C24817E323C9A773175A8FD6CDE19D1A422AA67DB642
327865BDBA52C688578496049A17EECA22A8422969E4479FB324A516BA85BB6C
A7561504CB10EDF1F205514D17F22096B0E7E0D225EF1490EAD6359E89A6C49E
A8B8B82F0B7F0A632D0E65A432BCE78F71534FA6A27CB783FD2146D55F854C0F
EA49C8B28395A11D> |
19457 <0C1C60D8A8C9B5EE3153761D1596C8FB6A6DD5B104608796641E7A1CC
A3AE2CE3B971A03F0DB1231CC6C0BC9048441C476F032CD38F49CC526E2E0CCD
19AE41043C3632DDD601C6C806DF244E5AFA06634EBD2EBB8295CBBDB8833B38
7F33B90FA310089C22110263B1453ACA57D1A45B3D52C80BE71F7FE8F20A9BAC
8C559D3B1F03008668DFB1FD18A6DA0DF1A0E1B86B0E508D87B4EBA63B859D86
845833FA08978573D5A84A08CC8A231E880D2F78022BBE8D01DA01D6502DFF23
C9755B84CB29F10B8C47197088592582AACA051FB27E3CF02D3458AA1155D735
79083872032A9F0E57197C0CA5D71A0736C4DC96B69318B3DEE21746C4984A28
10E8C871773A2838A962185919066A35273B47631D42C5DB6ABF3E5153C7D6FA
04805BF4AB3A0A329574BDF24ECCEECC9CDDF5C1706C87F9C9107C3C140D38C0
8E110F270462B1E4E187AB5FEF069097C476EE343A8921246C564E9D454B05DB
E4E037B22661E9C0D8841D482630D696A35ACE000EBC7CE0AE939D3F96CE44C2
AEC175BFB93CC8ACCFAED59B6A3E96A67460EAF6A12DE88C788CCEBE91CF9743
353200CEA4FE60184EF0CC5B60A7ED7690B7DA812270C28A58473A25ECCA590B
135AFD573FDB822E92BD997525658755685A8029FAF> |
14180 <0C1C60D8A8C9B5EE31764D93991B08B8AC2D015460491992FA8024F4B
6FB065ED5C99EA1B3D8A10D655D182AF3C7F4CBFFBB2A92D6A41D398B1325B08
252D400CFFB0D55A031D6576DD136D8C7503190D567737108AA108FC0940D0A4
7587DB7599F22471DFF150947F999233D0352E10DBA55B04AB92BFD84C9D0D6B
6B2873D0DA6C825AF3ABF6DC7F3A8E89F15D12EC8A3B5E86E4E1CAE1999B4AF1
D125AFA51317E3B12895D164F7D17F79AC3ECCB7F993550B499873DA819AA15B
47B6E5F210BE83996CC813BDD3C7E9DA9608B440C3E87A3059B17EA8FA404AA6
4E589F1532340082C1D499CCCC042A42A45F4751329B1BF806F1EFBB3760A97D
DE9C4FB7074E582A9F098B0D33AC9B9645A497FFDAF0CD6935209> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2194 142.71 mo
(4\003R\324v\272)sh
true set_gvm
%ADOBeginSubsetFont: QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QYYALG+FZSSJW--GB1-0-GBK-EUC-H 4 GetGlyphDirectory
8018 <001C60D8A8C9B5EE310DD7FB7717A8768FFFE64AE53D7C08B7BDDD583A
AE6DAAC8D1BE57F186FB120E2844BB3A64C7047E94EAEDC6> |
8032 <001C60D8A8C9B5EE310DDF52E50848A87A2C536DB380BD1E44C9CBBB54
04535AA5488094C7293B2E48BFC8085E4F07948927E2CD336065ECC569B2B446
DDD61D818BF39C69B24E22287F14> |
468 <001C60D8A8C9B5EE310D85E386A7EE0B344C24814A64611DF6D1D885390
24587E101A4CD306B4B468FD97813D6D602400068E8E1F4E520B904A5BEAE556
14C4883> |
8020 <001C60D8A8C9B5EE3137434EF3A39EC30B88FE58D60DCEBA946FF80E31
2F5D4C750E56CBD746E4FD> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-23.4604 142.71 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-18.6674 142.71 mo
(I\360&p%m\225"&C\177\0113\203t\200%/.\316~\373FN+\225z\035W\3334\230)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
134.713 142.71 mo
(\037`)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 12 GetGlyphDirectory
14 <001C60D8A8C9B7F2A78FB5E5A3D124139B7FCDC27423AC083683389AB9D4
77DCEE51D084EA0547DE7FE9D950633511AB06566D9861C04593C92397E011E8
684D922EDA1D99E888A1127985D0CB399E5A82FC44E57C67859587B15D2C599A
54C40D29B2DFA2205AF2> |
270 <001C60D8A8C9B7B9B9A70203C94C72F8650FF01434C78C5592F4905F0DF
14AC37EDC670DCA2AD973A18FE0903A7595F4198E482738E2C9D85D1640B65EE
6C5F1396282E87E6ECF5088264784500BD9110F04364E01F42489> |
261 <001C60D8A8C9B757A3B7691E4ECA083FB33DCF6DEFBE07AF9BEB2B99D57
48E17543BBF7734A464930BAE965253FD972C3BEEEA75B348A496B865A850CCF
D1F481BAC840994F593CBE58149F65DBB92B3DE8C271E64CB25F39F925877CA7
71C6E5812A9AC8773906B94D5905E3FB383B93876D26C1FEC5C266D3A859A375
67D546228282CDAAA1DD8FDEB324B785F2302CFFCE4A534C355205BC38F40811
148E564FAD61B19B122D98385F0EFC014B271329D61C7BE3AEA3BF8E704291C4
2DB9BF5DA7A3743AE175E71DEAB401E36AA92417B4A66010EE47B10E319D3550
93536F42FDCCAD4314FD58F3CF1406BED89217311F095743F614E8FA985F125B
A45FAAA95057733A94D97A864A370070328BE5349541FE2BE3DB36C2669F5266
7AEE49C88A01BA0917FD2C02A006921C88BBC7912F9500CCEF0F0F8316136263
F44AABBD4E4BD2B054B8188E041F7DE23352BDD256C533075B38425D603CFA6B
6575DC7EE83BE7BD05487C0E7D56491290618186CB4587AA12A5B715570D690> |
263 <001C60D8A8C9B84FD8F978225871D27C16F3FA6F5211B9BE643EAB270B4
3C5BBE0139AD36F78556A71DCB0743503BFE948344EF720107F747F912C2C3E5
8E4EC26F9FAC97291CE598FB442B014E659D18375A2856C9ECD781BDA7D76A6B
BCB6655FD08FFC0434C47A88C6CBC75861C3CD523> |
274 <001C60D8A8C9B7303159BF5CCAB92857D98041E55B685C9384BE83E34A9
DDAEFAC83837B3323BB8F78733734339883C2A6B3171A62AB8B073571E15D156
602A2C9704C67EF9717E53F373BEFA2503D7AF25CAD8E1B15944A979D52E49CA
47AF5099E13B047FBAD6AA95C61D6AD67A921EE161850351DA16E69B5CA40FF6
6BF365E0C897F30BE4150F464944D26B03DA14FE1EADB56F21CB5C6AFEEC62D9
919594EB424F5D5AF005005C371E796385CA66EB6ED9081DF68869FAA2E28A5F
934EBE5664049482ECFAF13F34A3764B98CD3178F63D47EACB1650EA846253B4
18D92FF6C128E08FD6E95C414760C0EA06C> |
275 <001C60D8A8C9B831A9F5E9CF722B4827721AC81540C52538830F92850FD
224EA54A97B931B1DC60C0477FC125011532D8AF0687BFB5F38CA3AF53467A9D
FDFAB357FCE46A448480452288735E07092CF> |
257 <001C60D8A8C9B77D5FE21766EBD428C0C31D05A29243AA6B41AA99E95EA
18883D5B58E27EC273978E6D63A48FA6A118233C832BED952E2FD20445D8F929
23E5040E9A65F6ACA8D20D71FD78FF9D1AB362290CC93> |
21 <001C60D8A8C9B7A3FA357579433F3E2DEBFA0F62DCEE479A26AEF589B427
3C722568271E0005932CFCE627FECB6F3265AB934F0EF199FC9E45C5B120A1C9
5F48210DBDC1794BDD0AE385E3785D96ABE868BF4435B82A6288F52A6318C26E
A91CC6F18438302F63ED6A57888C2EEB35819E3DF98EC5AD0DE9A3D1DFA66F5F
C3F4F6C8B4C13A63EBB9E566E2BB7BA0B00EC96C316ADEDE2EC7B834B43E8597
40F9F7D9088D4D4D1FE4E16A5E61D856B67E6F918C1EE5A3C61A998CD0439FEF
04D1A93EC51CB761F2AD118FDFDF35D570B639B897683E66B7A3303161E256E9
CA2456327975F3B522902BB7C9D667F29E497FD6B30F98A770E58D4AEA41F9A7
CF1DF61B046217A109C6AF48279E27021034EA701931B8E5B144FD8E46411EE9
BE78ABFE5E0E65> |
260 <001C60D8A8C9B839157BD862BAF5E7ED6E8B229133826DA7FCC0F69E526
A701BB76BEB113D50CFD7058CC1A76B7EF9D6086525E183F2BF2C86E9086F0FD
EC730E3CB68B91AA403811DE66DAD07C3205EA65DBEE22DEC7B3A827B24EA4C0
6D4D23FEC8A75FC6A> |
268 <001C60D8A8C9B689682ECC1668B147E613CAAB641285A43C1F494FC6814
BAE081183BAC55A86C5C18BDBF17A019FC3677582F1C54C87DD7C18D053297B9
773E67A987957D4BEEEF0B188B8A1C1D1F30A69E6FEB900B759F73D4CD21E153
7BD14EF2EFE621228D8F0FCA347D711ADE3603477BEEB739D586A47925A938BB
22AC62EAE75D7AB148729DC5488AF8FB3E40F17328DA6BCF1733874C5B64D9ED
30C711C043AC0FBA3661572F2FBDA2DB762F45778FD4252A5D26FF4911E30C56
F7D4C9343B8AF67F17D659443DC6B9BB215543F6F50C9DCABA05740E6A19E8EC
5F2EDF592DF002193BC4464D96E778411677323EBA4525E7F1900D832582BCF0
3E2> |
255 <001C60D8A8C9B75BE56A03CD7ED428F96C87303E484B7F97BDF1875802B
7509FD137B0526C3B08CB69C6CE263C92F23F78B025BD396889B7C2771EF6E63
37BA1F0CED1376001A6F2EFC4F725DAEFB15ED85827A6E06C6ADCF1810E11195
21C2008749A7666F2C22C57992D918D4D911FC05A901F0B509EF8E18F3A71F13
355D9034A09BA7AD36464914718D268C9D17A9385C2D2DC63917AD3692FA64B7
588B2C34766EABBB3D217942167A55C7420D1AB122BDD59C5767BBFF6F14BE2E
FF4FA713E64A51CC9C3BDD5D69CD2C1B39D0F5A19F66763A1F5CFA8ABB9> |
279 <001C60D8A8C9B75CBB2055D3CEB43F210BE01163F9E97D7E57C9449AB9F
D55453DA99C49027B7A1F2350CCF8BC199B8DA48E42100F0C76626538A989C6D
6ECE819C5B97C2C2034147CA51CDE6D41EEF3CD9F364D05FD31B3341DFF368A2
543F203D5A369C8B143119062031004F931FCEC6A0F531DC8A24901131008BE8
51428A5B17792B5128EB1A4A4747B682AFDBDF78D21933EC91EF1CE96B0CF03F
06A759C0F43D45B68DFBD59F06A003E8C8151AEF9529604DBCE70B2A71707F32
C25BBD357E80A61DEFEC2F2F61B776AB3F8093351C1CCE972D5E1EF7C9A28FEA
C54676220C6530A8BE7E0D312EF1F4CAF9C92D1B4EB3D855B2417C75A1C310F7
24424E60447> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
139.506 142.71 mo
(\000\016\001\016\001\005\001\007\001\022\001\023\001\007\001\001)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
173.829 142.71 mo
(3\210D\333)
[9.5862 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
193.002 142.71 mo
(\001\324)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
197.907 142.71 mo
(\000\025\001\016\001\004\001\023\001\014\000\377\001\027)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
233.645 142.71 mo
(3\210D\333)
[9.58621 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
252.818 142.71 mo
(\001\324)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-72.1444 158.252 mo
(H\013q\0222\256/\225O{Ke.\324\244\352R\350)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
14.1316 158.252 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
18.9246 158.252 mo
(\240\230%\362W\3334\230n\270-\224+\313%m\225"4\003%\337'Hl %\327%/.\316n\270L\0017d+\207O\332)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
220.236 158.252 mo
(\037T)sh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+STIXTwoText-Bold-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QJJAAA+STIXTwoText-Bold-Identity-H 3 GetGlyphDirectory
1929 <001C60D8A8C9B7AC35A2348FAAF238B9C27DDBC74AF6E5D2998A45C05F
E660D23277BF81FD9034D9E458312E7882EBEB855ED7D38F13F7F7CBC4126C99
6810865789EA8485811F922B3CAB873A7A95D811B01A34BFEA3815304C4DE268
3FB8EBB1B16D9562D8C853EFF6AC6F3FA757F78E81BB72E5738B173C43E5C11C
0AB6CD9FCC6A1B4B28B4DB5B1D34776D88B7B65097A19260D749690D5D3CC674
29142B1B17DC1755DEC0E37BE697449DAD82B9F9F0CDD471F6F467FFA5806EAD
B98CD646A836> |
1829 <001C60D8A8C9B85677F53A1F3017324DBC63208E3F743D963D0FE3CCD7
1D0225DCE0963191C34D89B24431B4> |
1927 <001C60D8A8C9B7AC355569D809DBD9B938AE854A993ACC54E115675366
CF1EC2BD240148EBE26D737225730F1F4A9495E5C74FFE83FD3E19FB8F804373
7721CA860B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALH+STIXTwoText-Bold-Identity-H [14.3462 0 0 -14.3462 0 0 ]msf
.0876007 199.384 mo
(\007\211\007%\007\207)
[7.1013 3.95956 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MZQAAA+SourceHanSerifCN-Bold-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/MZQAAA+SourceHanSerifCN-Bold-Identity-H 11 GetGlyphDirectory
32507 <0C1C60D8A8C9B5EE31C82ECF506EA13450218083BFEAB464173B8DE6E
0115BCAAFA5017636ABDB95D5B46DE9B036C6A54F066FD494E6D9A0C0EC5A9AA
F37C83AFB112AB67682BC1E004175BB6FAA46757CD11A15BA0D6906674BB7921
B0C7677AE5DEBAC76F892E645A22A77C1963D06B53EA829C29CCF3956F09084B
8654430468EFE1BF02E9F4A25528EB99D2790914D88B6FBC881C612190969D5C
DD74EC9AB1FE8536DC5D3BFB0847126092CEFF32EEB2F9A2EE441A706F4B09F7
8A61356EC4F348482C972040FFD11F46DC388CAB4DD688786D8B2B95F04B7135
D68947808CCA97E5A3C58942505C629700DA5E1423482FA10BD54F77E2F10C25
E928EBEFB5EEB0B9F7721CDC89A9FAD56AEBED639963892370ACA13EC5C84AFD
14A50AE4C4E3A620604828279316F963C388516BA9BB709323BD92653796AFFD
34EF921FCD7828616CFE881EDC9286C8CFFCB116CC6E43227DC908A5C9C23C07
1E36E759AECE0F6B2AB08BA04BA7B307327E62182A23456B65DC2C59551952D7
DF7885C21217E08C27E8120865D5FBDEE181360B27ABDC6A83A601EC075C09D3
2A4CED33FA110AAEB4EF28DC4988AED62E2238229D92BB258F6028D770FDCE1D
16295B671BFCF4A537849DA344035639A06604718874F16090D4C946F4D11B86
FE7D2429A8010964F280AD0913C64AC0B45B435A67351C234B4116B8C49EBB94
6941FCE83A7C7621C2A1D57875E5EEC18F0A8F4051766892056D3263DD2888C7
F09467C1D66367564C603273840A5C90CD0F7435E7CC21A24404CDFEFDAD42E6
B85B48ED1E3A93D0B44872FE5AA123F39CC> |
17998 <0C1C60D8A8C9B5EE3176E99ED1711FF46A6B765A23066E56AAFE45A37
1B3BC8DEFD7D25D8AB6FB21E0ECE89C40E8F3B8007C8951C4F415CA836C70422
526C2D10EED397BCEECC0EBB59C26F1DCAD0A2452C5B75C238662905B29DBD29
D44C2EF2F111388D4B9C1783A28350F0FA0C4B97E5C8FB298FFCA12EF48BBC83
413D1CBCD0F8EEFE4287F158EDB1E4749228724C4E2741CEA139E475292FBD49
E9F937F77357EF329D2213F591D9F88CEB88F53A831007D3BB45F9C0EA2CCF9D
0C3D5DB3DB98DAB76895DD5FC987D73B9DAAD6F58A056DD9704665997DCDD6F5
8ACD677DE0B85B7DC7B3C9EE7609C5C279DF2AF76509128F21F2A995423B7B1B
685709CFB2523D53BF62E90C05E9EBA0C1FD10061DA8486EE0B9ABC11EA21C20
BDA109C93DF895C1DF2DC51098D99924866E7767828730D0A8B860DF88F6AE21
7F7C8FCF254E3D241C799A1208385B606EAAA5B34EC81D0662A17C45E44456DC
A73628598FEBA945F12393FD59405B52E9E03BA58CFCFCDEC1A23D930F5B4234
4103485F2DD48EAC798B5C84C2F6D78B7917EBE599FCEDB2C49E31098D09ED97
C0D742185115A23AC> |
11200 <0C1C60D8A8C9B5EE31764DCF39437BDB0DBDFE4BBB581283F23F9F58C
39135A88B109E3BF4EEE43EBA7E1F25B59BA8643B8078F82EFE09C078FDF1840
BBCE3365CDF8183A4F89B366BDC63704474BA272F46640A3A6D87009327F85F4
5C31D69D9752781DAE32476BD713EB6E4AF4DF64AE0FF4F98EFB5C0DE64FA0BB
F3808A06DEA1B0BE1F6712EBE1A5F3095D2CAC770BE47B479BF8E6774DD1FA54
0AED9F5E843E502EADB3006E3FD0AE8FE2C2B01EC0A79D8BE496377773B23F38
136F36F048F7FC875A8AA6A77399B48411D3DE6ECA59EA5F411C151E4B44B028
978503361E8663573764EF865035E925A9F4112620FB4D53C4ED8C358444BF6D
2284C1247CC35C88A95A898DA8E36E299488B629522415981E420DF84869AFEF
3A3D62B25A62A894308888B497F44FB6CDF0B94A3647FD9EFD5577561DFDADD4
4B9E0F8E155D69C700B820666D27258C99F1E5B9F47869A071A8A7BEC9C75F4E
A83CC7286CAC993FF5A09DD94490628BC4A65D6274E77B00CFABFFDA2EE9D49A
339897892889A62B8C39DF95A9E75AE8232AA3E19B363A8737BDE99847437CB0
28DC17E2DBCEE9B42668FDC> |
11211 <0C1C60D8A8C9B5EE31768F536EBB89ADA77164B3D2B5F51DD4EFEEE22
BEA7A28529FF9D5D3C5F84C68B03E4E7166070A19AE1298BCD248467687372C6
1A1F8541EA0E2C99E50CDF97288200F6118DC1430A9DDE075EFFE39FDF7BD6C5
D2527DDBEBDC368D385B83669FA410004F84FE7CD40D9A66ABEDED185F6E2668
2FFE0005BCA236C74C47BBD3534D4211AC76BCDF65943421DEAF869D2FE08843
90B6B91510421CEDEBB6BEE466F2E6F61DE68D3AECA2876D86271DB5C613D6F8
5748F7CD4E772C038B842A8B04D4582DA551C520F8A6BED518F9756EF5F6EC5F
E4C72C185CDAC780F1D9697E3DBB9C61932B6F832A4119BD3EB6033325EB254E
7E65E2D1948F840BDA00E8213641CECD6DA854E419DD9161066550CBB3025E97
E558D265D0A274CBD379D65C233A7C5373C7789E32BA5AF508A6E28866A1813F
C47A8A8EB18F5F49A0223CC99AAE2F1DD73A52B73906A35C944BFB85049D581F
ED7741AF8CB35D415A73D526E5DD79550791EF866CA2E47A0F069CB1E3C6BFB3
8C1D6ED88B8257BFFA6E2EDD5F0FAB74B4BA0326DDBDBBD140B778D005A8F95B
DAFD3C94CC2AC342020E3346CE2EBBD9EA28D275111F3C82CA5048EE779C5A5E
5F427386352B59B67C6C9EEB10457B9E4EFA4C68B015EC153A47847F824D2C63
8F0875315876FA4> |
11143 <0C1C60D8A8C9B5EE31763706C096899588D04E0FE04B5BDBDC3AC64A8
EB229629E93007FCBBB2BC3B150AF692AEAEB255C9DDD2BEBF50DFB84A9F8CA4
5917E828348B39E3E1022A4986515AB6B2D884D8A04F3EBD9F017012D80EBC33
5B8CEF63249AFAD4A2AF4CD0DC41A615AF2CAD675BBBD29FE508F7B59D5A7917
CCEBC9F002423BFA349C4BFC6C850DEFAD7CC888077B61CD3C6BF9B6B55E97BC
0159546B70D5D978D33D269AA5150D3D9E1DADDB34F4267B452B2C4E260D261A
93CE2539D8CB35054097162398A1FAB4924BEF10AB7CAFD1DE61198BBD5BC506
B43775ED3DB2A7815DCFA3A02B4CA25E13939431398068F18392FAE3F5EB984B
C664AC0848516CBB154BCA9D9260004A4EBC54159BFE34E7E3DB834C498D9E07
339B38603C250FF40B50E8FA24A0975806D089548F429A44052742206E2D5532
8E4CFE332F90F91AD1BF3B9AFB8B0CE59FAD47F12A5275B2D6DA1AF43FB23A8F
0C4ACEC67D64D42EBCE1BB043E68097AC7300442F2F37964536EBE66BF55C32F
C286DFA> |
20442 <0C1C60D8A8C9B5EE31764DCBF02D34F732F2CE09D69F82356E9414311
D7605EE0CF5331CBF90A04DCABAB23AC6456C3E7ECFE794A3BB8B46AF6577ED0
38789A13A07BEDEEE136B08BF6D972DB97463222F2148267DEAE00AF4C78415A
5C7EF007F0DC165F78FBD4C41E34228F460B4ED777A54CB28520062E4E5AF853
085E28FA99BFD66487BE2C3BBB9BF40E5F716B8520C7555DE8BF92621EDB4060
04D2E2E2EE8D9160B60F71C392C48DF5F4E3D7049009826B30DD950929C3402A
4804A0E52C182036BC7379B16EF872EDE4C93F6A8B6E7219438CCDCED7B18E6B
973B3A39B4C9BFF942530EA084DA0501484EE19DA81C5B7411EC32C6DCEC2D58
98C9E4E60B5AF10A81B20A38A74C0DE2AA68B5B9644C31D9A42443E6D3100480
3038FD19FD22FFAD137B6FA64697C412E64481EA4165BBACAD7BD6730CC03815
13801592E684EDCC9A13A9B96BA89F042F599927468725B2929A83FA7072F10D
74392A293853D3D41790B38717E11B9C3C804A5A6D0003E0D329A5AB73FA0326
8DB461D7948AF3192239F532DA014A7DA6992EB0AE1388AD1BDD4EE9DFB48FB3
3D862F4428121A22712C758A521B5586FC93429AE045A0C086B46FC9C457CD75
C0B96256FC886793404EBF8A2283C5D20AA5FB7D59AB8EDCC283EE2A48FBB5C4
4C63EC814FED80C458DE2CDB59D35C65D9B86DB924AE938D4756C6D2BB143392
D51110A92F418F013C30D> |
12181 <0C1C60D8A8C9B5EE317657D45A712824736616950FD20E530D5CF17CC
01D4E0D5B40B670F875EE8CCF93BEEE8FE2179893CFF1B530E89E0DA09287753
8B1EB0E358BD9D311BF27A2A37B8D907638B091D41495880B06EB6AC2A1BFC6A
0DCF52A59EB5553CBC84B9A4552D53E9F05AF2382CC3216B3FFB12EB1D3723C1
3D4A8FC046BF601D3FE884CF299C96426C1C7874B851D625CAA61E72B4B392C5
273E036013620B49A93BE5F36C848536A0DE80EDB664D10B0C0718E199375DF4
CA318E8E77DF3B3D7F1C7DAD520E36402F607C847DDF3691948E91BE7288D433
07A24C7A2FCEE776B258844D301DFB68586C95C8307762E5C330B68F4F233324
81CBC3643FBE8F22A14> |
11025 <0C1C60D8A8C9B5EE31764D8C237AFC01B3A83E5AF26E745C9222F273C
7C75889CAB2E883EDCD368F197B6942E09CDACEEEAA7AD9AC4BCFF22269421A4
E97D9D5DF050F7BFE5821BAF7505216F23F0E0943A7939419972F1D70F049FEF
4C7F4BA1CEC3B0078ED772920311469D366A24CF2249A4E97D51DC9F4151F964
BEBED4B1BA825B6474D640B9A24894E0FB1B3BAFE86F70524F15ED7BC4C88D87
3ECB1AA395E40BA3F88D24824616A258E3AD9DD1571884229AD3EF91E7112969
C99B48A71F0D4FEF585423CAB0F88A5F31978BDA16A0F449AD9EFB698D0E942C
48B2CB7FED4FD4B6232E3B336EAF6D9DA3620D382A07EC5F4F57864A44454621
56AADF7C485821F5ADEA5664BE91E70CBBE4F48963B8BD761EF3AB1CBF69D9D4
3851AE6E0D20438462C5AB6ADF29032C85EBFAD3927A956A75DF475C7F9ECDC9
D78B5BA8EFBCF1BEE820A2AC63CCC876BD5DCA4B13705A085DB4F307D86EFAA1
F347DA9E0096C3D25B5F054665AF3AD0EFA87CD12C4E752542E2E56422C20EA4
2E59A3EA9> |
30636 <0C1C60D8A8C9B5EE31764DE77F68EAAC3072B84C5BC3777F3048725DC
A7056BA59356A97195FD0B00095D70DBCCD02E31DB6806BA00012CB1E91DF25B
A38BB5871492A127BC23A4A3504040BE87D570603D5D999706E5F30F61584DAE
FC59D0A9703A80D252CE22C9FE6D4FF4702634600791E28D037DE58941A0D6A5
C7B1D2C504CC13139A5F0672360115384F379A127DD7C9B1EC94EC2F28976995
E591000A23B4306119A92537F46AA462326F8A08E61F2BC1700B872922A38048
66A1743154549B4559E3220CF02276CFE4AE535F715AC1C957EC30FBB15E5EA1
967CC46FCEC993DA9B5CEB4F7E46A6F73C223DF80EDB0094DF9B2477820E8B1F
BC06653CC8C01CF621A4410FB61BD90F2FAE461D5B7FF23BE04EC325BBBF7AFE
71488AA5A76B0491EEF89A1C5BB24AA398EAD733AA23097D4CDCD2485509AE39
3E373E6F19A2DCF36005263D1AFFE4C0E3EFA8EA512766CA00543BCA4A8C9BD4
6DD601421A1D1D795F2B920B8A6A32D92F2C544C644623D47AA5765346B6C03D
BA73543B0562365C49D1C3643F30D87E4CA8D0E1F5DA9ECA6A1E839DF60F34FD
86994237E6A34FBA1AFF65B86843CD53815A0F67F13F729B2E3ACF2F238448E1
398A3BF7F2FDBF0AFE64D04684B6A3E9627F84E9ADCDE9E7FFD1173187D5992D
7DEE3DC5E6DA2DC3E286103DAEC7FB60B0568A62204EB76B6427D454AE294D3C
BE82B6885C5EAF4C80C> |
41033 <0C1C60D8A8C9B5EE3176FC7F9EA27B33BA7F7E32F0B247451C3182FCE
8E38030BA06445845B47EF2176015112189C6890894A2569C5B2D51E6A385BC1
840073F098559EE6B42AAABBF69A6F1683E36E6838EFF985C9D63524217730EC
CDB11DE60B86DE83367FEFD84C0A743A2BD8932454243997F304C83DC9420852
89B6BD4EEADEC57D2DEB9692C1E691A7AD1FEFB480D971C0EB5C59B71510D17E
44643E99B7ADD959C06211B6A0119336B3C32828D60AE1284DA69AE49C7E55CD
5C3C197E94643C13E626B0CC6B9A9A9676B22C1F7B5444DD39F5C0D59823E9F3
B04D29E2CEA08B03E9A19657FA96A8403A38EAE0205868CB5A24F58EEAC8F580
AC22D0F9A3FA644130BEC172E017EA509598813D55F07BE7A31FF906873E18F8
D81E820DEA6C25E790E3E6F3D0B939F870413359A666068E55050AFC3877E655
5700E6C1DC737BCC25F672EFDD2E65100F760D7A700B020E019B4298440F81CA
37EC19BBB66B38CC4C7796C592E1858> |
27733 <0C1C60D8A8C9B5EE317642DCCDB1ADF93EB6BFDD53ADC63B60B355A25
EA8A42345BBA9E2E4B81BAEC2AFBA2D350085A33F05A72DBAEF0E8C76882EEF2
725447938455D7892D015FAF77879DB31821EA6D1BC659565CD03199D615B860
B8B652392302DAB9609447EA5137F44D079F6741CD3A48405262B2EE993BDB92
9A7E4DC2D93BD88E8275700EA45CB97F4E5A6E421691F46EA355887BB53D6705
75AA9EE2337760A0292292D6FAFA794A74812207373D8ECEF1C0BCC04ACFCD47
92B7A503D2C097B5B1569518E51E6AA8910B8471BCC0B1A928E9AFBFAB2ABC8F
8FCF8AC6C0C3BFFDBCCB148B7EFB0E4B8A5BF3787F8100DDBFFFF9990EB87E8B
5A7E25958AE920AE8DDB77B0CFBE50B3D55BBC6E33683F4022EA41C861C618BB
85D61DEF261467A9672C7960D92BD50B42C98BC495E43F41E280E25E5F501C1E
B7F196CDE4A6C4EB9A6101373D1FCEC4B99131FA2A005D4C0153AAB82845880C
DC32805E4EBE13A762FE7BCA1F494E352CEEF02327812ADB7013FCDE3C9FEEB3
9773A4B36050D7C92898F4E24B53663D5E0E19C3AF05E405C6CAED6DAB57B15F
FFD054BFB38650ECC> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALL+SourceHanSerifCN-Bold-Identity-H [13.8042 0 0 -13.8042 0 0 ]msf
32.5956 199.384 mo
(~\373FN+\300+\313+\207O\332/\225+\021w\254\240IlU)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 3 GetGlyphDirectory
9800 <0C1C60D8A8C9B5EE31713EB851E7FDBFB194FB2C8FEC61BE36D7BEACF9
62E74C2F5E5BC4D4262D4080397BED400A3209E7C82A7B0C81E771E61EC227E0
CAE945FC92CEF4FC77A4E0369D79C506983DEBAAF6DA11151407EAB93427275D
2EC4677424648E319441DA559EFFFF0CA461828F8581516C142696C3D9821C49
C568BE170939F31872BB87514276B3A3E08ED8BB1DFFA2A2BAE1C14B2A286D6F
14C626F663BE1098D2FA5D7102B64BB1AADA62D603DC0671B473E39FD1EB0533
A7137A535A63B61A3B7233F9A3504FBD3D25ABC7D3758019CE8EF390> |
10923 <0C1C60D8A8C9B5EE31BD002412E151D5C2CC4893556B170AFBA929637
28270FD235BFDFC12C02F2E36E5C38FED9429A14E3BF60106A5B6392EFB9E006
DC9384C22E43CC5A09C8B8C7B334EE9984783E0E9FA244E0E41279E1784956F0
E9B817C674B0CBEF3700C67DB10EFEA2C2B43227ABC9BBFCB57CA5B4E723EF18
2A17DFA759A7E85B695B7C061760A0387AD24067A11F7FCE1FE9E92EBECCEBDC
9C320E6C1A5A7BADCA4A13E75D4E04DA5CC6933EB51CD2834270756392D4521A
AC0684716DAF54865540C68BF> |
17489 <0C1C60D8A8C9B5EE31764299C33ABA083EC295BECFF078B80ADC8A5F1
226942C385871BA60E9242C1E618060AFEBD934F878B9BADC3B1D2E68D862D13
48ACEE0DB985C4E64F2EEFCFC1A3A1DDDCA902B25A50F9B3EEEDEE6698C578C2
D3A3F03C711B1C054E6CE2BF0C4E0BF4A9CF67EF42DFA2565F81DFA52298CAC6
0572F12589569334242DCB8389026A730638D2BD81569C473304F2E9841ED0AF
3191ADC5AEE3BE1508419039A00FB2C9E7AAD5D4D0C8CD05E08850F0C3A38874
15F63AF776EC47FAFB4E388EDF87595F1030BAD2353FAF937A5694080F3ABAEF
832BE301163EED2F6867B9BF842E71262E226BE2BE1EDD8CB9064B8A2D6F4889
5824B010279> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2194 227.551 mo
(&H*\253DQ)
[9.79713 9.80663 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
1841 <001C60D8A8C9B8151C27307C4B22D40929A14368B0F01F1BCB241325F4
CA40E6217661D31B4E7E53CD1BBC10AACC3CA760599FC9C332FEA05F33338CF5
ECDCC31B3B0B72> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-23.0214 227.551 mo
(\0071)sh
0 .745 .745 .208 cmyk
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-19.6044 227.551 mo
(\007\211\007%\007\211)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
1842 <001C60D8A8C9B8151C27307C4B7CE778CC10BD067CA058CDF9B0FD24CA
73217EE3AF91ACBB994B1291E390EBBAB8C084F27E954D3D671CB10812FF95EE
716E1E5A903C77533A> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-7.3004 227.551 mo
(\0072)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 3 GetGlyphDirectory
11946 <0C1C60D8A8C9B5EE31764D16CD82CA0973715030F98899E4F7BD0AE5D
82CABB20D9ED2C9C1C1E4BDE4556EC80E434C0E048195AC272D3461041CE5FDF
9419FBCC3C385321189BC0D2B339F1424936088962D52BBAB7136E42419DA7AF
A5AA6A387AEE1826CE29C7513029EDFEA99621BB32C42C693887B6FD76E1C963
3ACA7483175B1B497816D6039700AB7F8BABA6079157AAB9FC2657DDAD6F8C36
ED8BF617B939CF3ED42B5C4C456A84FD22F08AFEEED874FDDC6E121586DEB26A
6F59EDDC421C4460D13E62B9DF050E811FC1DC81B585D9698F6B233A2161A25D
9DEE636E62871243134A2C824EF87D98B49FE4A69256DCB30F5F352999158297
74A5545> |
9502 <0C1C60D8A8C9B5EE3102124DA7D1D9A8C5F11C54EA24D0F15F4240FD9A
03B88B72944D811D1D315AE42D9C3D885F> |
9559 <0C1C60D8A8C9B5EE3102908D985AD6490F6EA7AA9101E535F365EC758E
18EE3E3CD92C7B36E35F7BB489455E81AC90C81EE96FE8CACECFD9D15C836A3B
FB1DD02B372FCBF94C3E5DF4A98A6A01D113841ECDA595369104828CD2567787
B52C6C4017572DB51614DB920919137C8DBFA7D4AB2E7CFB967A299E> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-3.8834 227.551 mo
(.\252q\022)
[9.79713 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
15.5086 227.551 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
23.7806 227.551 mo
(%\036%W)
[9.79713 0 ]xsh
0 .745 .745 .208 cmyk
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
43.1736 227.551 mo
(~\373FN+\225z\035W\3334\230)
[9.79713 9.80663 9.80663 9.80663 9.80664 0 ]xsh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QYYALG+FZSSJW--GB1-0-GBK-EUC-H 2 GetGlyphDirectory
8014 <001C60D8A8C9B5EE310258A4F571A0BE7D132AD9CA52A35FFFCB8E1A56
9B683874FA93EE08ACD208A19CC7D1A092A7E02EA88FA5CB5F47DF9C31711385
1969D3> |
8015 <001C60D8A8C9B5EE310296A6F8AD055B3F5C7195D323970DDB7F7FB993
44304821144FE23B11BF6D893104758235DEF1DFDB00E83EBCD59BFD2414FED8
42C710> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
101.226 227.551 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 8 GetGlyphDirectory
269 <001C60D8A8C9B7FBE1BD91D581BFF942B230730BE81C8E78958BB1CB848
58FD884AF382499F21A5AE7A2C6BE016ABC80B64A50DFC4F6525653D4BF53D29
01B113BF5F51E55C957BE4F347A677E6515DCD4738F25D47150EBCDDE4FEB010
7B0ED59CD9B88CA980392F0F7E72C38709BB1162D34DCDC43E8B14285D9A726B
E594E60D89CAEFA039D24AEE9657A1DB4A02F98F4223650511C7BAE903F37135
3B8DA823882F3207CF433ADB08439117F819AFCF2AB4BD254F08C3242405A157
7519D47F1> |
259 <001C60D8A8C9B74B0CCCCE33390A940EA71397B5EC95AADDF64A4A67047
AAE2AB0D811D5D357C314EFF5018E68AE38D74CB5B424A0A8A7639D4FC59B559
2591AD26FBAEDAC0BE25BD58119EBB11F8A90A19E8F27FF6295FA96BF92B0FE6
5BF740BEE39B4C34F64BDE9743CF5E66F9FE98279716B49C6EDB3> |
273 <001C60D8A8C9B73F59AC4C5EA81CA66C901E58B55EFA0A3267AD00B9FAE
D40B97AEA1F70D974B0EB3D52DC4A7A3701BADCBBF8857AB8C78F76EE6344A50
DE47D781D0A56C4AFF401F7A37B0570C6FD204D42C588F55833BD4D6130A5336
94A08F483370BA990D66A157C5EB1F20A070B0337FB1BDC600395F638281A1F5
49C5EF91CA6E2CA3B39AD8F075A1B1A905B5C63BA3FBBB73BC71371> |
5 <001C60D8A8C9B653D71458650460E8202DA72C4938546EA74709AD88A50E2
C26F6C887B57C418BACD41C672717A23307CBEA4DCB30959A266E3DD54D1D5B2
227D6AC01AC10074F30A341E53DF42BA44AD45D0694A89621904086C0030CB76
9FF5D648A09CD7FEFFAE7EDBB3D6EF86CCEF0BAFAC259B1F1CCEA123F609B29E
491F6538714FACC8DE8ECACB6E2699140AD8227A23B9A1E0C073C1565190DFD3
8FCFBB58DD54F0234E4F8F82A> |
267 <001C60D8A8C9B8517F68168A98203EFCD9567532AC6258643810F5E66D4
30757CF8B5519B408D26CCE55487DACA0078DCD34968A2D1BFA2620CD079C274
EAFC372F5553B> |
671 <001C60D8A8C9B7CB351A0E440F675913198ECBF315A59F821D46296C9D3
24F413F18B0C858FE4C9CE06FA0C2B7A43DBA7D4009DAA79814E21233F9BAF0E
62051CB742F3417200A1628F7D6C854D319A2ACC01015C27CC0D04B4015AAB60
843E56ECE2C598B8398A60DCBBC67882717F1077DD008EBD20A7DE1CA0B77DB5
5624723D402461DD4A25339607DD4337DBDA074C94F7C0EE6F40A46250CB82E1
C1AA44878F93FB329C54A8EBB6BAE9D6F2D7BEFDED026C70B0C17C7C1B1FE275
2273A3F2CD2449BF8BE5F7D26B83306388F> |
15 <001C60D8A8C9B5815AC0EE7EF866CAC212C8DFD2157377E40ACE6C03D808
C662F04147B0EF17111C661EF3585DBABA6BE6B8454BD6C42192E8E82941AF89
026376B34973A194606DA17657E0092CE1D061039AD62B6436E07016FDBB8D25
37AEFABF0ACE248510F684FCA4790F23610CCB1A3A4334866064> |
258 <001C60D8A8C9B780B37307F7E8335F72A2EB6962852EA00E39267BFFF39
37D6DA77BCC980C31AB48139A1559C96384B625F8C5019614EB5F41F3BDCE26A
7AD444ABD0E99FAF26A44934010E9FCF656DD7B0173C784760314E6E34B8D325
AE444F6A84A3AF9548A5F8D388630A7E6D21DD63346D7153C7B3DA4BEE8C3F4E
74F7B9A44BED746E11007FAA038FC7A9530989DB60FE00E12C0551CDB3D6B724
3B565D471527DB6B00AFA72498B25EAB4518755CA1F450EB5AF7850035C64338
C480DEE6FCDB3B6717B5A0D470D545DBED352BF9FF5FCEECB584466574D11E53
32854568B0D73BEBDF78EC3A5DA8E558741CC8907EF69C0C895E8BA6E6BD33B8
8> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
110.812 227.551 mo
(\000\016\001\007\001\015\001\003\000\377\001\021)sh
141.536 227.551 mo
(\000\005\001\013\000\377\001\022\001\022\001\007\002\237\001\001\000\377\001\023\001\007\001\016\001\015)sh
201.621 227.551 mo
(\000\017\001\016\001\002\001\003\001\013)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
228.479 227.551 mo
(\037O)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 1 GetGlyphDirectory
18934 <0C1C60D8A8C9B5EE31764DF1553D72F0E3E7354A5EA7A0F402FCCD6E7
0AB95DC658D991BC203A2E69630F172AC8B7D8AF04D82D97EE60D4554325F7DC
AEFD9A1FD14DC1FEF00C7A7574E8ACBBF5B15CC82ECDF1365BCE420E6A9B01A7
C4142EE96F951407FD6402550D58807D02E5C442FE59EED0ED601F885AC2D008
17F3E1677C13655E8B70C520B638F32638D64507AB37A39B0547D640A91C8310
E435859E01649856B5D9DB6C59464185752F21B05A495BB122D0D405EF52A719
5C30B243F62B0445B1F9718A62A64A6DB5D24BEB6414992DF74BF5EBCED08F9B
71E8FE06062AFD9A40AD19E5AC467826A755043F08629ADD6CE8DFC12EE28C67
D043E9B102A3534637258A0C572E58D5A43E1AF0152EC28A749695A3D6D63D8D
2BCAA6D4E7ABA3B8091220F794C2A670E108F27F589D7C67F538E53DD89589FC
96A2D3EBC8EBE13FB243F2E9E7D3FA9C0782BE0F4F9D05058AB5D5743C6E90CC
5A52B6251C09FF6E191D91E6B73D644E80D02A56E3239DC8A1774E886DBDD15B
B5602DF07A142B8E939CB9FE5CE5901A579BE68CEF1DE6DF71D49F082ED529B7
3050BA9D632D7A99DE5C1FCB19526480EFD63CB95B651B6> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
237.502 227.551 mo
(I\366)sh
0 .745 .745 .208 cmyk
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
247.088 227.551 mo
(~\373)sh
-72.1444 243.093 mo
(FN+\225z\0352\256)
[9.70117 9.71082 9.71083 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-34.5134 243.093 mo
(\037N)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-24.9274 243.093 mo
(\000\016\001\007\001\015\001\003\000\377\001\021)sh
5.45871 243.093 mo
(\000\005\001\013\000\377\001\022\001\022\001\007\002\237\001\003\001\021)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
44.7516 243.093 mo
(\037O\037R)
[8.5029 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 18 GetGlyphDirectory
20785 <0C1C60D8A8C9B5EE3176E3E179EC13CF8E8653E4AA84D4C6C327AF984
4278406B2D51BA2537B89A204BA2EC4E9BAD057C55EEFFBAF5A66A7A62522CD8
E2DD2FD9F1594BF9C6DA0D40DEE0C0C926AF0F47901723EECF19723CDE12F0FE
667372CC71AC82CC09B1A276BB3520A9F38A6EFD746FB93F1EA1DC17E6A2239E
5A044CC4B2D72B452F2287F35247287578FFB9D95FD75C5EF358F9F13EDF28B0
E78139E96E51CBF778B8C44D17EEA4FCDAD509F8EAA917EAAC8F04FB82BCB3A6
C4FE7BEEBE4A6FF14C3EE0E42935F58DF4835D9E61848A3E15AA470D7BBC965E
6731CA3A9EF35860A050D617C9249ADC5D827D866E357BC6A82CAE043A23CFFF
D21F152B64FD054B6956C16A48206125B8D0D3F003F546068C186176B285DD4C
C71D8BA043DA6D90F13DD305C376104771D0353821EBE344C7209B3E2AE1AFEE
55940505040CF983F217CCE0213250B4F0D4583BB2F58699B33388E81F48C00D
4D6D64469D3C8B70A78BE6F3D669B9C6CF1A203A2ED> |
27694 <0C1C60D8A8C9B5EE31762A9A4FB36EA716B80B3AAFBB3C404FEC5C076
DFE142FF8EBFCAA79C51D494FF4476FF56B90B9B70A4E4742AC0895588097FDD
B211BAB0B7109BBE5EC67A6DE8DD839092B4B715964BA16416DEBCA2ACED2702
96DEF750FF5B4CEED4DE289BBF73B73C71C6F32D265F4DF4F7E50FD67793E05B
C051FA29F7794BD571C8C270D4708DC136E4D297E47B7064BA4FBB243A2D558B
F71EF8B6194AC5F5FB40E3B8383B822A681480CBA9CB39FBF61F9735ACE> |
14147 <0C1C60D8A8C9B5EE31764DB8ADA91B872F2A9118956D283B6C0AC3455
A8885A6FD44155C52B26E03A6ED19A3E671B46DF13EA7E38E4689F6F650D3F07
C952A035749C9084C04524536CE7EC017D1EEAEACD19DE1023D1C97DFCDA0083
B6D6270BD8C36FF4494680A6094B95E18D0C4C1F78EC184AC91FA2F9FD1069FE
11A1D89DE27FE71BCF1C5DCE7D039F3CDB9FCC16DE3C942BEF6BF612F317F41B
BA3AB6F474081C33F2BB43D7BA8477FD8E8CB9CFFF9B2E5650EC7EFAC2384640
75E527A69235517980F9967330819267832593DAC0160A444753A681B18059F3
79C5685BD0B3BF53D8E1926552030506FE39274EB33C2AE3DF10881AA> |
44556 <0C1C60D8A8C9B5EE31764D2E17DA59CC10C4C31BFCBF9C2068B60659B
FF3B7140193FA9E3B5D7F9DF74FF5B41C56A0CB9913EE6C017319FAA4947540A
6876880843AF8AB3F4EFC3FAAA82D6BD65B8EE190E47FC3DBB352F360925F482
449DC4114A88D0AB85B35C1650176EE58E4D171CF2D83113BBB4800D3D3E7907
133ECE0A5D2E9C55AF39EED1BA4F68F32543F4AAFF8127DC4F4E9141C10212A3
2B793A403E8E8FCAC1BBD608BEB9BC2C40ED8478FBDFBA43A1A1C48A213B3F5F
30AC834434FB8A1014C509859AE41D4CCF1C9B3521A240D308B1CEE14BDD26E8
F62021489E30AE375CEF6B45DE38A0B0D486A1253097E452DD3776A8369193AA
3F932> |
32512 <0C1C60D8A8C9B5EE3176D71B5EC9F845C4F7F7178DE97CBF873B4DB6A
FA49CCC0F7F1D766CC475C23AA9A39E472E28E6A26E87C8D202ECFDC677C5C9E
35032B5A9E7689DC89B2851C5F582586B6BC6A3588EF7B0736711CCCE12626BA
436BB3BE7B758AA06CBA331BD166FBF1B400A8BCA17F2031BC39F38BCFD0EA4F
03C54A9FADAAE69EA67BA67A485B3BA82AF32AEFE26E3D8E37677D99593A9F5E
F47A2D4D06D88BB58B3F17237B16044B99C851F8DB32C6A64327B4A1313C6A50
9187CFE4920C2FD0734C0922A129F30D741FD217CE7908C9366ACC03A89D15E9
1F36FBD03D248061BFED57B8FD5F1AC1FFAE4A0B6B65368A779C4276D856E4E4
A361F0E5480819202B872F920550D0F1BA5A4ECD47592264BBFD139A43F5732B
CD7DF57CC2A70EFFC1E0204F3C885253F1447971D5F7ABEF955BCA053206A897
D191847D42A11ACB4EE17530CFA45635C9F6032E0DC25A75B7BB848BE740CFF5
223C6F6086837B42CAF51EF566139> |
18927 <0C1C60D8A8C9B5EE3176059203FC207306F0AB56D36A952833E07C548
F12F9ABA95D464FE8745D7224096178A411A986C33D1ED938C6E1B14CBE5F79E
071532B46B6C28AB38AB70D8AD1503DD4543404BA4B67BEECFA169A45866F922
B4B1A201EBD085EDD27B87B0606442778124AD685D41EF3100B402DB7D5359A7
C13AF3FDAEF09787875DF25E6196C7CD2A883AAA0CF8F494A3F2C8FE0360D229
C42B701929B30EA5AA0085210869C6F970C5182322C7FF0259E5DEAACBA33474
55009CB85057471BC3AD4390E278CF2C44FEA7BCFEFA84704099A824EF904F34
7D3E051EB1FC0ACDC5A848C18AC75524F90A4EAEE64E7CDB9FADAA2BE94A4196
4C16FD86766BF19E84708F915AF016DB3B236B094A1DCA7DE8C69917A1B66FB7
799A5D139EB17A0B4B1D64221E1AC3C7271913D326672323D7C00309E13D3FF8
EFC61D749C1232A8D9AC1450D077395BEE6C3F4A9074072BA79DB2E0A29A5852
E4121C34FFCA08954DBE6001578820B8E8478D2BD1F8126E0ECE9DE41522671E
8C8F74DEC2AB3B187D0DDCB912CBB5C85C6F3B85D7B8BC1FA187446AC5363769
2C35DA33F01AC3649B6FC0C54FE756D4F6B1439FC626C84AF0B81857AA34C926
33315FD1F22E86423F3F3FBFBEECFE4E9FFF67ACF9546B7FE9D4214B99A6984B
7D609F0572A6288CCD2874A9E14EBF50062248A24> |
45602 <0C1C60D8A8C9B5EE31763D2DBDBAF1F44B6A28014D230C563F20F38D8
43CCF9336BAA7D8E7EBE2CC3DA293BFCF4544476CB4649A1D1D3ADA4CFF1854B
33793293BE2C386347666373550E1673A9C7C449DDC156746B6BD76BA6C4E849
A94B56583E62D36184883D57A4D1922979EEBB4F94D3D45A36D82F6C1F92419B
0E6FB79DC382DD1BB8B2ABE4505BFE09AD82A8BA62ADFAED1ECAEDCF8E64AF73
DD7A93BF6C99E85257B927FB53A95CC934861EEEC1F69B81D414407B54295270
469B0BDFB2A9D741018AA89A144BB11874E37E7F95DA4245AAF6716731D25C37
B0B4F1C07C7FC29ED89227080E16269C27E80C611AA3F96F1955D6B958325EA> |
10864 <0C1C60D8A8C9B5EE3176EE839DBFFB5514BD7AAC83934171791C8E67C
A91C83704B47655DE11E7713F7E7FB0C4E4242B55CA47AD298D825C8E3FAFDDA
C38A53AE73B3504295B59A0DB83A2107BAB7B393D9D81D1850CA5C55A95B56CD
4AED305A28343C104908589BB47BC0C91DD8EEA8B5C34AC7A3240540AC08E6CB
DDD98BEED6FE29164337BF84D31C1AB2AC2448988ACC6BDB2940F86913605385
F516F50D7709E895946ACAC14F282EA1C5B46FD8C9DF5C4C5045300A44B22ADC
D0AD94070F93AB9FABFCFA78F709106A61DC38070748959E68F045E65F7BA139
A38262F78C2D88159FFA2ADD64A14E267BE5DD6FAADE33C5F023F7CAFFD1E2B5
3E1E6AEE8EB3FD814E83962BFAC> |
33054 <0C1C60D8A8C9B5EE31768542512EA09540AF6034FE4A6264D7845EA3D
AFF2FD3C2B7892466799E0FC1DC388AB7D6BEEBAF859DFA9D47EC13088BF4855
5B27080165DC536960DC153F0B15537A7B13C6002EA2EACC5608384ED2209BB1
7FA97ABB3FB8BD782E4D6ABAA0A0CA747BD54DDD10226EE88CFEB2F900E43D8A
6D1D6177401D7065FFFB7F0B28CE497A2D464ED51B8F1C877C72302977127086
9485E0BC6C0426E70D87F74E7C6A9E79DF9C59EBD9EF41EC0082FAD57306C3ED
7BD4D8DD96E2A4ACB32CAA9A090F67D75A2760553DBF60DBB5FE56448B4345B2
4698C4A2F50F7CC605A09D5D3A5C83665A2564DF3F2896568A1C63B71629CCC2
1CB79CFBC60F03BFE61DAE3CA28CF0BD1ECE0A16E2EA35433DA52768A637E2E5
4682EE4EB4858A6A6B6AEE49AF08FD3FAE61D7C17666E3F53003AF48F69D9B3D
B62B5940F2F6E163C9FAADC9BE2BAC62552DECB5BBE22397C7B506DD01B3C3A3
98D47FD8170F08F3E07E5F0D004DF09CDD55C9101F6C5A2B7A6AEC8776EFD24A
36B03EC925DF5C2975DAA3C5692252E00F4BEC2683582A978> |
36589 <0C1C60D8A8C9B5EE3176E670B78A75EFF81632C454111ACA7B4373D2B
4767CD41B63EA8F7FA4C024DA354D105C77654282693FB936C01D438D6FD4FDC
C310319BC177BB7D3756F2986954D50A79465D1F4158D82E7235EA6B7B53F1AA
D218F3A77DC97F0418413D1AB158B8F2B97494B08D09D609E6F096EC1B257CFD
BB4A3E9D83F3B972C39C484A9C5DBDD5B62CB48D521B7382A8B7639AB3EE16D0
B2DCDD3163AD32FD85C246FA34EBDCB29ED03A5B0394F51A17FEADF97CC7676D
65E0A8E85762060C433129FAC4E989C3402D25DD62C7CD83A62A222142E6DCA9
3A3A88745CFDF5B407F2AF8CC918EE0B4D476E700AC7C00977DB63E4C636C604
65E6A803F79E98DDCF5618993ADC208D7D3E9F37AC095329443ABD21F6919C6D
AC4914ED47352D00B9F92AC5C66937DB2443840607340916D35934A74DB74491
A4E67E97B73CC47BAECBD9874413E7A5546178CCAAA33F67B4B2B3CF14B7F30F
03F73C33AB8B8D50E271E35749CCC9D8FEF84B3A9298F954A7AD8B9D25CA6401
6003CE121B9024AB73844FC197C4DAA74FA5C486005A61BA4796A7BA88268B46
FB7DAF73C3C8A72BEB3273376751FDC002F36F92B4DEC6A29A16AD96A25E3802
08C99231AFF9F47AB7E82D04B22254E42A29BA3F1BA92A8919DCA73E664A1F77
0484C79DBD892E6C2586E8F3FBFEFD0B000B69EE16ABCB44660780CA452969E1
CCF445A455DC6B818FA8B64718C698E51651BD2F1AF978F5BCCC8F24A25D5AC2
87CCDAA0A2C43> |
18272 <0C1C60D8A8C9B5EE31526B4C9D39FADAD6F54D9351E43E862C3F985FD
A1D037C52AF94263377CED5ECD59DE6C0D4FD7F4BF2DB23A8FED0BC27019D711
F40FF6D6E1218123EE80D4638D33549490845D177E5E462D4DEF55F7BE1AE3F2
481ABBCE314E9F3D222EDDDA2B66943765BBFE8D513D86ED97A2C8BF6CE667B5
143603FD0EAC723C304CB322BD520D0C6CAF15951D715C72D8B69A9CC2337E52
4A87471B13883A8BA803E330F49F11F6579131D411F7774924C7998CE86A2F80
DAC5B7D5C0D8EA68FEE8F4905D18F2CDB9D0AAE41BBAAE457BBE4B30B9451171
B8742D69626FACEA28EC3844ED6C2E8E5D0D63B9E6C6929B16BEDA544209DCE0
DC6641B5C85DAD63256D612FE8C70D2E7B33B74D4B2174D18F259A1B2A987BE1
3F930C83630D399F1B7D5AE524712FC01B54198A1FEBA5B893DD2C58A66CC39E
6A944CEA3309477564005724B3C9B602C7DE5C849C02BC17574CF5A3B86BF03B
1BBFA23A967A1E92FF391160D69898B8166B49B8A4963BF3B2E29AF32DD5335F
C3573764F1334065DE7F7C8A0AFD23D467E522F237337CE8E9787226387C917C
DDA32644CA67D8847D3E56D60B38C532D812DCDFC8C665C406764C7D8B25F09B
20CBAC11961F26AF2ABF0411F60FF348294F549231D1B91B123E157B8D88A2E4
B0B2B> |
11028 <0C1C60D8A8C9B5EE3176E7259873EB6450AE61C4FAAB90C254BF2B046
3AA2AB426309E825082BDDD7D3D47ED7F349F9B4DDAD7A080309F9E83BFA6C00
9A6BC8280E15C714B43A987877B68A15E6CF18B54CE6B6C50A746396E05FACF8
94E3F592F04F205BC18BED6FDF0C12729F62882F81B2727F04224D97E7272EA1
90D3541FBEC8BCC0553FA2CEBCF8E8E894489F84B0FB59E33D69DA3051614D2D
2E78F147FADA26FC343C5548AF668024C437BAE3F938B796163E774947CF4BC8
8A5389C7D17D45079A7A7142C92F56853712BEACC130C3FDD559A3D2B6774E7A
9B8A4BC69597317228F92A50DCB21AFCFBD9C5D24BE45C1E59281A74B7EC44CE
411185EC7C21AFF9A48CC6C3CA889BE18CB8DA0AE9198D8759E4FD398745063E
6CE39773F23F169227E18AB788002EC6959665CAE67B23C138883CA56E6BA77E
B73D3F72EE0DE99A14C0746C5A7CB04A5F7E3D1D77C2C3578512FB9E737E6F25
86D64711CDB8B999A204D2A408D0C38E8CCE76FB9C69F383E92B46F81404EB7A
977F7EE92DA6242F41106AED69AD07909C497D7B535FAE8FC594C03342E1208B
2> |
25772 <0C1C60D8A8C9B5EE31B0E7945AB56FB92196A7F6A5C6ABCCA3493F2BA
9C5044B2A13F17B7D1E87F4976E0069F153E21EA5C2A22965C4F79EA96FACE0D
E427B3C73049A5C1ACDAE8D51B76FAD1E1212F3BDFB3D557428DF0AE1FCB6538
929ED2D17AC6BE482AF45AE8B4685FEDA4318972AEAAA7C7176FF94D5A5442AF
EB76884E2803CD016E91B64222C3AE5E805B282AD568C7C074A6C2CED076D9FE
567D5E337413078D1CFF9CA4E4A3A099A40A6683B9730B0B5F7ACF8519B0355F
21E85D946F8E05612E70BCCBED1ED6D2566A250821A6B07A399C999C1A1E1A2F
F1C29EA24B75208BEEEF5CD1C144F09E7B1C1150933A25EFB346961A365A035B
DC97843E8E9D9EC108AC3AAEDBF4A808B4D90DDC77553808A40DFC390C85EBB6
10F50F5CD87336285373B2BDC1D8E828CDD80394E276DD0352865A2F7A4225B4
4C2D4E5F37924B783F6CA4F94CCAF4CFF8023AD05A1795DD4D1E33B04BBB8238
D84B88F9DEB21D97BB2BC5648D79C624246F82858AAB53517EE7B76F9ED5B88D
C1BA79D81FA472BC8DCA84DCAC8FF3D3221E5BC612493353ADDE54A4E4B862D3
45EFBDD60098C8F64575AFF651053AADC61E3B36870BECC810638AB37> |
11985 <0C1C60D8A8C9B5EE31762A9A4F86D49CEBA1CBE9CC89516FD37C7784A
43C8483C0D1554C1CC6351C13FF110E08A3060485A72231DCF44B694B24A2A8F
D2021BE9C6A90C9819EFB8BE1CCD25E4D68A19AB757D600835551AD51A6B31D8
1BE9251F54946005E832C0E14A6E9B2796AD91851E94B5557D038E5B438C71A9
ACD26E63B90F83ED8B8E2B90D517247EBC80803F5913AD3D2EB448C2BB914ADA
2EA36B39EE128A982E910D7B5595B78793D56220226A33A1F6705BE53BB8DE87
AD84C00B155A31F43E549C70459874ABEB3> |
10969 <0C1C60D8A8C9B5EE3176FA3F3AF238A61A064088D9EE353C46B394955
FC5F56F20A78DCAAAB24BE1A99F148CCCDDE23939C212C7BC64C61F54B750E16
3EADE1CC046468A9484F45B6A82CE6DADCBB4EB683C5C9C9EA88FA00A0CF3E7B
35BF7C8A7B2B236A6EBAA0F31BAFE71D23A634492F448D4CF259644930439BE9
72A45F3A88F6CDF0C58F080841505C13D921047ACEB61920755D7C98B999A6F6
BB9A2C5E587AE0997D08E67B4989E1834390B1B5925187E00A5CFF2C883309C4
6E5C5FCF755811326FEB3C2D29700E325F78BEE60512CC5303BE7026F7179754
F3D354C37BF1ACC03F8B3ADEFAF4278CB12224D6BA95F66CB548433E0B39B993
32E6CF5DEFD60C68314D997487FA7346B02041BA08FB820F459D5FF5A1A3E9F2
47EA0B3F03646795E6058AF17C088912DCDCDCF2776D5C293AEF52A171114096
EE63A75E3FD76421934D25A32106C12ADB162B2CE54E8942BF99A1BCA65CB> |
19078 <0C1C60D8A8C9B5EE3176FB6EB58770BA2CC87A67C4E8264BCC9CC9AB7
A4B3B06BFC902227084549D1E407FBD576FBDB98CFED725D91A141F22092DBE4
C86FC10FAC7BA6DB6CD172BEA018C57E74E8866F005120A5B53EE636B093EB4A
03B8702EA80438FA66AF54F6332523D99FFED300F023AEAB7E133BDFDAC7DDEF
20D140E2C9F284544D844FBBC80314EE5BDEBFFBB3F7962537E2F486EC31019F
1704B6B0FE32272FFE1EF7C052A91C431EDADCC4818A95F5E968FE25E3E3B8E7
F4860CF828140A1D1D0F82E5444C3656E9A1BA724201C59CECDFA7BA9681926E
A0EE2E5A5537756B1F0BCF090A117B7BAE535B032CE2EB68D088A39C0F48F0A6
4213CABE79C8E1443FD80E904964C33153E763D0BF350838FFF8BE1B8D92CAB0
839535A6F377577AA98908609151E5CFD97F6B1A61664B6FCE15BA6D7CE11F9> |
16037 <0C1C60D8A8C9B5EE31764DF0851303CCD92AB49576A7F0DC4E6D07570
CABA361E733AFED4CAF5907FBF5167A7E79278F13FA671F4842C8B27708A940C
277486FDCAB0B2BAFB06AF686E6680CDE6199911818F1139B89F077276C41B07
266E7BD9FAFF30B9776AE352380D010BB439E1B57F4725B14F4A886C68596F29
5C335627812992B1A43403C62F08C12DA955D110BB0EC45145A37471108CC38F
07B35DFD5836D27F744E33391A7B743013B3FD5AF24256AB790FD86DE985D94B
B4882B9437325D5AA4DBF8BEDDDB58D4DFB890BDDDBB209E6DFB72DF05D5A470
84DD919ED943982B13219BF213684D1E03061AF9D2B19259D0AFA09463180B04
9CE07912D15551CD871AA07254AFB71DEBC2C87A51B0FB5422D0BF2FCF933855
E8989525709DB35E4509C4B161812878EC65C84F0233929BB4865796B6A267B0
AB36879B420A6C61641BFBB1177C884E952DDDEE68130D08B3F16FDB72E399F9
32BE13656962D49461BA4FE2F25170B4BCEB6A4D193577925ED74A4CAC937AC1
C24176678DFEC5154E1C5E7C561766EFB9477EDB70500B8F29AD84E6B68D0AB8
EE93F5628433CC21E26624E7001B42B0CD6557EE63FA19CF1302BC9BC829B675
7A9F22835A347A472837C3CFB70F560245D33462DB029C92F1373C3ACD5A82EC
733F5B31F11BF616872A31AAC5A941449DABA10D2FE8B8B04BCBA5A742D43661
D2C14555F753705E3E9A77EDFF38242F277C3B5963D4B19B476DDF45A8337C37
45753566772E4D04F0EDC1EE84B0E5B728123F2D2FB1D8D3D09710AC7063A9D4
9639651EA2AB5DA8EEA9FE17760B50A18C0EE7F368AEA71014F725BEA2068959
9F590C68960A8ABD6601971178B6FB08FCBDE92E9070C> |
11218 <0C1C60D8A8C9B5EE31764DF263564D0562D0AFDB7100889B57141D9F6
A0B1213780AD294AEDABBA4316DD39F4C7DFA3F05BF7AF5EA92D85B09E89865B
09552987CC1735BC3B318C8BC2023CFE5016F2824205EB8AF52A7F107C6B8513
8CEA1F7AAB1C3456A6B3A50D7D6CA90AE2D1CC915D311705254CE4DA0B6058AC
67C8BBB282CB474D747569013A4A28C83E35C3C924689C3B8F5841AD203C1A1B
C69E7637977CF45CA136C31EA92A5117997328E7E9068265C608F0870F644BAC
C6B9187FFB882F366254F0ABBEFD607615B2030AB23A77923BAE7B1F47C2BB46
F6BF947C722D3A4FA982433903D887422FFC58417E838C43B68C17D9CCEA62B8
FF57ACEAC15A4535F68D8D3915C0A57AC87A9280FBECE1BBF4D57C89DA88604F
FA406E37EEDA00A069BD8AFD53C7B90063083D4D2434BB9A3467612F12FC6439
E98256C21A262F69F1F616031C3E48AED080ABBAEC3A5CEF1A85D7A2BAFED5E6
ABBC5709AAE62E203B92F52537EDF94C07303C1BDEAC50EF55A59DF3E5F6C439
51A7059158C325F93CF6D1CA2F4CD70AAC04FFB15FA6632175D50C3F0358BCE1
E2D4C4E60149B61F303802B00D95A9B7671E670DAADD513A82F02270E98F445A
A76B0A11A597FA476207215> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
60.0076 243.093 mo
(Q1l.%\036%W)
[9.70117 9.71082 9.71082 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
97.7626 243.093 mo
(\037N)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
107.349 243.093 mo
(I\3667C%W)
[9.70117 9.71083 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
136.356 243.093 mo
(\037O)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
144.981 243.093 mo
(~\373FNn\270+\300+\313+\207O\332)
[9.70117 9.71083 9.71082 9.71083 9.71083 9.71082 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 11 GetGlyphDirectory
3331 <001C60D8A8C9B7FA137BF42A9F2A41E36A4B7680596EB3F444DF0C14B5
A1EB1B21F218130D0165B60B3F25D3CE348E3170B73C872D1F68C0CD3F496BE8
A7E950937E272DEB8490223E57A8DC73F50A3252054E65ACA02D48FB5DC3D00E
EF25E42516929AD1BF4CB6CB4E9CD0AC7C600A77A9E0DC1A544B7B5DD5D4425B
F56C0FAF261719E86647A0A7A6F30C> |
1064 <001C60D8A8C9B807CA4291AB8257406A395A4B2380DFC664D72F8BD22E
54823618A791C3AE72BBED6D974E979732EA91E9998A477F96D4C070509A5CE7
92E00A16B3CED8> |
3409 <001C60D8A8C9B7DF55EF85374DDCBE9DF635D771375612BA488792A12B
96693693C7F1CFECFC79071173E6D31F3D24F677EF3D5AE7013F486E48EB378B
FD0153C31CCB8DC9F78829E97FE33935C8A2DD4911AD0A618B02E8E25E9C31D9
55152F6A1BF2733DF8E4DEBC11A88C16B80F70618376F7C527326CAC851BDEAA
D1FF47DA4AB14E8531ECA77FA62CB88CDB968AFCA6AA906885CC66CCC48B1E3D
7E007329D1D51706D6CEDAF3C8AEA140B9AB4674A6C35FA46A82360EAF7FFE3C
AA7D70A3259A0FA38F31E17AA0B6BC6A6271A390F8A6DD2029C29ED939B65E92
FB1496EDE7EC0BA02316> |
1049 <001C60D8A8C9B8771BBF60D39954D75D5666901D91BE96D83676CA930B
910A911D4B4AC312530DE99FC7F7C323272E1C7468714450A054B3D0339DFED1
1F703B3DA7FB302FBDAD37EB8AB57CA22A1E173139584F5387CC7C9FAB8C5EE6
1FDE005467356924CE40ECB58786FECC651750477CA2AA3DC35A4C46> |
3408 <001C60D8A8C9B6D4D2D91E4BD5D9B7E985C94F1650C7A06388BFEBACD0
EEC8E3FADADE0881DB52CF985660895784B92CB13CD104646CE89ECE6A3EECA8
28CC30C4A71B7F4BF0CCD86144769B881077997FDBAB1C2D4FA8F776BE28325B
7A5D55071CAD146DD8FBFCE8132DB626E31F5232FCA99A33D4D6F41EAE5F029C
9403131F602B522C701D534211E4129DF606CD5D29767D1A4B131FF5356D9F85
F59C0D445E7366A207CE0DB2A28DBF91774E39888B26F48567C0A0F863EB3534
18F955D75A502851B4305B31905B688458F116E43281C7A26DBF49E394984C39
297C6EA0604A2AD72C4097AC> |
1065 <001C60D8A8C9B807CA4291AB8218AA3E0616F43B5AD50BFBCB554EFB94
BA104CFB185E5366BBCC3E85503D67F34F5D68350FEB8D92E7007D622BDDDC95
75AFFBC740F1782453> |
1202 <001C60D8A8C9B605F8D3F1DA494451BD67B79A920EC237A8D4D11DB256
D4759CAFC32CFF0B40519E547448465E567635> |
1196 <001C60D8A8C9B605F8D38B1BBF82117155A8719C76088F1CCE2A578CEB
51F5D21D065AEEBC16593B67BA32B3ADA2FF612E2DFA8796> |
3327 <001C60D8A8C9B7B577FB1E9C8370BAF6D32BF23240D80AD0FB915AEF10
2F92C9C0CEA90E23ED31E056227ED9034AB13848E524B87085D63DBFA5075427
426594F0A03A9A58CB055921E158E4BD369F798E93D514FF7152A7186B775A08
FEE03898E942D86E04141F38FB280DBCDC59345282E5FEBB0B35E5F120AEC8> |
3332 <001C60D8A8C9B7A4C86FEE0780A20C1696EDBF7F0C40E9AA79C8585D2D
3154E5595A04DD3870A7E406D80BF4053840A4F2A6E40B429ECF7E4957AFDA9F
AD9E5633A60AFC0FCC41E93417C4C8228D9D91EE4AFDECB76E22C360F73E3BE8
67C9B68AD2A9AB7AFF15794AC9573BAD70D5406E9434816E2ABF92B169108A1C
9AA43E83E9F2E87A182B3ECB29F9D7581F9C63A5426A74A772C4673BD5535507
7BE0C7D946C74A49B94B4C01E18D48A8FF07CC2732F288E7E18A5B09CB3E5BE3
A39F04F1E6110BFA89F9AED6F6E8EA974E56E92C2FA428E11192E9742EDCAB0B
24BD118EB5CEBE0BB13A40F9929F2CEC8269F7A781939D49A2FA633034C5AD40
D89C91280BD09294CCE9D7D5BCB2A2FC375D43EE806A52DA9E7554B5F0CE5446
48996E1BF60F5FDCDE05593D77EA7D1369> |
1938 <001C60D8A8C9B8476F031122C585AD0629D74D620D951004F7A8624767
8B493193A214C6775ADA46C24C573512> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
214.513 243.093 mo
(\015\003\004\(\015Q\004\031\015P\004\)\004\262)
[5.93764 3.55659 6.01746 4.10461 7.97998 7.38226 0 ]xsh
-72.1444 258.635 mo
(\015P)sh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+LMSans8-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+LMSans8-Regular-Identity-H 1 GetGlyphDirectory
104 <001C60D8A8C9B60BC6D1D3CCB49CD7DCE74039396D39A1E389DAD205FE3
D676E67A40A2708BA2697B496CD6239ADC1002BD111036F30F201B054206CECF
E62> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALN+LMSans8-Regular-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
-64.1644 255.048 mo
(\000h)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-60.0504 258.635 mo
(\015Q\004\254\014\377)
[8.53804 9.69368 0 ]xsh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-35.0174 258.635 mo
(/\225\256\014~\373FNn\270+\021w\254+\207O\332)
[9.6725 9.6725 9.68201 9.6725 9.68201 9.6725 9.6725 9.68201 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
53.6146 258.635 mo
(\015\004\004\(\007\222\004\))sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
70.2916 258.635 mo
(\177\000I\357)
[9.6725 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
89.5546 258.635 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
95.8056 258.635 mo
(I\360&p\262"*p\201\036\216\355%\335+\225z\035n\270G`+\024)
[9.6725 9.6725 9.68201 9.6725 9.68202 9.67249 9.67252 9.68201 9.67249 9.68202 9.6725 0 
]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
211.835 258.635 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
218.059 258.635 mo
(d\254.\321*\331J\206)
[9.67252 9.67249 9.68201 0 ]xsh
-72.1444 274.177 mo
(>\245+\3227C+\225z\035n\270G`+\024)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
4.54559 274.177 mo
(\037T)sh
0 .745 .745 .208 cmyk
QYYALH+STIXTwoText-Bold-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
-72.1444 305.6 mo
(\007\211\007%\007\207\007%\007\207)sh
true set_gvm
%ADOBeginSubsetFont: MZQAAA+SourceHanSerifCN-Bold-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/MZQAAA+SourceHanSerifCN-Bold-Identity-H 3 GetGlyphDirectory
9693 <0C1C60D8A8C9B5EE317676D37EBCF1C9C208D08BF16EF9BEBF9D28E627
1B517C6BA99A3BDB5F187B77E5D22848E92BE8233B46E62C5470D074B25892F2
17B8EEE70E04E0C8F9CAF1244EAD0260927B2C9BCA590DB99FA216> |
11157 <0C1C60D8A8C9B5EE31768B9DB72182099A049DD6420D70026CE4FCE5D
D5590ABC52BA1FB3E55119E8A0A6B3F80F76E441D2F3E15058CF09EE93C23728
3023CE38A9937657FCFB83189D7AE61350EA4399B7687EE4BE5EA29C76FF9172
062F6F71A5984ECD7E980C7FFB1F8E9ED6E237F5DBF40160811C64EE17734618
F92E96A4748B4E2676ED96C5C054CC927DCB64D6E0D0918DAF3B9DBAFD708483
D019653A1B2CE2CB42D214B5C6360DC9AE1D5295D2B79928A5FECB88042383A6
FB7FEEDCCDE8A329C1384FE0B080E91701DF2F9A2E64E6D3BC664EE389696707
A9E965CF3B4E9A9> |
31261 <0C1C60D8A8C9B5EE31764D02E3DAD6D6B8A779C371C64DC7B484ACCB8
DAAF3954B13C29F94CD441025752C37C038FB8A9F0FFE72776669EB6D3278223
CA3ECA5125BE29FC5ABF7A1D777F21881F70AA639A773727EE72E9B58D5AB5CD
DF7F34F91540BFA4CCA27949682515F12E911B24DC0E29EC8AF86E716FB4D51A
AA4F629C6C7B9E1DFF2495DDF02D39C7814A8FB4BF32670E69AAF716E21BCA26
CE4EC5B99DBE9F2B084CB5F97041479E291D124097F79336571654E66FE84F9E
91981211C3AB34A577874A895DF0549677559F8B4C5C96B68F1C4658F84B1B49
29C03EDA75145F3F4965F1CFED67C7C4E50A5B9C60BC5EA554F13076936E4493
D1531370CC9167DD3782B72646C3DDEB21CCBE382A2248DF6A56FEB4C09CCFCE
F35C8F23AE35D2D1B0A1DA7DB984AC47E42BF01B7644327470E8A1B14FAD4237
7FAE4B1F71B3DAA47FABB62359E7DF2A42C31011C426E8479BBE9A7B6C616552
1A94D6885D98B6806D90D6EB489296D673AA65EB33BFB47FDA22A02B840038A6
DFACE1A40CC3EB9> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALL+SourceHanSerifCN-Bold-Identity-H [11.5035 0 0 -11.5035 0 0 ]msf
-35.8364 305.6 mo
(%\335+\225z\035)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2194 329.998 mo
(%\335+\225z\035)
[9.80663 9.80663 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-23.5694 329.998 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 2 GetGlyphDirectory
4 <001C60D8A8C9B7D10355CDFC9F1176BFE37832C0913CE0B39268679CF51E7
6EC545AFCACC24CA81F7CACDA5F4874CB691E3ADFA593F3D8400E0BB75FA012C
8266DD83E68BF03BC83C4BDAD4CF5C3A0D09A107D3E80FA9766466521D1DD021
B2B272F57E25459D5D3E0F3CDA8AC4AE696C49C7BF7FAD5FEB07074E0CFD560C
8BDC9B55918008E0D24A71894690D9A3FCD895E3F8D75A58A936D3CC78139359
B0D845AD8739F6F710C84F621F24635A70F8D3B77ADC2C890AEAF832A740337D
870EE0000CEEDC4D56BD8D6F05967DBBFCF8CFB023B662C06690623C0EAE04FE
3AA98EF8C6A9B1219362E2D304B76F119F4C8D48F> |
280 <001C60D8A8C9B758703C1E433454FE20A441D5709D942330104E6A4C44D
CBB84979E249B7F8A7E5657581537267C9AA1DDC43139E54A061DB03EB67D091
C9B8F80A03F82B9AEBCD34769752543BB96F743989FEA53510F48C738AEFBE1D
9E85D4E6871BE312203D31FCEB144D1B29D48B7F1B60BB45CA6157ABF6DD29C3
780F460554E4432475EDC2F788D3530B17CA0E46009A885962BFBADCEDDEA3B3
6C87A1C61214B33CF7B09435599693636358F6466D22DDCDFD464047B1503078
8B52046261EC327D0F044472190ECA0D6F337C9347636E5F90D61E58A3465896
EE5EB69E6D1A70166C735A83AFC7FE3C036> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-13.9834 329.998 mo
(\000\004\001\007\001\015\000\377\001\021\001\030)sh
17.2694 329.998 mo
(\000\005\001\013\000\377\001\022\001\022\001\007\002\237\001\001\000\377\001\023\001\007\001\016\001\015)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
74.2216 329.998 mo
(\037O)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 15 GetGlyphDirectory
43844 <0C1C60D8A8C9B5EE31764D37A870C93696D9A6323FDBF5FF82DF1FCFA
59DACA4CA39B9E037424157F2F9FE806A75766C4ABA500DE6A6AFEBF731B815F
B9CEE25A12B62D74DD328595796ECE6F9F2D4E92E0E317E6298F483B088335DD
448034930A0934C4ABF277E4FBFF804DB5EAD155EF523135E73EE0B44EBE2E6F
5EE2F40859A5C6BCAB2FC1C94308654AF48ABC8FB00E21745BF526F472DA2C90
6DFA688F8D3C08C397275DA3B135BDF552943E0F7C855E2622EDC907F6DD932E
9B055F1670F8580D5F91A3341E31C1C2028F685F56CBCE256F90ECD7C5A19DF9
419E7254BD64392CAB9A70F79373F91C9EB61A7600CF19F6E678E409D07164D8
9E35E3D59B57F689AEF121AA691C9BA847AFC3AE29E7A0AFD85EB0FCCF2399D3
52AEE96DCBAE4F5333A4A75B8E82D8B15A91A4AB1D0325F409C43D6236266C8B
A2BE88395B56FF589A8D35EA301995F5F6D9B16BA59184BAF33C097544FAB22B
7897036D1FD09E736F61AC2F386097889810E008ED8509E> |
45096 <0C1C60D8A8C9B5EE315366D1078F34EEEFD5C7F25049B248D4F685EEC
16D2803CD881AC0F1871919C50CAC518A516A6ADAFE07C5A16554712FB5E99DC
063F580E1FA1531A8AD437646C37DCD599D882A25D041F810CA841A567C36B92
751BC77864EBC4EF8F1081620187963BD00631A825B8665435E586720001E651
D5429763F8339C9817D1882AD41F26BC990650B57389975435F2539793BE6F67
09AFD7B75C2BC2C4F2A4559C4402AB80CD9B2ACDBE0D970B6F9FFFC4DBDCEA95
A833BF80C141FC72C9D39FBCFC01DC983DC033E71E4A3652E8154424E69C1DC4
4F76BF8A459907D7EB211ED2ACE1FCC8EFF64AEAEED0B71ECB923172E63A8272
1C63EEC125C6CFF92F04F6F428FEB2FBB54E9D0F55783A85E8E01C81B49E32D3
E41867A042DFFACA236FE7B726D165077B407632CFF371233E863B7B1CE75D49
21ECA7BE0A7AC817403E710AA872B261DD4C9F045536733C574AA1F0F8AD6546
61D34BAEF4C398BA9E3E207E64D29EEA3C9EA5B6099E68C7DE7812F4B1A76234
E9EF02E54D7920AD5BE78FD027371DEA316C55D0BE8B25EAFB11D49933C2008E
89ADDFFE68D22265286CAE2D95E189B659226BB22B858F4636852F6FE3EC54DA
A5B0EE6D86F10F752C90D6A744CC75B93A8E18953B923C4F572EB3BC00BA430A
61AF24A7AC10305C295AB1E50F97D8EB66EB6E5F394648F0E5AAF61031428958
EFFC4E352E71B2119A880EB47439B309DD46F6971A65932351980BAE5775EFCD
8C2ABC18578C19037A57B6190873705C8F3A9CDB658BB0988EE3A0C80EF0AC55
C27420C15A63EBB5C69976648E5DD0088F66D08D5067B65BEC61B8D6566EF8A0
B79F7D7AA85DF679F8360D0A8F6EE> |
21529 <0C1C60D8A8C9B5EE317642FC90932BBC5F1223045019773F53C347E6E
0EFCB3BA01461E3BC2257025EE20C1E69BA6FC1E9D083F05423974060587495E
6F505A571F1220783FAACA8361A49AAF04947098F778314976AC837DB3E74D10
17D6671FD34EC7E38439D7A9AE6B51E18E7A7B31FF88B7C4D7805483CD07FD17
4C3F3F07F241456C365643E540759DD73BD9FAC4ADFF09D918FD1581CA628A97
44FE5BD1555568B57BE6FBD11811E9FBC173B2FF0E713DBE7F17262C200EC99A
5864FB2E8DB4A96B27CD869C01018C7678CB9F6E466829D8274676F08FA78EB8
32CEBAED222EABD9EC43637E00EA7E273DCBB4377E90E405CBE3DFDC0B695974
6962A75361871EA60979674FFAC2457DC6B12E6271B0D03949BB388576EA30F9
C9F79114D8FC61DE78015E5D73092F7CDCF755791F5E929081F452D1AA3F2F3D
E40E0EFB6F2F42D12CF236F380111700F254F835C7356FFF77DBA58CA0DFE4F3
9> |
30712 <0C1C60D8A8C9B5EE3176DAB551175A557E635B72C8513620C9F9ED993
D72D91D5702BA1C9F175AA2520B93E7A6832361050DBD57DF8DA395744E318D2
096E87DD2F51C39D2FAFEFD71564B91E55ED03C20FE19C148B356B726123EBED
5EBAC872947524871B801521FAE7C6682F1236BD038F73E7FE8443AFF63DF748
2A3FAB0B03CE6D132B6B59F49C11AF9246ACA649D2156275AB953932E02CA136
818C30CA708F9A8BBD3E30622C6C4CB9DD7E54A88E10818DEF6A08BBB901C858
B259A509D54576A0AA819E51109C9B4AE88C0CDD8F0330273441770B32E001DD
A1632D6EA3B83F8D81275A5E00291DB644A17CDC9281FB006D2C45F731CFFBB4
FE74BB7246291BD3225EEC50527B256FB8760D3EB3A71F1D7157375198B706B5
E45032520CBE6F080BF55FBFDE2DB36A8E344B8C548429EEB585DE3045D1A56B
766AF985AEE0311872B6DF9C92B380B7F9909103F57954FE989F5BF6FC8F4BE5
31DF7276469E2D65A22637AD6B65AD28A848BEE3EA15583AED773C25FFF1A1BB
DB9409F0EE2B2DF17E5D3B495DCD9EF1FD44D174C05C68328D3A35529863A82B
7C66E956591B90AFFAE1240E501048259F2EDDF> |
11938 <0C1C60D8A8C9B5EE31764DBC97F24C56B85CC9918F8B64B590C76D7FF
85A76EA6BBDAA4591AEAA68991901BF740BCC79216170972D1EE22A683C406C7
3E693BF2E524EA3A8198042456CA73A47927B4E76E3D6C527E990FC5C6AECD6B
87DB55DB9918B18B1424478152DEBC45A7A3DF0A5DCA9DB12C6F4337FEFB24B1
5E3418319AC2ED8CCF72EC4251205EC1AAE30A380C5BC4C45280365D766B6005
D6834281E3026ACA06DA02E1097> |
21140 <0C1C60D8A8C9B5EE3176FA38DFBD19F6C0608F35A0582C30FDA5F15C9
EFCB16211FE67EC79C6FE6FB1CB33D6C9EB978EA39FAE44596BEDC7C7E8F068E
F6CD83043563652050513265CFA97AE27BC5DFA6578A2AD70C811E1EC970F128
4E78FAA37357761BA5F5ADA63C9329348058F96350091EDFA41050E177189189
AC86DAC06215419FCE894DEE5DEFF7C438D1762AE07E46561DF9959169B36606
07A066543AA8EB1CB5EAAAFF437055430DCBC05172256E8E3055EEBFCD60DA92
C5EF19586C953C8FFFA87214B110312092870F50581D62C44599C2051F2F7C0C
AC15750C7B1DE28BEB11B5E1D6999F068AFD5A2DFBBBE68F42F844704A7B8AFF
07199CA5EC6ED8D3702556E75F7F886A1D3EC68D36F0BB957C0E2CEADBC04891
E4207C19F94E7E1837AA4E473370AA8F2ADB29BBE0AC9D2A7FF22B67B81636D9
40E57C8> |
9552 <0C1C60D8A8C9B5EE3176840A1C304EA4BEDE241A3C0A8E0F6A2FCACD4F
BF4F7FBA9F65FDF162CA83607B39F2F73B0E952A7A0504FB72EB0B26F05F4137
BE9CFBB8296E5EA083F2E711B20CD6418D1567E580C8231DC96763891DACD3FF
AD990941D123302A56AE050A8BB267136484728268794D6EE7A875E586450719
A280EDDF2D4ED0E0223DAF437E3215D7C50BF979A212CAF84506078624FF1B31
F19CB22C75BC91A569C19C016763FEC961A7C46103A63A817C6BDC0F7E1C339A
650B49A7E1154E4B8D9726CE15B04C31844AC4BBA4B608A8BF24EEE358136FBF
8373E66469FA213D49860DCAC16A13BEE02DE169C7C2C981E822FFFA8F99F048
9CB2C8AA8B43A1E83B54842EE2FD38E494E2DF72AD90BE90543D9E259931C3B5
EC4A2646BE520B2EE9F9376ACDD645E0354D5937452E84442C0E89830F2DA996
F0AFE936858813205B6A65D2752EF2D29ED182D1C9A9F2D3768FE58078877492
76DF76D42FB4E79F34FCA3E0201109F8FF4AF29C5D75F47C9054682DE61D2DD2
9490632DE9814FC8108E0819FB5B6239CA68AB853859C6FF8D8689CED6E2F335
A277B307076F297615B1898E4A00F3> |
11910 <0C1C60D8A8C9B5EE31764D88F813F15CDF79A155B5D843DAF43FB67BF
050BCE6F8C4F7BB0E1657FD053A0ECEC26C78B00693D84424D9FF6C38F78D941
23DBF11B665D512578AAB7E3AC5C7242465029300CCF417585E94BB071917717
98D6388DE48A096957B9C0CDBB88736E151DE792C9670E96E71DC125C8E2822A
1BB4453379B09C9096616DD39E1CF908B51DFC90FA53F22F8446AD29E3B99C97
C971FC5CDA7BFB13C867C20F6C60DD2B270A467D0E0554C309F78B286FFD31CC
60407ADE40336B92E19DAE1F47AE85F4C1C1E77B885A6C9C0F8BDEE9C3EF8ED7
1459D5CDBF0D2D058FC29431F9A119204644272BD89C1F1CAF219E9BEE3372FF
865642058F8790BEF3BA4CD6406DDDEB3CE5632C7D8E59244E88FEAD25EA9F1C
D283F555D9D44C0C60251FBC42A2FE109> |
10365 <0C1C60D8A8C9B5EE3176D203BCC1CAC8E3018EEF296B497CF9D7B36C6
643DFEEAFB5BFE3C13037A73BD6DEE13D95677320B7667CA9A314905B9646C31
38F3BB8B1DFE4624DD35AC90BAB1707FEC3F49A1A2BD56726A13550BDD7E9678
A58E841A2CBA2CA54763681A2A7C4A75E1A1D09566B8F702FC523D527C3FB8A0
58572DD8A6B483A7C669EAC60572AA667A81AE2FB925904422924CF3D2EDAADC
D90844039ABAFDA74C8C402894601C44EDDF7E778E8184191FA25E8E07765F4A
27ABA991F4115C5F02311EC691D96ACB55C1E33196B967A7024DAAA860F94B63
545CE27418267256DB3C72D48C8C3C7A1F69508396568AD083E3C1116B04AAF6
698CD12937F53B401F4D9B7950C7963FD4AFE734A9D393E67EABE10510C4BD5A
01F0D3A5650E779EB642F0A719FC630CFA9EBA49AF771D4AE1899DF2F690340D
2B77ADF259C2BB085D27961484C7517E44F219234CCFFD5FDFAA84FDB1305BC8
9B65CB15E08A035E7027792120FE9997DDA2FBBC5876D620EF1DF36D4A1D5A06
564A480DFE3A6146D56D949F87C0985F3DC66033A1D7B55A753243C8762BC03A
86A1B52D9F457F4C2C4> |
41277 <0C1C60D8A8C9B5EE3176E4EF84DE4D150787087028A4453D8A9BF5100
C1CD18C4C0807F74E341470FC4D2F91C36212D4369A4541DD1FD019AB319D7E5
1528ACF285AE7096DB6E8B6A21F77B988B83979616ECB49285CF5C76CF92AB8F
E541D5D4A64ECA280302D64CC100B6B983A076E0713381919A9B554A10D0AB35
C231E1A38D084DE2E02DA090B0F90275C5F0A631306691E8D8DE158E5BB367EC
1CB6AC6B74ED92940AF0F351856E484F2E82163D6990093D4BE3AD894896E045
B8247F62129877CC143179F1864051A10ED876D9A86EF83A7BE5711EC7EDEA09
05FCDAB1C4106394AF7BB42BE05263A7EC9FC0B64E70460462F53281C4DA9110
494FB7F4237D30CBA006EE806B0E5C7ACED5353D7638CF2D68D2403FBBCC6BD8
DD495FAFD2F6A2AEF0995AB13592347F71662F8EE791253E8B26AF3C63D668F2
F979338B09E783461372B445E9742B9411F80BACBB786B7E1E1FD8547ECB9B94
61EB0919635E6F757B5413D4C8F2369B6BBFC097EF77FBDAF6059B1B3864FFA5
B02D10927D7500F2D7E37E21113E2D023FAE2DA8F718D1078297DBF42FA10170
5B3540D0ACFCBD47B8D5B12C7AF3BAE3BE7D8BCB7180D2D9DB26B3C674C71FED
4E0DB5393CE5C9FCA5F9258F626F8A2644C66CA46F4B87A0B6CDBC3637C38571
4A7860337A1B2AB11390926EFAC160F2C2F9E1D043C94> |
17068 <0C1C60D8A8C9B5EE3153728DA988015D89EE1EAAA6779C0B00C1E031C
02DCB53613494A3DF03D1FBC0B8FEA568DDBDC2EF2615958DA2501F5B9063E26
301891E65130EF1350B610B4B97EE273A8B5E0B73C9785224E4BCD7FEA73F142
DD98B2EF028C10E5F444E4E7735FDAB743ABEF7D41DEEF5ED8E458E2472BDBDC
389B4F8621E349B4788A09C03D75F9DA6976C5EBF83E124E4820BB615EBFB4FB
ED227FD6CC379391D703B6ED64C911FB2BEC80DA02C21A9782349D12BA0B2FBC
930FFD75CDF0FDB8677B7C1C0B3E811678E140DF6E84819DFACAFDB5A758F59B
75C778672C235676C1DDEA23687D3B138E2A66A4DAEF42E86BF4E58E3E3EF3BA
6D51876646C83330AE45799E24AF1F3EE7FE1164A4470228D90291403622C183
F543A6D9CEF69E0163E0BD93147C8BCAE371ADAACE0416DE05E205F6AEDA7E6C
F5FEE65EAFBADD6E3F08B54689CB342919BCEFEFE7857D49E5FDE3E23576F585
66C95134423FEA63A8FCB8A31A36E8E0DA9CD1B7D7FFF925678FB4F22FBB8D0A
E8A0364970605AFCDF17DAEC43F9693EB2B4F491EBB66FB552498C526211B54A
17A9892D212EA527FC04BF39B9A7987FC432BA0FFEBEA9D640204721BDD00C7A
586EDA991BD682587D9180337CECA91883811CCEA5AD4D489B81E8376CC68E49
483FE3678AB8DC4C2F865B02BC9C8C3CD0A9AC42B8AAF6ED3477BEB472B7C5E9
72D376A58A4ABAD4CFDF5F697E7A8DABE0D30690C277865148E5535F3BCE5260
D7D81> |
9832 <0C1C60D8A8C9B5EE31713EB8898C892F2E39CE9E0AD23094CE819AF4E1
0764742056419BF302001232C83C7FBDE3754192118A8FD3A5DDBD1778ED395A
330D3F0ACD88FAD1DA849E27C9127ADA0B3AE82E854F10B0F09FAC38F41BD8A7
5EE257105C9B2E67EB3DBF58D6C5FDB311CD45695EFB36B27B1EEB10F362FF80
C24362FBF101DC7BF67F0CD640E030B2C987A113F6DA9363CA2751462D37091C
CDAC3514DF51FBF3428198C560DFC4A2E90C4BEDB1EC82B9308BD86DD62567E7
6DA84E1C3868A064336BDC66E6943E959D92759041972D3CB0E9F9> |
39398 <0C1C60D8A8C9B5EE3176428FFD71C3F32FAE9B5783466D1DE9995E1C5
F9FD145288240947D5FDDCF24AD66C7169FB1887A3FDABAFBB3007EDEF567923
474CB011312E68F2096A261147E90CAE901D98319D8E9D6FB6A93E38FAFA0724
6406AA8024E9B00EA26883CD0D617D015C39E5E878208FD67665DA1FF3558490
B1BB84C53C525F04FD6A0A2493EAECD90EA66B12E329CB1A252937FB9F2E02B5
58826C05EC15F43E1DBC05029995FDE92C54CA04C8C38B39B38922FB3D08DC0E
0F0A65E7EA166BFBE962127CF0B37E5F6AF5E0CE784AF663BA333C05855F9CCF
7C960A6B210D474719D2977878D6F834B6DF448653FD89E490BDE30402CAB513
C65CB504CB9E3651E980ACBE3D150752E1FBEC0CB87ABCD43BA7217CE80B53A3
AD9EB97A067DA92C340503404681BFEAD42D303CB28D24BE7DCAFC57AE3E10BB
BF15EB756EEF2055A0CCEF8D0E508A73A26B3498D7E1CAD162B25D2FDB363729
26EB69F86> |
9580 <0C1C60D8A8C9B5EE3176F9C853FA79385ABA8706824D025F063A3D51DE
7236CC31DBE48D2AC396695DF0040D06EAE5A1FEEF1C78BC703F8D9B0AC07D87
61E1509032EAD8A6182D753931E1A437BD91C412C3D243E6CDBE1AEAC3BAC285
DF9C7EB09DD66D1A1212F8652A5764CC6DB5BCF111AEAF468D1E381AF913CA65
0DDADF37F53BD05CED210DB637989AAE656EAAF0E71DBF4D593F3CF977040F69
D7CC18F8457CAE3128671D926455F99EAA8A9D9F93EDC37074D004357F29E988
AA08ABADBCCC4A9DF8C68B3E5D80B414792517590FA2962B167E16C528AA70DA
A45D95CCDAA2D479> |
9562 <0C1C60D8A8C9B5EE31764DAE5CF23D5D1D949444237F9A60CC71F4AAD7
DF0EB3FE82E09D34919487737BCBC38518DAAB640FE730492605FCCCA5C82FBB
7A08866E04F1A64E2A27B651F03D9E96039944C502E9E99B5B52F2DDC1793295
BED2FA0BA82D04199D80B35E3EBBDE40D7F0319FAEA36E177DFFECCBB637D356
39695573D80908017799925C98634863460E3D0BFC41BE73506DFE8C98970B71
BC36D0F6D60CE71E8F4D626527A52C86> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
83.2556 329.998 mo
(\253D\260\(n\270z\035+\313T\031w\370)
[9.80663 9.80663 9.80664 9.80663 9.80664 9.80663 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 7 GetGlyphDirectory
3355 <001C60D8A8C9B7BDE39634C68951D838895FCC3A1C4989C0C90B9EC3B2
DC5957F75502E6CC8CAFD1ECFA64859446F83853DFC55AEF4C986D0B09F2D28C
85BDED0DB2CA3D022C3C4B867CEFD1D0A5C5CA02E80BE6539A54A10F251C9CCD
6C05FF045AB64B96C9DFCAA9124649F8FE012E4B80221DF39340F868F95672AE
ED10D21EBF495B4A726D8578521AC03D9D5E863102C10FCCC6CCBDC41770B766
33CD0204> |
1068 <001C60D8A8C9B825FA7CF951B61529088438EDBCE388E1F0A2A47985B7
DF7CB59A2FEC1DFDFADE94826F2B200567BC4EB0B8D96F4337017E929B30C9A6
A2BB2701456B9D20A99C1A89279093CDC9E8AEC9BA078C4FA6E85F1C6058CFF4
116AFBA38BBC8EA3B68E61B1EC924EB7E05987B6EA0C0CD49163119F90BC18FC
1043C66ED575036D5132FB0274FCB3E14C8D12A3EE08003D073AB839646F02C0
EA596167B08CAFAF0FCADC7E44D42A7035EAA0A5A30C0297ACAA7570AB2D6B7C
9CFAE7> |
1138 <001C60D8A8C9B7AC355578F0AFBF2ABA49231DD42B98E13BC66C31BB11
87975D4B1EDDEFD42BD4E59A726DCE91358EC40A5F077CBA7C186B55BA13370F
060B7FCF> |
1048 <001C60D8A8C9B8771BBF60D399540E5746E9F637606F36B2C33F76F317
5441582DAD2AAA628D46E539B236F35AA7B008D51C808C5848884077DBA94C> |
1197 <001C60D8A8C9B605F8D38B1BBFBC75A8C1ED0C508CBED258CB7F35A7EE
BD4A> |
1069 <001C60D8A8C9B825FA7CF951B61529088438EDBCE3DB6254536BFACF02
07AF7078E5C1AA8E65EF17935DB971FD7D657F3551BB2CC610D5D27BC0F05CF7
7C7FC7644F31527B48B8545665157DE332D0E93B34EF9D957263CF26A2BC2A0A
154BC377152D6D3D28C2FD3FED44446A50EFDCAE37644AB393DF1860941E2B59
C98F7DBBBF10B76FBBACD80BEEF6E4B3559A38BE3D16BD048EDA8FC84890337B
89A9EB46B69E07CF00C64C52AA158F02A816D6C81B7989B9A6BCE99A041238BA
FC537BBEE4ABC1> |
1137 <001C60D8A8C9B7AC355E8E1D620B1ECAD79066F7FE5949D279CA1E6F18
41CA4CE12881D6C9DF86810331C4A370FD36A778D6919E7942FF5EB87197E634
F8FD9049E79663C0447EFB45592D51953A09015ACB124B05E976984CBD> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
153.526 329.998 mo
(\015\033)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
160.543 329.998 mo
(.\242R\224%Pt\200.\206\(})
[9.80664 9.80663 9.80664 9.80663 9.80664 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
219.169 329.998 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
227.473 329.998 mo
(\241=B\254.\252)
[9.80664 9.80664 0 ]xsh
-72.1444 345.54 mo
(&h\231\346%l)
[9.66285 9.6725 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-41.5944 345.54 mo
(\004,\004\254\004r\004\030)sh
-22.1376 345.54 mo
(\004\255\004r\004-)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-5.14541 345.54 mo
(I\366)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
6.06459 345.54 mo
(\004,\004q\004\030)sh
18.3483 345.54 mo
(\004r\004-)
[4.93143 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
26.5446 345.54 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
32.6916 345.54 mo
(4\003%\335+\225z\035\253D\260\(%Z)
[9.66285 9.6725 9.6725 9.6725 9.66285 9.6725 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
100.299 345.54 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
106.419 345.54 mo
(B\254l )
[9.66284 0 ]xsh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 2 GetGlyphDirectory
23134 <0C1C60D8A8C9B5EE3176CA9FBA6FBDF61BA2651420EF4F9BF2481956F
C2E06C7C253CD66675472F3F6CC0DE05D1F287FD1765A36B189FB69C6D60C98C
1EF177F4A78D2E4EA24EC0EB8788E5D46225E1C3DA903F627030D78AA6EC1606
C9657732DE2CB37FE42E8AFCBE5F2FAE5F0A5482527D189CD27188C19B57E8A8
A7D53DFD083AD5B152CC91FF08B6DF388C7597B3C3399CE8562AAA8256041BFC
801F5E38FEA71A1> |
10075 <0C1C60D8A8C9B5EE317642345AC0D59848A59CF776899FCA6365EDC36
39C9121BB8E1B7D5F97233120353B9F9685A041B0D7944D3DB8A416B5A0EA14B
239D3EAC672C026653793A8D0DCFDFFAA472BE81FA9D194828323725487F7ECF
3533B92D231675F02A0E0F0BA440C8F531A0518DD75DF7B44EB8598B287285FC
FD68EED15406398DFA5C4E42C8738DC3CFB075A5FAFCE70F18AC99A8AB2D2C43
9DC072734E6115DBD91BB4C5EE4CE00C4A4752D091F0532DE98F00C9893D5794
6688E8C7A3DBAC5F6FB95D7E2773902C03C2DDA3C95AC5401051634EDA5F9FB7
4FCD36BE15A16D5F1B50E37B7A5BEC2BBE7FD9A470DE832FB2484270AD45ACF9
6C421B517AB6E7ED04C3979AD43D153703422927083D27C3D00A3523B6D5F0EB
F5A075C2572FF93C82AF86CC63A05E6154097732BB813CF825AD8131B7147794
E771F8B9128816BAEFFF0C6FCF803FA1791D5C5001FEC29895A8A6FC0F57085A
51D0215F68494A1DC35E8CE4D839D96F6804B84D8F8CF57C5D2B7D945EB7C9D5
9136ABC90776648B38CFCA02E13901619927083AD2255511885773654C2> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
125.675 345.54 mo
(Z^'[)
[9.66284 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
143.627 345.54 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 3 GetGlyphDirectory
18 <001C60D8A8C9B7E2CE5B64843DA06ED2B587677F4F5C4CF8A1121ACC46E6
0A2DE3D0C6749D48BDEF1A67D0DF1DE6DC1BC54B0797692674A25882518F5FEC
A231EC2678D0DD8EA13C13F82686D9CD9C4D1B7CA7E7866E84439806B3EBADF8
E59ACF41D62BF90330BD6F2274E4772B273533E0AED4E7C96BCDD01371EAF0DA
AB0E9FF3DD2BFE825C34AE556520BA2CBDAA36BB052B280A91D7B644C282FA99
72E5> |
277 <001C60D8A8C9B75A17A21AC7372627F40AA77D8C4780B1A276DBD7CA296
96F31D30502AEF306C5FAF6094540B4CCB260F8422CC4847EE90E4801F8C8FE0
E6EE29746FF673244656BE620DAD953E7B518E9F98467908ED0B9DD9C9B1DE81
25870EF8F11E9372BDBE30EECA0950EB5FA275EB94A620F9EB56C5B96DF18992
2CBEB315BAD3C1B34F69096E8> |
271 <001C60D8A8C9B78256DE39697EAD561E19DDB17E31D07C5FF97E93FA9BC
4EC5F6FC1B83B55AF6825D9AF87A0898C8046817D865D6275F5315EC6109C5BB
5EA3FA664D8DD9B525DDEF3634DA9A3A974ACC5D7065B25BE182CDD7BDCBE7AD
2E4225CBF862423B5648A8A4A473B64CC6E42B88CF37CB92C3201A637E149550
021B3C47A91E8DF729248065213449A10B6D2B6624F6E77BDFDAF7CE2649DAD5
B3943880B58960D86344912063ED3E03A61A5BDB8E8724BD54D99BB28345D42C
2F59901709D887A2BDC2F2F3F2987AC61B8D825B3168BEBAACFA2693CACA5815
5F918CD229E80E6A8DD58B938E7FA> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
153.214 345.54 mo
(\000\022\001\016\001\022\001\007\001\023\001\007\001\025\001\003\000\025\000\377\001\014\001\017\001\013\001\003)
[5.36986 5.12085 3.93527 2.83937 3.13824 2.83939 4.74217 7.26277 5.02113 4.782 8.48819 5.34995 
2.81946 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
219.55 345.54 mo
(\037O)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
227.832 345.54 mo
(/\225)sh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 1 GetGlyphDirectory
39916 <0C1C60D8A8C9B5EE3176421042D11E75AC497C1F659ECA97E38B53895
E36DE3D469EE296773BC793C110CB3BC45CE512B71A07562DA3911A2EF56FCF8
751EF8D723B7E5F6A55282CDBF6E587E1FA2A1B8CB97DF9659E2B87A8A2212E9
4C6490B4D971061077BDD564DC92BB181EC4199E54E3A5F6DF9C764C44697F2F
CC510A156E84F2FDBC1F21461C38D6C7DA1561B4BB72B933F5CC797085B21C9E
7EB6DCE7EC86317D74F5D54AA981F11C084F7B97C06F76F5E39F5FE843DDE6C7
DE7C8B449377F8752031D99ED2581222B7C8A816BEDBBF4BCAF9BADAEF6F527E
01D87E2E3FEF78F696804C8AF81BF30AEBC56> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
237.418 345.54 mo
(\233\354'[)
[9.66284 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-76.5254 361.081 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
16 <001C60D8A8C9B61BBFF803E22704046805A4C4DF005A3E57A9D272D3EBD0
292688676B8B3C8E12627B66000FAD29EFABA9E507D2A1A21A65D79FFD7E0930
B45C4072FC95184DD9D6C3F306DDB0549EA75E29D4D10DC670CF5DDB89953654
BAA54E0938902FABCD95EABE2383E13318D3213660E927D080EE5EB2D28E02BC
2B52B94BBE09D9E821F752D4> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-66.9394 361.081 mo
(\000\020\001\003\001\005\000\377\001\023\001\007\001\025\001\003\000\025\000\377\001\014\001\017\001\013\001\003)
[7.29272 4.62269 4.72226 4.78201 3.13824 2.83938 4.74218 6.95388 5.02113 4.78201 8.48818 5.34995 
2.81946 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
3.2476 361.081 mo
(\037O)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 15 GetGlyphDirectory
21281 <0C1C60D8A8C9B5EE31764D906D55A4C199BC512EE67719B338C6FF21D
17A62F18A6C69AF805BDECDCFC34EB7A7F94D8DF0C875D1090110483E1BA9E2B
EC3ED219FBFE3066D4E0AAEC11D85FA1C398EC14A83B981A3C412F54685C3BB2
F845E05EA76445A085A4C8CC2D2EC74E8EADD42894BF69481A6E5E79B818D5D3
804ACFC27F05F070D92D6BBF261BE28286A7A67827F31364399A10089D2C595D
9505BF782A4BC3339EB4D1269A842104A1C40151CDB6DE4013EAC0A275F1B63E
74206F7CABAA7D468F1FF58A7DEFC25B59A753C210E6A5D0993E99A49905444A
12FFDF028449810B87FE22E87C951375094DA70E599F5A4EAABCE973D942E4B7
94DA262FEBD705EBDEECD214DCA87A061F93E762EA95F2C3FCC255B25F5EC7E8
7E06C9271A32FBD30A03DFD0C29745CEE9071FAB6474F89BE27> |
37545 <0C1C60D8A8C9B5EE317642A7075154CDD79DEE1BACC76231A434373F7
F0D17777D16F75506062F09F60C4824E70C118465402AD2393CD0CA5733A1EBB
C5E59355F7AE7D2A78AA9CACF520249339A5CC0810BF64206BBAC07F149C4DAF
E3339A2C4344B70932D4540998282A3E2CAB015ADE6D906FAF214E2BF65BA355
5935385CC0ECACDD229BD9CB33FCE7B5AE84C487741F4AA4EA2C1906FE8D0A26
9377CF08D847522D5B8C77F324F2688C46040312C369D8D70D642C8EA7D85FFB
3CAE1175FDFB37E0C59F2A82BF3AB81E70DC5EF1061AFC1228A778F945E93862
2DE7BA428A8C4400F43C0FF30A58ED6A9A4DCC3FE2B2607B0537DE66CD7D7C7B
D4D799772E8F10443A84C22AAA5A85E7AA710747EA2DA14D295E3E6453411DD6
2B65B60875BAA86FC85528A4466D80AAC883D110039387D96AE6226FA067A2B1
7707EEE09166815811BF14DC1F406C02FE545E6393E5B70BC187BB2603052950
F5C93861FC5DDD9D09287EDF3F9FDA5C7A652CDBBBC9401B650A2E77279D7EE1
5> |
29519 <0C1C60D8A8C9B5EE3176FB69BD95A4F74A0429B73CF85147DA0BE551E
9ABB3241E1D3311355224DB6CF13DF589B4E42CAD0E7D85486D9E45347D21124
EF4E8B36E59104E4FCA2D149AF9F9B4D6AAB6E050686E2352CBD49C04EC075D8
743BFF2D42FB6B07857A050B18181CDE566D1366E2A4548CA3CC280863D5EE4A
18F2F9E6507A9AA423525D5740108FC6025BCA5C4CBE55F4B97FF5AD97772C3C
4E78DB73C5962D096E21D96C9433B326803D013AFEB1FABD9837AC889613D238
3FCAC6A75ECB8850D412857F986B70A4361144F94E0A5D14C270ADB0DA78E177
BA4E17E0F91E1956326> |
16050 <0C1C60D8A8C9B5EE315AD1FCBB9D90863A610259931D017D444FFAC7C
133D8619E47D72282B05D85B2CE9950A0099843430AD3813BD63448E7FDE9654
F5A0CA38EA96C4C883E0048579144D16A16F8E0290AE661D02D66AFA22D16B1C
2379D582076C09F18C26831B3873AC46C79EC148466ABB90DF744CF5A7EFF304
C8FF1244D750D3DB2D2ED7BD945A26526F194900C5F290BAE771BA27047044BF
7A8999F7DDE4D16B7E78681E52D64043DB7F9B2EF8005CAE458BBDC0ED136AA6
605B567665F51E3BF150EA5DAF2DBD0F1A945347F6E63C1B3B66F5F38923D3D7
4E86D12EAF84987B989677722E348793357932C7E32C5FE75319DF7812702A1B
40A37F8C9EB412BEF48E00EA10078BC8FF636E1584E287F413626A837A0608B8
33B17DC51B69EEDE185AB438317CEDD4AB02938746BC3DBD04153C308D57470E
4BA7743CDA47AA374D35D8B16EB56037FC6B258034692C56DCB4CFA52C9D4AE3
DDEC92021F650AAE63A9BD2FE8668F1D22AB775846AD3AAB285DFB9D32DE5621
258FF50FA94B6E22C7A2EDEB382DFB1208554C10E8502BD44B1FDDC2D2CC9E62
E929B9E9A9CBF2151D071D242A91624B69AA9780E610D0E9CD4A9C9AA356F74E
11CCBF095025830594C0621EFB4AF1ADE6234602B07ED739EBA6EBFABFBA7E74
ED96519CA0C4AAB393A858299643B7C62E53842911E0E6FFCFF5D36FBBF33C55
04532244C7CEEDB21475619418A59C1597A4ACED5CEEC0C213D8A3A66866CBE7
C452B52B1C625FBD01BC0A1AD7DBA46210389E2A0324BB7A1F5632F05AD9D8EB
C91BC36F54CBFF6FFD89BAE0598409ADAEA8F242D25FD41CB0B36711C650C151
D1AC092EA07226920E62C50C6EF094A144607D082FB8B571DD0C4834E3585C1F
8CBC1D7E8366A95A3F13D10A1347D345D5F7B5576660997169CEF2C1A633B0AF
4353043BD011D6BFA98C353D43555DA299EC33E686C31A22D1D401D2C63D2010
6760EDDA5FF6FB858694EFFB255F5E9CD59B7ED70B98CE983EEBF8CF0F385C61
91E13D0E51A805CD1468F4E69C6897730A8BDF4DF8DA0FBB3AA227477F96F557
24C24C0017031884E4A4534E7AEE4702CEB5A4F6FCA0AA5D038F4524EA5689BB
9869E20BB5F334BFACABF910B15776B478C26B1F1F16EB7E37504ED2EA9DD15C
1BC51D9D21FBFE506F648ECA6E5B8F9E2> |
21604 <0C1C60D8A8C9B5EE31764D25D4D1813B49B473922CCEFF60115EE69A8
AEC643235C094D0B97B428B44F604F1643D50E473559E4BFB3A70F8517BD178B
5C19DC9E3DB56AB9A6B0E772C3EED8A59412DD2B1BDA3141DDC6EB88C95457F8
219861C86753E0B06271A783B85EB44B936E8D3D104553D94C2B2F6155215883
C41FEB45F2835555F39214C6C7F118673E4999A0EF2170864B13DC9AE118AA37
5C03F1032C1CC057B84913627045DD04C98BBC2E2E31F1F3DF96F73E5F71ABCB
0E309BED97DDA8C9F12A4CF568248DB5E0E562566C6EFEB971B7180CF93A86DB
47EC872A67A64EDA03C6F3D88DE3A9F78B2D5DAAB1A199F1BE59D875685F810C
B6BA9CF1086DF66B586011030E4F51138D5D929AE087246CA172D95C41E999AB
8CA24BC2DF78C1B2C7BC0C1000B5E36F50D00D2EC7471CBD3B68A1FE95C783F0
6E8128D31F7FFA145CE121761BC7D1DD21CDADDADE05998AAD61486F64F489C2
C34D2746D17B1973DDA37BFF8FE4F6A7A41ECC5E298> |
44315 <0C1C60D8A8C9B5EE3152766D654499FB50EF128BFB1E588EAF341B52B
47C7F4E56616CFCF3BDB466BDD2FDE1C6CEA2EFABDD33D32A1D590E7AA99B601
DC84DF2CB47FC00FD89BFF8756D8E2F96437B5706C11C35C5A0DC1E41DEDDF0E
DE373DF909E71CBEBE0F5BBB461188B6EFC8411E8EEE17F02B6DD1971F6B69E0
2BD918017273B2BC5B20089DE2C3A2CDF61462F5335FBB41DDA93AE6F674C9B4
1EC27A2E88BB1D57F788C82C533B7E18836A40ECD004EA70A04FD5DD26C72F58
34870987A0282EDE9C5606AAEEAF9CFE2A77913948844F32BDE95ACC3BA4AC1D
570D675A0BF4AC33E5641179B323766BBD76B3242760F5E49DF127D9B2347A31
7888B78A24444831983568AD6E65474F6D856207C4AAABD92128212A13FBF754
E2AD65ED79396EE76333A3E784615960A928635AA197EBD591C24EEF47BC6363
B1383BA39B92C7AA51DC65FE4AE7915724B64F58228B5E2AB0DE7DDD89A9F8CF
ABA76A902566A15741A60C8C5C996C86B334EBC858A3FA67F9C13A2389ED5B94
3EF0C60EDFA8AE47AE92FC5F2F06AC0EA0C27B55D779BC53185F22ECBEDE6D18
3BEE581A126C48B46F4E44250AD1C266C53DAAE5B0EC4F0CA996FE01786A7584
02647998DFD5DC32EA23FDFA1894B4F6D1BBC299954126D34F650A5BF1D90F60
B2050717D16088AFC1C0D8C17ECD7EFF826C38663E5D139CC06C0B058B488FC9
ACB6FA6DED6E7FA8C36469258AC2E6153F9E4351F895F1C677919880E51DD> |
26437 <0C1C60D8A8C9B5EE3177C8E67DDC66D03591A449F8F9B00C7BD24AEF9
D94600DB1243A1EB5AEB289B3A6287A474C7E18C65A4E461110979EF13704234
E9305CFCE9C3CBAE07C3D0BA09E595A6764AEF9F6658624FB97BE5CCE3DE2DCA
BCECA2E17FAE9A1C6E18664454529306D0C9BB37B6F29519139633C9BC9B2F28
F5EB40DC33C56DBC7178832A8D5933B996067DA6FFA05790C4B49157E67D7189
61C399BB6C7AD4BD17C67A87B01F166968815CFB39D45FCF79E77C61E30D42C9
84B2DE401ED80D17D165E4FA5AB7101CFD3DD0495782DCD0AEC272DFA4ED4BBB
186E1F1A7412BA35F0F24E3147293FCDADAEFDF0DC45953DB968824540D2E7DA
14386EF007681EF8B32017A6B38C43A23456D0841F966DC21CF76B27DBF9CDF1
30F488B735399356464FF63D4D00AA0C12910451F9EF0C9F6A30C0717FF9615B
7D4C7F3F4C2A6356D5F2601CCF83467FDA4FE7CF69D434BA52272B51DD0027DB
8BE57647873B7E34D329A4CD67F0B443F0114F0572D70198AFD980D0FFF71084
7F810D417EAED012B03B6E7D3076C0F4D958AE379D080BCEAF88D383E8EAE2E0
1814CBE5B93937AC406AD65FD23AB484DFA6206978FFF3860715F273E7B7057A
19C2135D7A7EAA02364CBADD539674CD763484EA58B377E19C9790846ADF7F67
512CA58B63D67176BB7ADBDB23783072612B4DA252BFC56C6F3B1C314888D479
D9C3EAE490C91F4363430FDCCE026FFE4E7C4BFB2E68FC348ED8AD1DC2114D85
EAA39A495FD4244B246575670F7AA5167D610E2929F3A53597539> |
17712 <0C1C60D8A8C9B5EE3176D20285EAA196932C8423D9490B6C5FE6C2A43
BE47321A73D9147910CBFEFC2D54150B0ED0DA817F94A7A9F19D8D1D34E53C81
46874A0A96CF40F19F316BB4AEEDD79941E2F290EE0C666D23CFA987DDF94C6B
45F882DF794C37F67DA3412B924EB13DCD096E29708B83CA5B7AE244F90ADC2C
F286DBD096FEAF1A5488D2EC30274651C23F2968B7DC7F15CDC012538282CC7F
A6E83947EDBE5971603F9C42593671B211E5DDAB6D66A613B3F0635DE6296F5C
75404993BE3E041D4D88F02EA40FEAE6030336A89F449C938C038B60706B6A1A
29B3B9F7BA8E2254288F31300DBE7E353AF0AE5589A3BD975A0CE3661A8DE27A
785D6308F704A6CE72BDF8474> |
30143 <0C1C60D8A8C9B5EE3176CBACAF25F24B76E29DA09AC7DFEC18EAF4636
42E805E8E6791AC2A94C2C422015E0374BE9A0E9118B0C0B5812305E1C3202BD
BF224595F5D7E637CB7B453B261DD67A31A5E1A43114D2E4104C850316E36F64
BD1B27232D50352DA48B209F7728C5320BCB3AC9198F4F4EAC956523A3893DB9
4E17AD49C9B9B870A5C38A31FBE64C8A4C0433F5DA9F26C7BB673857B374F643
BD6E4EF71B51E87BF179A95F7A5056957396B709BF5FB64B8FE26A46F138E043
7D0FBD174A597FF6685277D1B4E8FAD3331FB62127F4CCAA972120C5AEEE1309
DCCFD621B344F77F340E0477E6AB984B966EF02E3F515DF6215F073CDC0F0738
30D48E25404A27CD39FB8D2A8F08444987C6761CA87922EDC984B8C3D0D49733
8D82594B45D69E39AD94FA90E1BA66D6349B3506C33F0324629FC223C2246300
8EF6A939B5E7070C4DAE891BA79> |
43850 <0C1C60D8A8C9B5EE31524432A875B970F66AB8ECF94105AAD949740DF
637DCAB8108094A6ECCDDC7E2A226595CCD8EF63D1C973703AC24AC91E9E47A0
C3E38FFD52BA41C378AE7DA502F9B7F1EF86D6A2587B9D608BDC4D593D8EEC16
C67CF3AED1337E39467EBBD17CB065F2BF8EAE6954DA76D994FCDB1B5140F07C
C5F8861627545D28D4066FEBC80A0A8748561B7535915A33D21EAB04A766324A
00F037326A4A3E9AAD63F2A91849A382829CA7D245803777C5884546C72862BE
28234D11638C0765EA593E1142E5922F7F9FE75ECBC3A6BE4DCA7854CC215E73
AFEF940680B5FE39E8B4300C1E4DA854D1F3FC47237A0E280A278F61E9E30251
1D26A1A88E3CA618F218F457D7CE799DC23FC9C30184C248311F41301E5E3580
378BDD4DDF7E1FDEC28A18B076C2A5A83E47133F954D5EFBEC9AF54E1530CA9E
A408BA58CB9130EC7985B35587C64B8A5B699E69BD2C9BC69BED8DF244A12124
BA34207B0C39EFD6E46> |
19007 <0C1C60D8A8C9B5EE31764DD254BED79425217B307C6C6B7A3E91E780B
85E1EC298C7EAFBB9AE395479B1FA85B283611DC7D23ECA120D84A7B8076BD66
5352FECC7BFF9507E602C43E84A6BA97C5B25ECF68A508A73EE5D92BA7B9ACA1
95098670856A10DCBB621A323A7EEC7C41F9B92929A3CB8421A662E1B4AC5B92
FFA87ED9FBE843E77026CD11EE9B449596AF2134D9EE211F5631427199EE2ACA
F41CA017C3667A7FC77A74390B07E168882D0674101E4A098FB362ED77EEDF93
A4FF64720569329363388C02AF30BB9BF6216B9CD9433965C87581ECEE9BE482
9800B622C1E8CC32D3D6A403382A4FE7A1174A32E3C8998BFF8FE4ABAED4754C
E1B6232DD8091512ABC33688B307284F6576DDA033DE022CA3B4337A4E21289E
FE75773DA4F4CCAE129E0DE6F3B0641F2E5A1> |
24622 <0C1C60D8A8C9B5EE3153766EA52C44F072A8C0439F73CA729FC056083
EF1C3297B73189E89651236DC7A80ED27779A704785150B9E489FBE4F0670875
E4616EBFB13527E9E59AE588395A60855623E452B50D1615BA8FE400381E45C6
5E12BD64525632327F5EAD66410933C2AA07A5760131F0FF61AA54A456344A49
3484CE48E2971ECACBB7AA9C8A5633D455802AD80E5A24A3D01F17568AD4FD7F
EF922AB9941ED70D5A28FC9288D9286D4851CADF4ADF91A48BC5FB8B00F90C10
5B99266306BF6B9FB1653BE236EA341478DFFD17ECE973003BD1CA4417137DC1
CC192FB12212BC1EFF6046E783E6BD2C9CE9F0A36FF1E3EEB0C7C9F4F3D88C0D
D01E0E932B175A27038385B225F9A1AA1EEC2E1A0405481C9942DBE858F33C48
11A8A7AE53142BC81556409154A4CCAF56BE8B0142217011C447F66521DB5791
CFB834FF19AD65D0E244A16411C12314C54D55EDC3FC673B54B7F5D300890E93
1ADF1BE7902EE34C6201002F51B11FCB0F5CB3012EF79C8E74BA95F4CC1EE607
A290F67755A9ABF037F57A6861AE6A5983F038F0335A2BFB8F1346D116C4A0B6
A9ED33593CF48D5FFEB2033AFDAF56E0158B217312632DF69F3323984751BB8D
0255492809339CBC4C12603EC182D69CDCDA96986770D9DFF849A1F09591CFD8
87CB46AD167D2004BA31959ABC68FD810B07A22E6616FBF2AC86CB28FE843E6C
5D20FC490367C2DB6E89DD205FA814513D5E4F90E25C8ABBC8ADD41270D5245F
CA94790BD013F8E82B12A49AA761DF8B3D8F41D20D11B66DCA80C9E09F7E7889
24B00DCEC5418FBAA8E8035BEB4C0FFD82979B296ED9FCCC0CA23CAC640590D1
DA233BA7AE95AA296259BD6A2C8ECDF6DA81F3BDAA76DEC32D86B0747F82B499
D3CD1B21E7FF49925B72373C1D312CD1B58BA67719C44B1475860AF4AD02704C
A8CCC7C4669D977248684E72E6629D13CA5E65AFAE7834509EE3E33A32632F26
8547FD96EC04BEEDE6E9F> |
40137 <0C1C60D8A8C9B5EE3176E103A043F13DEBD934996BEB98C7CB36D7B10
E056CDC27BAEE09D2B718A798FAF2F015E11F73EF576BFE9351F7E33C5807BED
CC9113AFB452ADB9DB497C7E4DDDD9E16814A06126EE79F4EC1DA5EBC1F06467
5BF0ECA9E4C2DA25261292DDAC9E783C50273304555C84C80DF6BEB8E8D3F721
3614E8D6E1C902B2371EEA06BFD76E13C7734D6569D19D3AE631D27FBFE0E560
7C44BCA76A06A93545DEFBDE0F5E4E5E409688E541469CCE93195C3A2862905C
EADE21B724BD3710B853CED8F14210AB85D66F7F0D2DF520311C598B049C2252
B13F5BF3877CD88903B67736D649B92C217D1D9931FB5BBE957905C794C1ACA9
345855CF1E8B3F7D1D8680729FDA7AF614BE88612CD5B8B8B354C6E88F284430
57F1B6AF60E48EC17A43553514810AF> |
25534 <0C1C60D8A8C9B5EE31764DE0EF41303696E9DC635E7A60325113E09B9
23DABDABCCC478DB06CC119C8E2A6377C21EA77F7FA4DEB98AC0DF474BA93462
EBE26F9521D1FB71DDFFD9126B2144981BFC9803FF36D75533D86A014829817F
B6B858C055E8050BC87C5E35B967A6248C7D1B337657BAF734ABF120C9CB59AB
6A41BF13F401A4B7A583E6F1F8B094B682AB031302ED91ED00416FC8FAAD055F
C9CD87EBEEA1BE100DB57DD63687AB9F63B84D338A8D4FD9656C6A5129F45E10
CC5FC3A2B5A3FD708017EDA5896122DE5E203C104C45DD35F385D88ED1938756
C236B7F93B54A3FAD55F1D73F53523179855586B98FAB67C79A86C6D5E77B133
6764C50247F6D6F35D7ECF01FBE25F462E5B441442845A9951357C4523E937DA
A1E7EF3C9005D92A491089254A918C6018ADE37298F> |
11324 <0C1C60D8A8C9B5EE31536008999EB00F556BEB3F334E633351B5930F1
B3B4B47AE445F061CFF5613CDCF9E17A03FAB30627AC929B90C58FF6B696A839
F5A97CE921895C19B7DB0287461F5C40780BC32AFCD55854D1F72B06F520A249
8A313DBFBAD2ECF5AE297D9D382923F6810EA1311B0C82E14D8EC158B53C2922
0327B80B46B2F431FB062EF8DF87D165786E501F9F4E9AB572D65CF81E2E8995
F8083A5F0A480FE80D02CFB854CB3648165FE4DEE7851F49D26369662A2ED49C
E5080C1005AAE446E84477DBC93632DA7982B819D5AB4CDE3EEB0BFC12DE44CF
185FF8287C868B0FC1E095ADEBE32E8BF91A4B1D983978FB22AF0FF43FBCEF44
F6BF3D5E6669B11A553EEB6A6B0614A3F6CF5F201D6E5A3019C9370C51116658
5A5ECFB880F471D3F8DB93B9B806D787D0283EF73C42E92FE20C4E5AF92B3A60
6F106F4A9C58BBDCA95E739B7870D3536F613354ABDCCAB0F8220647ECF79497
D5A9A2FB0679ABAC3FE5A403723DB80C786E2136FFA9BEC995C9A962BA0B31D1
03885B5DE9222C6585B329E1A3E96F7B8984B2058EDDF8E1A4CAA7122229D9CD
41DB3696D41DF35636D22ABBE7559C6A0D7BCDC39EF44DF13DA687BACD6055F2
3E4ED26C758AC5CE3C8436B69A77740EB924B6451BA54B180339B6C91AD93138
6EDAA5FA8835A3BB4E990CC6F313314A6251B5143C318E24847ABEAFE89D91A6
C0FFE11A43CA1718F6EDD6E5A699968BAA5B42C5BEA14E328307CA6C094E9884
6F82E0B58E7226617FFA5> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
11.0736 361.081 mo
(S!+\225+\313\222\251sO>\262%\337z\035+\313)sh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
1236 <001C60D8A8C9B60C97AD343A62955042D5F880C380C9DA9D09D01CE443
14BCBF114EE2A505C6B82399C0782B516CF7CBD7859C352FED988AD992D3BF20
F212528A49E37F5F129ABC465DD73547DAB3CA47FB02BDEB946A3F48472515C3
F9C6625D43D6E2FDB2FA5576317130D3993BCF7C283027B66FF6CDADFB85BE65
36CE4DE507C068412BA4B8939CC64B196F8CECE73CA5C847ED607464EF5C18C9
8877D2138E4F1912CB> |
4398 <001C60D8A8C9B6B0D584017A3BE4E672DEDF1B2EFBFE42DF91B3EE9315
21050785B8C5DE3333028CCBD22796FF5071EE89A18EDA8B5076AA1BCD8CE0F0
1E78FA497A78F5E2166A69BD80BFF608053D818F00B47780C7D1E51FCD0E2F04
74033A9123021D89EFE3FF15AE3ADC231BC699749F9191768ACB64B1C56C1812
DC7ABC1EEA7BCE61> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
98.8436 361.081 mo
(\004\254\004r)
[7.17308 0 ]xsh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
112.443 361.081 mo
(/\225)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
123.524 361.081 mo
(\004\255\004r)
[7.17308 0 ]xsh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
137.123 361.081 mo
(n\270TdR\324)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
165.882 361.081 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2194 378.411 mo
(4\003%\335+\225z\035\253D\260\(%Z)
[9.69166 9.69166 9.69167 9.69166 9.69167 9.69166 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
15.5256 378.411 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
22.0126 378.411 mo
(I\360&p.\242\255\033\225"%\036%W~\373FN+\300+\313+\207O\332)
[9.69167 9.69166 9.69167 9.69167 9.69167 9.69166 9.70117 9.69167 9.69165 9.69167 9.69167 9.69165 
0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
149.576 378.411 mo
(\015\003\004\(\015Q\004\031\015P\004\)\004\262\015P)
[5.94768 3.55659 6.01744 4.09459 7.98 7.24271 10.8592 0 ]xsh
QYYALN+LMSans8-Regular-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
203.257 374.824 mo
(\000h)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
207.371 378.411 mo
(\015Q\004\254\014\377)
[8.59779 9.75342 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
230.884 378.411 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
237.395 378.411 mo
(gEE0)
[9.69165 0 ]xsh
-72.1444 393.952 mo
(u\277\253J)
[9.71082 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-51.1554 393.952 mo
(\004\324)sh
QYYALM+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
-43.8924 390.365 mo
(\021.)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-35.7494 393.952 mo
(%ZJ?R\224`.\234\311)
[9.71082 9.71082 9.71082 9.71082 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
14.3786 393.952 mo
(\015\003\004\(\015Q\004\031\015P\004\)\004\262\004q)
[5.94767 3.55659 6.01745 4.09458 7.98 7.41205 11.0285 0 ]xsh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
67.0406 393.952 mo
(n\270c\276\177\000I\357%\036%W+\225,<)
[9.71082 9.71082 9.71083 9.71082 9.72049 9.71082 9.71083 0 ]xsh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 3 GetGlyphDirectory
40042 <0C1C60D8A8C9B5EE3135A742D38E24948D6681E69CC44D80607D7F32F
688F8BC1E60BD72085A6FC7CB72BFA697C1CDD1AECEAB4644513A4157AE92AEF
2BDE289516DB0428BAB6B5E1010ED3A4A7C533785D7FD9794409C5DE91DBAC1F
0640C5D96B69489D8DFCE6B5AEA0860CF67B3B997BB91A1BDFFEA36A8EBDD555
EF1C14526A61F66CDD7E776D4A2A300C1410C14A72CBDD1A73B822223648F44E
5131A1A9D85B84DC4FA8DBC7C4637EE163A690FC486ADE6B58083A08A444961D
BB2D27CCE7B2AE8E3793F8E21FD7EBD0F7DF73EB9142CA86402627DBF826D6E6
ABADAA4C2B06DD02D400C310E7B8B21F9E8F6D330E738DD1D1056930396D01B6
C36E8BC89D73B3997E8F1954E118A1A11DD26B0CC77AE2213677054305CCDF01
D4DA87DDD0D81E8F680A436A95EEC858E56207E95D028B03A77FC9802735E12F
E663C58B273C768B5FC929552432970F9C29832C694B4037F9CB0C3CDDB9A208
2B38CD49C1DCB20BD9D044DB2C611ACCE43EABCEF7342A8EE135EE2418CC6460
789E5DC0729282C84BD1624B58514CBFA30198C1A3A0931D479AC58039913A20
F902FE7761030B4C32271BD8B925BA2FB65E24FC21C89904A97DF0AD1F38BAFF
F22C9FBA9E02760CFC2C320A3E568129FD90825D9CCD250C4CA5D5C18985BE2C
7F7D9666595CC0320458A2E2D7B7B1D034F1A88459327F38EC00818827F85FCF
5BCB4A3B0370197B5963C22F01EE8BABA4DF91C10DA2F2A0ED865BA567BEFE73
4E9607463C7B3DDC6B7231C0CDC3713700198069F6D0168F1EDAE15341523AD2
1F519B76E3D08EE4CAF22FB13A6B0BC2EAEB45DBCB5C76174BFC2B5651975FDA
A91BA8FF0837FFBDDB7D9C50D691EC2EE71D6F3D546C57BB37CE23BF5F4CDE0F
42C8FA9FFC4472C538860C588F48761838DC2240F54D5AE031EBD6E91EC7298C
C13BC0BBA5DFDF51091D80B0E148021E7FEC7F41AE907387EE50EC0DB087B93F
53E6AF89200711A0F88E669A1E2459C8BABF53388CB58AB304BCBF5767B1F098
2> |
17168 <0C1C60D8A8C9B5EE31764DD7ADE843E3AF4925A6A9CF2EBB2FEF4019E
CCCA051A8BA88D721BC2CBE4D4117B08C32C89A6A340B7B7A75BDB7DB342294B
E0D7CBF9F0CFDA81F690923DF6F1976180D9212CF7616534ED8D44DAF0AAAAAB
392EFF5AD56BD19FCD6071CA3C23DB38068A149972DCD04F473D919397C56162
D1B8CBC717C1128A7D40E32148F79CD24D29B2222D4EC82207C0413BBE94287E
EC27B23C9B90FE7455B9E304879CA739A8A1DB6> |
44566 <0C1C60D8A8C9B5EE31762A9A4F1CAA6930078245605093C8D0BB8364A
28E54E126B9CD58CAC63E3664E52DE1822AA2F72682711A82CBAEA56098E9EA7
2F7CD607315BD97601E0E2E2654565E595C6E64A77FBD45401CF830BAAEA74C9
34D3E73017690B09F6A52DD5C928001B03D1B3EDDBE0E377A679E6DDB83770D5
F5845B4F54126551DFE8D6815875DF29244D2BA829970A0D6461871C0FFF6AE5
5C5D20DF159E84E6D504BCE2ECF23246C5DD887CA6BC1AFA5FDD7AC7DB348982
F2D2A8B9C0AE27458B91395CE209D6C6427111AFB398888B7C496B3803D32018
896CF7B1DA00DEC5AB4AA52CEC3DD1E09A17717AA78913C10> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
144.618 393.952 mo
(\234jC\020\256\026)
[9.71083 9.71082 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
172.561 393.952 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
10 <001C60D8A8C9B6FC2DE47D406CC2F806600C1280425F8117D15A3B857954
68469B76FA409618483C59757696911C783B688ACC7173A9CB6DA19FF20C40A5
0D1B760D082EFC9B3895DC953F5291681ED633FDB503626BF6D9BA1C59AB66AE
EE3D818345EB7BE593CA1EEB354058E4EE16AA657AF78097850732F55C2D> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
182.147 393.952 mo
(\000\012\001\030\001\017\001\003\001\021\001\017\001\013\000\377\001\015\001\003)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
231.771 393.952 mo
(\037O\037R)
[8.52222 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 1 GetGlyphDirectory
29884 <0C1C60D8A8C9B5EE31713EB8BCACF9921D6EE9026B50233FA95B36EE9
EFF19DAE2220625C1304B543D6C006247B88C8A88BA86D1D64DBB30B1770AB8C
A8C744C19093523D4EBB2C7BF2D22F3D8D26CD1E911A63809F1362D2D908B2B3
F3229C048F3548A23DC9D25E96345F06820CEE40018ADB00F88A0227A616B71F
2B14E2115CFC36C0C194A7769B2BF0A9B8481AC45132F75E5646564F5F81C7F8
D145ED2B739F27321F978BBB877A6E129E5565D722DD03097EC64579E634AADC
83BD823E99512D41953EC9BBE2AEF25BA4218D6CCA018463C736265FCAB9A6B1
0F59DA38878F431B4848557554A609AE44DB1DC08B0D0BD8B016A19A752DA54E
D2CD932CA23AA23FCCE440F5142879746C7CE4DD02250D434FC757BBBA4CBB05
AB7FBE92CA9CB8146B150D78631B168F3F597A3EBEDCBEA873B47A3AECD527ED
49A8B7B53B46639EF2E55E9F0107B3D064E3777375094D451C33D20F127A0D84
A4C9EC6D5D2ACC0493372D76D6911AB71CF071BE01D6EECB89A26D8DA79F7AFC
D3F487A6423EE9814B68C2E100A8DB7378DF04ED1D698F0C5DC> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
247.088 393.952 mo
(t\274)sh
-72.1444 409.494 mo
(%l)sh
0 .745 .745 .208 cmyk
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-62.5584 409.494 mo
(+\021w\254\240IlU)
[9.72048 9.72048 9.72998 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-24.7994 409.494 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 2 GetGlyphDirectory
6 <001C60D8A8C9B60F082D71CBA8C4574A51FADC5B5C5725218633AA49E8CCA
CC94E73BB92465AC71D87B17B5D34CDBF2A97207B04D12FFE595528F809690BE
E3E24A5E8B7C23511D8500B16A453E9C2757D7977DA86F0901627413CA442667
A142E6E57A365A73B7B89431DD1C219DACC13D67415C890D7E1B021FA88D7601
A9D7306521BDE> |
276 <001C60D8A8C9B7E1F88EA38A31B4987032199D668407522F3CA782177D2
188E58257A4AEF66FA110883D382A88D99CA10BACD1EC7D92D591DE5712F7DC6
353D53071139DE9829F4A3D3FA88943387FEE228FF498158C64735ED2F05519B
0A9380A6CE9DAAC7015572A524F32613072705542292885B710FE9E224F1B3F5
5F66BF63F16528C7A491999A6B8BD4537B0E0C11982326149C1DE2B34AD0C4F8
06ADE61E4D8BDF69524CBE7FC7DE4564946A5B8F840D7FDFD3AD91381D6B6DC5
E7ED1CBCE44C95B85ACFCAF41150F26D6CF8F5C5D> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-15.2134 409.494 mo
(\000\006\001\003\001\001\001\007\001\022\001\007\001\016\001\015)sh
24.438 409.494 mo
(\000\004\001\016\001\024\001\015\001\002\000\377\001\021\001\030)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
65.8886 409.494 mo
(\037O)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
74.4716 409.494 mo
(I\366)sh
0 .745 .745 .208 cmyk
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
84.0576 409.494 mo
(+\021w\254C\020\256\026)
[9.72048 9.72999 9.72047 0 ]xsh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QYYALG+FZSSJW--GB1-0-GBK-EUC-H 3 GetGlyphDirectory
8033 <001C60D8A8C9B5EE310DD7CE0CFF6E3ED214BEC3CA0ABB0FE402AFC4B4
722B0F568E1134750DBAF82B982CF3C2A69B8467470B5144C1C0D7330FB0D0E8
4105B0BC9AFD5F8F98810E31FCB3E63F9AC27558AFC455F4A0E6CE1B03B15F65> |
259 <001C60D8A8C9B5EE31031B4541EEF3E78B4E59B2BC14ABB22D438EA5CF2
C5FB09871C5651857E67A2791F299C76A58B126F7C1809D7B44CDD8FEF7D256C
60E1F7E3E766688C348BE9245EC9EDCCBB1BFD0E263C351595750A9E6EA48A08
ABE68F6470D91B90B7F33A510E207AA89E5259EDA> |
260 <001C60D8A8C9B5EE310203313E5A560A8324AC4F050A19F0267DEBC81B8
8627C330D77793B03C514DBDD982031FEE5B7A933463D98BACFEECF6333098FD
86E77688D04DCD9BFDDB2668DC4B06E0A8764B8D3E8560F5FFF155E02ACB3186
C07D7> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
121.817 409.494 mo
(\037N)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
131.404 409.494 mo
(\000\006\001\003\001\001\001\007\001\022\001\007\001\016\001\015)sh
171.055 409.494 mo
(\000\025\001\024\001\021\001\004\000\377\001\001\001\003)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
202.453 409.494 mo
(\037O\037T)
[8.5892 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H 26 GetGlyphDirectory
6236 <001C60D8A8C9B5EE310DB638A3F47F6B115252FB209B254E3CA43513B0
C311AA5BD1BABCF732072E12829484D70D802649F322AB6DD966F4C10CF47EF9
B30E80CCD74A82311D644E163FD51EF3D8A9AB7EE65DAACAC3C515857DBAECAC
FB23CC3033884AEF10756820C3EE17442895B9D43384CFAE14C2B44B1AF0939F
6C688E05AE2C5290E3F480195672F881AFD2093BA547016B1DFDD4C2370FAF9E
01A197A7FFAAB1CCFA9E3B32861F3A94145149FB42106C6483CB41EEB3F83F20
176D41F991B1603A78D6631419566DF907105CC06ED6568CEC97632D0C5580A1
BFB0925B63048B0256632C36AC61D8F7135C149D29850E8EE24E6954FA50DF65
0C596BD36D0011BCBA1162B06E125CE7B473FBF95BCE346ADD1DDFE8E61CD10A
AE63FAA6E5BF113E183E5BE37582F6364BE2C5F486162925065FF5DA825F1DAE
65C3C612647F9E9D0E0B689E8CB6DE0014E90B47FB7D756725D0E29F74BA7807
AF49C9A70AA46307019B94997F582E59422F7FE5C27379502904FA18FF786CBB
854245791E4A80822E2DFBB56982F498988811D957235D53C38B3CD80AC87262
0F0FA7EB90BFF9BF749B9A0A26756EE1C31F6317C761F5DDDB3AB867B33C91B1
6665F959293BD139277AC67D5E5083200667C860037A85CE224AA9D553135FC9
6479235D82DB2D0FFC6A3408CB024F8926DBD77D30FF4633A709618A9069542B
2BC527681344A82653CDB2327EEF976293F1E813C582B497F790CAD43CF64181
5F671022B940551A03E1528B129E1D5310F03FD446B8CC54C0B0BA12D53B052C
F9B4BB0EED8C3BEA2F31BAE6065D477F0E97A4572F04D8FF9012AB6BA2B1EB9B
1E9A1DDA71CF061505F655BBDBAD861A53> |
2297 <001C60D8A8C9B5EE31028A5D942070E31FAE2EFA41CAAA53F8BC73EF47
C109C5B9B3E5CCD1522E68FE01CC29CF430AD7F959E510EF416DCD41CCC6DB19
3570EE83571E643493D99ED9C8C9677E251C91420AC7DCC536F4E049A7A21E66
1E21E2336BCE87E86CE9C6E795B08AFC6C0A328C352FA968E3DDB9E50B2C5DEA
4EF8D757EB20B1AB38EAB7BDCB02B736B5191E425FB9D7208DFFD80C81A74CC9
1616370D6D9F20122788AA93928A0DFA13EB24E52C954EFB8105F97894BF5CB5
18CD17EA88DA369D374B2F74FA6F60BDE8F61BCE4DE36D12A51E9EF2D9245F29
E13C416E18BA703B95F5E71DBCF523BA864E1014CE4AC1A56623237E827F91A5
85F12B70F93D158DC0D19FB0F230C122BCE44CE8187157F0B84C43FE77C20159
BBFCD4A2A68AE0A815E91C1B585F8DE54DAF58D358016698412D36936B4A23E5
97F103C4A5> |
7023 <001C60D8A8C9B5EE3102C49067658B9692EF1D641A58220B1D6423417C
99EB4DDA45513FCB0FE82769DC26DE4EAABF460DB9E76B0BF7C4A736FC240A3C
FA4DC6D204772C25BF223B101CD6205B817BB75CFEFAD1572A16FA02A2E54873
57F1EF15B9DDE1BC63AF33727759B63E1EDDBD6C4799DF18DF0FAAA5DE25792A
8525A60813CB0E4705D01A4294882052BE0766E88A83B79BF0D1537421DB5D9B
C18BA2737FCE3E39EE6C2737218E4947F02AE506A9E2D9E1D4D532C3AF8D49F4
D3757220ECF4D2FA6E6945F48BDDA21FBF5E761AB19D76897284793ECF8DB75E
BBD78752A5F17CBE23D7A846D14E87450BCD7A94420B3CD62E08BA3594744B98
D65D5482963FBE45C324EA91CB7215CCC020C64C53AE818F1CF8CD80CFC1214C
5D1D125F6917E3B5F858981CA7DD1062CCFE4061E43E784338E108D066DB5D30
3D17B87B756834C86DC16B12C44A14F8625B30A88E27FDC58654F86F9F0D407A
C41EDEC44DE97BE4C6A1A4066BCBF6BDA95BB1F53D089FE2F01AABAC49004415
22A388CC8F1B6E8CB477559051E8D506C54217A14D122F59F408CDE4304CFAB1
3F6E71C76FF77ED320A4689BE5E242> |
2123 <001C60D8A8C9B5EE3102E39108DFEBACCB757B52BC7935C95458FEDB46
96605E08DEBCA1BC917C841B7E7CF5E512DC6EF24A9531E46328C4E864185069
1D0047A306679632291B2BC8CB8CBB6BDF4E4562B28686ACC3C910753FF07C1B
B95581818BD032A22B5777A092865D141C77E583AFAF8BE1ED6CD5CED61AFF4F
5CA0AC989FB6CEA7CC2481D14AB6A0D8D67EF4351C4CA674D539DA7874220F5F
357C1B1A66D881003FF602B3B8E9E5A6A495EFAC70E25569446099E0084BD04D
8A62974BDD34A5D41C1D7EFD06F838D58EF82B4C0EBCCBA4ADEB3BCDA45E0E97
1EDFB2F34F13D4DD53DB95997F695AA1D62061719EF25763108B60641F62D53A
BEFF8F46BDE208202DB29A2B73F9342B6C970095F191054EB4D257ADD2FB11FA
160D9CC090A9F7469620837AA6A81B16DA0ED26234AEBE4DFF8012C4BDC36CAD
E0B2567142D743686DEF38353B8CFDF98FAA5C87AA8FE6ADD81AEE25C4E55D60
26A3326A91E4BD6151ACCB515406287F685AECFCC45B333CB3BA7F2039EBE647
FA0F48C45708090849F6D7E34BCDABCCA431F13A685B71B1D899A85B5CE9F0EB
523ABB34B1B723EB945E6B7322ECC2D1482F02E2FE3A92CE3BC8E4E531234C03
784DF18FFAC72CD5325912C63AD91A14F42881ABCE4C545C8B4EEC8B89B03A0C
D9911F153353F3BDFF584716D12D345014A8183BE80A0658F8E9BF34CA228E1D
75FCB9239BF511A4C06C5E6BC0BD959F24289FC4C0BB4E762F26ADE3C2C491B7
8DD34DF7DED8FAF612C0B28DEB5A3DDF6C1AA32E1C0C45D6025C20097AD169EC
7DB29D8FCFAE4835C61604CA41286B4FDA96DEC54FEAE2F9CDE6D6B19780E02D
38C69B0E2F1699A63B95D0D647BC352DD7D011926D2BB1BF43935F77CDAEA340
6D87B772222E98385E78525F869F06128E81EA49F208EA8E967496CADC00294D
12065762B83F689AF8FC052DEFA8D59173B684590BF3AC4D848BAA0CBCF1FCF8
9448179A9C59A46215C869AAB5AF537915BA4DA805C4B0DA788EDE33E6377DB6
FFFE0E46> |
3055 <001C60D8A8C9B5EE31022231DB57E038A90E5E9E9A0BFE6DCEF05B0EEE
DFB7CEA01CD424A55EBDC127F9685B4F69561D3BF49330C7C6FA2589BAE55071
765322028A407ADDF4C8F18A55EA47BFEA22121213956059934B125CD1D70EB6
AE11CAA1CE3505BB990E6B87E078AA352B54CCCAA00F6E854179530D927A81C4
42B7D37A20154839EFC86369FBE5A145EE7AF14F303575CB3BD0B03E9AD67AAD
4933F4AE7886EF0F61D35483B320D3032B76D33568CF5E3F705BB9707CD6C2F4
51839E8DACAE3F00C358457CCD0A4631014C0241FB8D7A06E5E6FC6723A13348
509661AA5DC426EE5FD31E9AABFDAF639E02A9715061A0274746E864B30807D1
3C2FADAA30BF4635C98699BD12A9353298927AE0E8F70B978A4F59BD850D589A
6B0F7B95646EE98E713565EEDFD4790EBD4ECC388D95F3CA5E5F6FBFEF62BD8A
2B317158C6043D0DDE58F8F3EF448BEFF894FDEFBA53AB7DAC28062AF797B472
CBC733532D76EB0CBEF84575918A346E659849823EE7A13E9D851AFA3E64CE0B
45623CF184A1D0C94335C4C7239F7DF3FC1E30743B5D0E7A72FD4B49B3E7DE42
F483FA4C6B786AC062219A147F1413E0BADF8EBD8DD72DE5D910F7FC5487A685
2B7497DB295D2FC5> |
708 <001C60D8A8C9B5EE3102FF0596683C7990071E253F15D2004C9A6BA44FD
D18F97A396335B1033AB998135456C36B7617D6F3C5B510B1EE4CA2739B220CC
B79058ED3CF4E6265800A266C18B3DB6D1473B0F7C41E7EB6FAC606285D76765
0440EA1BB0EF89F17F86A9B33F3D6D108C2F03C174062CA3C639C3DD91774412
6AEF399093533212FB26BE285576C3DB925B6AF66E03AD86B30EB385FA46C65A
113BE37B5E5269386839B75163D3C2D8AFA48D3B44A057AEF46E5> |
4973 <001C60D8A8C9B5EE3102D3782DD550588D94537DF507286E4E2C7DC735
AB7523D5029717F3AD6D7CB751B13695D4C1F49817F30A634D822EC56AC60903
106BDD63BB93CFBF5409E7C0790A3E91898269DADC51CB1E0208D75E2875EF34
AAF8424AD138704A2CD5BDAABE42580FE10564508EA273809128AB4DE4F7044F
C3020147F69C33330B2022BA139D22E2E956666BF3534D7150706D865029A5C2
868726DAFA614E407D07842ABEDD5BC106F064D5DEB6B1E16C49A6707A4F3617
5FDABABB430E833E22366281F5458988EA65AE37CDE131C596DF12E5E2BA8E9C
E48C773BB2AE58ABD8638EF7F1C55E845A288102BDB998A95B5BCF9A5FA471BE
3CCE493C37230F04C16E1710777123B53E5AE993DD205C55B844A47A606DDE71
22EC12C389671D3437866E92FB00DF73878DBAA3C0D8832B55DE4FFC3C70295E
EB4DCF1DBA0A60222AB65AA06411183383744298CCE75903031490B65ACB3F05
B9E8A03688336CE3BB1A3B25A8E7CD6E2FC6DAA01EBBB50713373A37FCBEBEDD
364FB3644FE1E0E4715A8EE4B99A6D29A22A4A810F9062457535C3DA7AE1E8C6
F7A2AF76E88BBA4C7E9311B8E258861DBF1F7B0225AD0F87498A08CFA7B10253
C729A1D1B8442630B9B951BBFD0B0FB09BB57B662B8A706D2D34BB05DAD100F2
07B3FA55D44925485C94178DBD8791253F8839378E72100DC2860EF45F05C969
A1B24AD485E07E98224C2ED3C430C45CC6094512181E38C7DD6A8B9A49B96695
3B98BBD6A9731A255E41D76597E43AB7D900AF9A694813F809ECB132D1C871F6
62EF203962C71693F3CFAC025E707C7D30906786A93CD364C8F225DD45FD66F4
F382ABD0E95F966486345860F7681D4C137034> |
4687 <001C60D8A8C9B5EE3102A1C9D7C13255D2BF3AF42B2CBC6F7EC30F8715
A93C97BCBBC0F018CCDAA3DA09714FD67689255EBFCBB838A31D86AFBFEA1EB3
A86DD14058AB17001773712E219CCE1BAB2A994042D86CF3216573223ABBE253
743227BFBECA64D6B0BD001BE7C301B818C858A8C8D5B1717E58B4427C78B716
F9A0B445DAD1185CF7EB411564AABA22806D3A6FBBDCFFE3FE7207ECE9026AF2
AC4223F7AFE3B1A50546629F7435AA238858DE3038786B11AAB0F80E0B63A724
927207273EC5A6C058A692C634D76A9B1FBF242246BCDD755D6FDF938E68BE83
413BE127B0B101150218FFA9ACF23F9C3B9A22A7E5A9A73E1F106C079BD1DBE3
043D022C1C750ECBA068CA1CCA434BB066117D1B5D454AC8D5B68D7D79E716A4
56202C776EB1A2ACE033A26A9573FE7DDD28DD67DA100BE984F7283BC1A440BE
47A61F728259458940B28E17E3CB6FDBF91DA3261060712656C0374ECA812223
272DFFC6AFCF1EE4A7A138740233B168705398AB72104E2DA7A6E3CEB3C7C8E3
6C3168B3F1F59D5236D0FEA98FFD196499C1> |
6870 <001C60D8A8C9B5EE310DCA1BE135F5AADB68D15D792F2318AE8CD45713
88B1A4821C92B26CA37DBD7F297452616A34ADEEDB54920EB9F8DE7228F8BC85
A0FDB8D867178A158844937823C94863D57AA81D5AF48383B0927620D99F269E
DAD8E46092782C28B53EBAC7D8B7271E6E78A46DC3C468A54F50924DEA1FCACE
587A85179CB38FA21AF960E089AF7BDECDD66820785AB60C7BEBE2D47A5EF917
C5479E791F8DFFF4DE104120A3B705875A377375207B867CB71CC594367A85E9
91206FC53708C5AD1FECAAF6386E1C1B241D9BEF28FFCCD99C1D8D1C2FFA9AB7
4C645D0D25DD70554D459A033E2687CF9C6A4A3E5C7FF03534DF7A8B0398689D
6FEF7BA1923916C27D0F7B8138B6E229394E677E04DD33168AD33BC87183F547
3C19C78CA8B651B3D538D0468F0E953131AF4C1F4028659F9B1C6712A2AA10D8
ACF5A9A028C75FBA900FF3C21F1E726858F0053804A86AFB454D768F9BCE8D5B
EFD1F323FEFEF8359A12C20163D64F5173345065A7C69296F5692B927DECD50F
45303D76703D32707D08E33BC8C2382A25AF234E01D3133914D22F21EBC255A5
9D001CD102> |
735 <001C60D8A8C9B5EE31027CA37395FEF10FB70EDB850C947968D79239640
0057AB50E9476DA89C38F6FF95F2769FFE07DE9E631CCD74EBF54CB8C9DA66EC
5BA31CAE1F7A23C9854CA9FF2731DFBE39142782550B519D7E3BF9A8482C4783
3716B3039FBCD6CB77C96AC4D23B16CC7582459BA3506CCBB14A5975A00A3C16
A6F0E7E484447FD428AEF01A09E41B5CAACB0C1AFD92A196A09FF663C9157694
6BE382A3EE60C98056FC0AE7A2E7B720B6C13A100B25FD98D12B02F409BE1E16
EE2164DBC99E245D927056856DF08EA60C042B7AE6F8D2F24CD89CC38930408A
F7F1ED73F95A351A46A2D262042F0FFA3BB810B8F5480CD34CF8B> |
4370 <001C60D8A8C9B5EE3102DFD7EDA26A25538EBF72E3294311EE191B2785
61BFBAFD22DEE4BB66B3907037D3804CA5548E23142FE400AEDE5D0D9D88A11B
FDB22C889E5A016841955352D070327E58F0FFEB0AA8D17F4A18DFAEE9E64B8E
60AE1F608352B7C1E4D0AF295DB17AA82C83BE098E34B8AB35B3F72D79CC3B2A
B347DEAEA235FB929F18525CB31BA950536256E62A67CAF731E9B585F2D2B5C9
88078B3C4A0ECCFC1ED97E1B85DC06EE68D8EEA8662C33C976E13D956FD3B83F
F1B081E27FCCDCE086BA2F4402C0DB456EF4204E9680B08E4B40BEB9E2286E51
93CA1775C6339F1A7A58013121E7455F44FE8AFB01D06F1E63CB831603005DF8
0C1EC337FC411E610AD49337A5AD4EC4B4905268D5B053D27E5D77A05989BA9C
3A10FE0DCFF719349CE300EA3709D4E3C20B8C7A83AEB24E0A7F97174B8BFB6A
382CD464380A5B1E79F1459F322F143E6824B653DE544AD5B7617F22D693A1F2
CFFED0925FB736CB59F19293CA98C59E3E312CA931D2930B66FE490E28BD5B7C
DEB5DA72EE52A2A0D2DB7C430392D9E164FE87A6311212879E89D41F739CB947
1F71C4C65F1A536375DA08A793FF1FB271E23F63F8C436DD2563E6B6E297E18B
C071F0DF82ED2E46B85EF5C32ADECB11B26A32F1E80F5783955D4FABA2ECF67C
4B848861951D48A3EAFE8B46AFC61F7F2C2F3D64D81566B58FF20F4A828E156B
B1> |
1698 <001C60D8A8C9B5EE31027CA3267C459022A3706A195FC0E003C3D76466
878FCC3B7C1482ACE1FEAF913782E0EBFC3F09ADF7B248354261B511AC120765
61C6581B61698593107EBDD17853B087BB80C93E49B350DDFCA58A9228D7F708
90A1D4E6B59FDE731F6F14D3529C7736AC27DDBFAE45C10761DCD1A7DE5528D7
3BE8DA96CF83593C3057327DD4A14E46AFEE1422425C9EC822DF131C52F6FFA1
A32607A551CED9232CFF8C072427FBE88B83E9EAE54156FBBA93205592ED00CB
0F180CEE76897FC979F5894779FBE3C3FBD3E09B45C887A96D094A1728B0095F
555A71B4376D3FA4F33A5D39E4946D0FC812F77E2CF37371CF7949C7F173DF21
412C551385ABFC831DA7971DDAB892D7D2C2C6E75EB0ECF5C38C05B11405068A
CB0D40AF8F27E1A8BD856C3CA68D196F5EF09592C067D22F36AF97406F8B584C
675B532AB4BEE1DF04B4F095BFB2EC367AD528D600F59AFD9080221056D2D1C8
460BF55D805155FC4CA12E8F6DC95FBBF858AA346FE0C9188F502431C2619903
51F0750DBCE38D93035D06A00B50EFFFE39723> |
3110 <001C60D8A8C9B5EE3102869375C04D5F7E88A921E5F984C032913D80F8
10CBEDF6A47DAB015FA42DBDD7CDED4EC2B7A46B8280686E74F2DCFE2F82217C
4E635E4CC2C37ED77112CD1DC15378B25243ED601B1677C177DC2E8758EBCB20
3BEEEFAB04F543BA6631DEC3FCF3BAAFFEB07656C44652C4BE46E581B49BB6B8
27D1A2BA2D28C3EE9EC1859C7A943ACD1A9BBC6985FFCD044D9ACE0E6B5D7BEF
A801019A866AA54988CC842EC9581AACFC3CEEBDB8BD0CC53040C91AD65276E7
712F8900E0399E7FE10C21C86BE0E08F8FE9FE69E9058DB88AB40A35AE4DB29F
10DBF6810325926978692C37DFDF7FF3309676C2E867A5B1CD88596C1FF27286
A0F17DB67BB8A535A82C880549DFC801DE1E7A4752519F4F4B8A64E1E159B159
F98B14212E84AF613D6514DA8F3863E0D1F287FA37A688A746A169BE93B012F1
FEBA91C4C70FCA5AA1A322FCB7725F5FE4898330F1F4E3E914CF6E9A93CC7A3B
2D588FB5330E7821D5C66D66AA0657FB5AE3B9A329D747DF6E8F29C05AA4E684
CBEA2342A918D0F3F31C1F9BAC1722BD4E6C20F860BCF6FC1F0562F5D38C11D3
F4957CF0BEB71CF17C23AC83F06518427C6432B935445F0B56F5BB7E12C23A7A
EF3394547CDFEF7B8CEC6B98B8018172E74F45D4CD1D3F3B9C3E2A1064518999
E4589ED32061> |
7228 <001C60D8A8C9B5EE31020F8C6207422749D55FC6C5634DD9E9E0539950
94006B51037A2E5425F77FCE6230D1CA520203229D284A3A4479F0A6C1C32CDE
5D94EA5038CA3333798D30CCD8E0A7284EE44DC32D95475379635484DB9B34E9
C06DCDCF6621FE4B2C3D9B778F7AED3E4351E53C02532EAE851C4FAFEF06450E
F3A23A419D142A7C5D9C927CF097A7B9A863DFEF9BAD9FB70399B8E73FE34BC1
7C864197FAE601DF0115D0D72A6D7733791BB988E9A9C5427CBA47A09C9C9710
246D2176391F3FA1EEF3A8FBDE2B39A37257F1A6EACA543DC39D867B4E5C2A4C
D9E417B8BC46EB0543A272669491F499A8876DFAB32E86E4E4C07CBF1386201B
B137EBD021ACA2E9F7FD81FDEA01AE7CB0371543B856BBB322FB1E61906E8E81
27503AB0724EE9BB3F90A8657AF0712D07CE1683D568BE9B95257D059D92939E
7607FC712BDE86F8CF76479393F28E36D8E8E4E98C432BEE554C4208446363D2
DA5D43E6031DAED5E88BC1B6D77483A6EF7271A669FE706454369CFF8ACDB3D8
50BB9E4E983F79C245ECD9B6753003086360D37EFAFF43904DFA20D6C49D3E2D
E1A947A083AB7C965EAA5EE9ED811CFD73FCC7AFA57C6699D919C1FB618F8539
718B42ABF9523E150FDAD95F61910B50A4D6CAC47F55A3ECB438E3AE7D3C8883
D40A518EE872DD46BA969A39DFE1FF18207F7E02CB80A344D09A61D706F6BBAF
E228B229C38DB80384BA2FDDF6B83F7D74A8012B94C9692B591E3E7B76C427B3
2D9207FC6D70310265391B6C5327E5C33556E24DB7DA15EF51F2F3247E494D3B
853A15FDAB3A1B1EB4B270E056EF25DF96123E817DFD66517B057CFA064B0860
D7ABB594A60459FF> |
2838 <001C60D8A8C9B5EE310D9D6198C54A843F861B9FAFB26A5643ADAAED4F
AD5C09F58791876A56A9BB005FAB67B7C5631E7FA4BE2985C88EAD9F5F34E3A8
01FF8126205DD5FC6233345239385CD00E62EFC2807E0AF3CAE3D8D21EB5B84C
AF1E514F75013F753E3013BE3F0043B31FFB86F118F81144E4595BCAE0AD9347
0A8D70B176027A7A885893D880F8C54AA90B7E0E836B27C0FE3B81977D5FBDBD
F33D58D29286FA201E36BEADE56B49799D9A2AD4983DD5410EDF3603B7259DA6
4E0DB4D4862130930F59521F01002ED99DDA4ED4334AB4D943145CD08265BE8E
A8FD26AF09BC7CA6990EECC4CE3E9B74D72EFC5EDED117193CDBAFC8C0BEAFB0
65736709A12822456CFDCF7F0AA837C4050C596DF2CF7753A1F1973BFD26E38B
BD289494F6B8DFC1A91433C710D63B4AD5DE765BD12EF9B3542D0A7C604FF945
55F845A78B11DD94AA741EAEC60CFF4AA838E3C329DA5ED255163F10396B8B84
B1D4E3EE609889294B538F1E76373E6D56DD44D40DF71C68F3496A41B8A8ACAB
5AA39384C8669706888EEF2C20BC6E7A64B958D1C0C897FD500A180F7DC2C72E
2701A7256BD6B15AE72F84CDD56BBAF6C6F7C4145C8EB503FA05294B25748AEB
07FAE25BC6A228D729BF5FB1E99AD4CE8E1D0AE073B26C4ACD960487EF51024F
679D716910C3B01D4D842A50E34B5F41A07A1C373984EF2D08289E9D530B398C
9B2A4853579A926C97B23E5C5B63BB61465BF844DE3D04D4D84C1C05F7F9BF48
3D52673EB75548663EDB0C5BD83777CD3F95E950D8C1881AE92F0ED4884F8855
0E0D1F9437F2081AC6D722D63BF514E4537AF5ADE857EDF3A896B924064D293E
CC6156B5A592C06C27E3614C498E8FFA1B9CA863D85E0A336E904A617B46261A
8A06FBDF4DA88000E2A161239BF123F25231296E7ADE53469A2FA4BEE77DF8D6
E01B905497643BB94C89A6F6BDFB2835A009007664BC983F2A691E13CFD5A6E2
D448C88596BDF2F403AA239A497CCB21B671E0767BE733275509BF094EA12D39
767EAA2F> |
2305 <001C60D8A8C9B5EE310282C91428AF473105028E9A593202CF9A087F8F
EBCE1E5D0FF35A549DCDDC50BA63C4CB1B89914D8B7B285DA2C89D9E1DF19BB2
B15CDE836EABDB71B553A96FF87292D4B9081841AAA9C920243F47216B88690D
13A9331642F269A1722AA5A1DF5B07BBE1350A6C4C75D99CABA9552943E8963B
36E178EBF65E56808A6B9AD46A53BF158B8761A0CB4A0F76467E3D8639A52A0D> |
780 <001C60D8A8C9B5EE310DEB86BCB254C691F500B6E671A094882B42746C9
D8B860858201C055785C7275AEE1EA86BE72F71BC85A328A55ED6A7142B9311C
ABA36CDBB0E016529BA2994857A35AF78F0DD4B5898C5970284D036699EA243B
018DAE325A6C63A3F5C55CE47EB5C425CA75F3C996509C04D> |
1101 <001C60D8A8C9B5EE3102400166019F3DDD7A2438B1685C7AB62C2E7A2F
3DF19552468AF65BC22EEDF4275E7588EA26E37D8D623C5B3705F73EE473AB5E
8494A0640601DCA67FEDB635DFE615D7A69324AD3560C2A54E9FEA1A07CF3F51
665ABACD00DD0BBB3092C836CBD358A2EBB9D5A99EA9C6DB03978298BB610533
DA774703D5D921BF53E4AE4BC1350231FBF44F5074D9C34790D71240C5E8365C
77A4AF2CC80C5701644040F86992D3AC012A7589BA4943D11DB3325A00C32F06
A06F4C5EF063D5F0E0E9BAE4647869852C92C219A72F189D0D215DD265E6D4FE
E6D9767146DF40889793242A7AA40E962098BD71982F8044F391D5C9DAC71346
85B5CAA849B367ED1AB6A369AF94DE8277E33929711C8DD66707B1DC2AC95B6A
B0989258CAB655E52BAA8F02BF7D8479C2BA724D5E05ED573A347B8AD655B1EC
E7F4BA6FC831CE7ECCEE288551C706672DAEEA2C09976F5796BBF67183C90506
4423F230D1219FA43BCF42FD7C4ED31E6B505B9A23C889303D995754ACF082DE
D52FA3991BACC68CF513CF4C6ED7A43094E6C3959FF583F5E834212C749C903B
9CFBD5CA> |
4766 <001C60D8A8C9B5EE3102F643B5AA7B72AEB0AB0332C263EE98D76AA492
FE47F36AD12BB085A4AE76FC9CF13F9050850CFF709FEAC77F0D57C2B3B1D7D9
23B485D6A6F25489B5B1FAD90B6B2A833C762585BDD55A8E0D25081927DFE8AB
7A0BF4AA39ECE20E041C2EF23E3E32D56E85D0C2AD62019D12262AB23B3E58CD
3186AD82624F8C88969CC051C87CAF180292ED2F549A082B3016CB4DC8634608
818538785B9D2E74A97415D7AE046EFE73714A562F023F8A7B150E556E42A420
9E85894C039CD6EA6B3F5FDD4FA1972EBCFFCFE3ECC994EE1B928FC630DAF40C
EF2EED911C383E6311E4A3B937C14F2C08442A48C3CF2A2A9D0197D6C92A8A73
3ACB7299581401E1BD7156D1E412258C072DC0EA1405F6BD94B38F1A2A1144C1
223A9ACCC8B7B8CD068DB401B0FE1F6E10DCD21CE6D33E31BEC756BA59E034FE
2DC284A30D4916537E1F0A1F382D33316FBD1CDB0FFAC572FF4B74D230A1C8EA
E521B71EC09AD2CF5A6DDF99A3DA7A8FD536A7A6509870D2B6F2827620586342
CF3DD11FEAA1E5768C43EDCF0943245E0CDD5DB935F4A65F778B7A6552CC6171
AF4EF0273824947011B9269DEFBFB49FB7C75277926903485C8B5D020807B446
7BE3E798C054FAF512529AFDE37FBD0D314E9E8A524E5B8EC2DE79CFB09D4DA2
419F297454DC1A91EB05A8396CCCA95FE5C46AFDDD2B20683DD0AD1D9E3265BC
2A132A23BF3B019455C28AB9D0DA075705A9E11ECE7C3FB73FC5AD108A42F43B
528765B8051DCF043736609C011AEADE570340C06541F27CFC8C458B87AC7788
EB8640DA3B731C1CF27C6FCFD9A9F84614F018119E1963AA188B16E0E85C5B38
FA0911FBC80FE0211B8767630110467C78AAB7051D730232809E7749C3B7F8A8
5B4D4287A1> |
6400 <001C60D8A8C9B5EE310282C94E17E05ADC180F22FB1560771257871B98
B24B8FF3F1E0664614BC37E800609D813FA1914D9CA0D48BBA9F08E1C5AADA27
45EC36DF8B93E379743E21EAFBB8FC727956EF0ED1464F713C77D600B6229271
25F5048DA629677A82277C2D964761926926895D229A38CA2AB3C50BE58F5C30
A8DE653DEB7C5EC08027AFA1BD009BDBD0E6FCD2F33A6B5DCFB8BB3143DD22BA
658A4C95CFC187EE6D00B9AC7B4B340F01D367FBC18988C5B61603F36C8FB803
89982BB6B9684F70325C2FBAD64C10F9DA87F9F670ABF219751092F0FB11BC55
0821B33D9F9F36B3829D74FE4472402CCB9BC7B04FD8F4FD4523DD92E33F396D
8EEBB180082A88951C3098987894A931330DF84E1D3088052B9EC51335FDF174
DF17B27C896BBEC040560E7F4CD8392E39A82ED7F5C8D9FF6C17A852CD44E19E
C1AF436E2BF76E1A0F070E1952E0CB0E5BA493166B229D90353CD990128A7B41
ABDEF264989ACAFD8CC8776D68CDAA5397B98BCFA6CBC8E0B5F02E2FD5B3A330
4D5F9CF0E6CF96455486FFF4F2418E459E18477BFAA30CCCBDA2707C6A8F46ED
521BE3312D598B42DC215592034D91ED66EC064369B7491A69074A1BD85EC911
88152F94F7BB0F8FA3F4AAB9151F4C54F13717977C9F7F543BFA7585C41321AE
AC2B5A0A009707FA0982F5D829BA> |
4245 <001C60D8A8C9B5EE310DAD86D2A452BE28BE96924EB49698C18DA5FAB4
5C4F7E9E02CC7118FF466068430A9B02C923BBD814093BFDEF2F763D349156B6
6159BD914BD1B7A99EA34FEC4C93E0F161DBA6A1C22F16ED51BD877FF60655CD
0C46D2DF48954373DB7E7C92AF86886A12B6774B22F3B5D999E65308172C19B4
9E4C364122A2E241FA7EAC867ECB5A48753CC62AC92BB0790ACEA13FB72CAB51
C5565065758F80376C33343376321ABDAA154D78B508E5D7CD8B84E8BA89C573
BB9A544FD234CB984526636F26CABF93C2DF742A3E8D49C4E3F0C42E3720B0A3
F5368FCC0DAF3C53DC516345C0115FD3DF908AEE9071E849497A5568453E3EB6
5A6C2FE349C2C1D10D64BC51744DFFF392CE219A1F112F0019CCACC69DD957DE
43F9AE3DAD52DB564BDA7384860CBD5F8D5D3514C2F34AE5EDA65935F7F53C3F
345F3C107D282A9CD4DCAAD3B2BC24A077EB1F507D859E79A0649B6A5CA6B201
18B549D0D33EFD6E3CF45FC1F22DE6DCE767BF2572A89837F866E2C66CEC53C5
92CE3D29187C23C922B0999DB0EB09E78360C8DEB3D6BF82839F5126A9F74A38
9348E786C71808F1A52E5F49BEDE1219A4AE5B5C427DB7E61CDDAD76ED10B0B2
C09C7B3D432DC572BFDD03119E871E7D3D28522AA1896CEA91A2D6132C0ABA4D
CBE07E2A22D02022B1F41CC977E7F4BDF11DD821FD9746379BEE0AEEA4EC31C8
B6B761A4001AF9AAEFBC3F88A090FF36B66BB6059A0E5AB260FF4CD57799A148
D7893DCF64009F123EC4D8FF85021BD79B2AC4F5788019E6CFFDBB6D851B944B
DEBC573EC8AC671A3A1D> |
742 <001C60D8A8C9B5EE310296A83C404F8401449319163DFD2E0EADDF4A6FC
EEE6D736349C6E5511809DFFB495E6F1E3BDBCC19D322FD2E4CF94931D929033
FB57748F22A063B6F2C359A9E20E965E08F7EED3B8D210F11FB5446B3B7D714A
238A960B02FBA8753CFF58F4280FBA23ED4FBF2F3A2A76D65FA7B344BE7DF75F
5614AF0BE69454E3EB740A6D94DBE4BAD6B1A5C08698D80EDA62B1D654267B6A
FE99312E1F8578312AA1E58085E389A49ECEC2E4D390B95217A136C37D10C846
1E2BB11B64253DF0498C0F8112F54E0ADC7554A530FF3515CD6C8F89BDCCF893
DFC4BF3203FF686F6DC01ECED17E00E109097B003E8D32E2A5628EC106D2DE9E
A3274B42856E469BE18278109151FE06636027749FE391BD80CC9CC6C6147B0E
CBF334F281D68AB5B88C5133F6A52F223655AC0C209975898C0830CE20972AD7
C03C8> |
703 <001C60D8A8C9B5EE3103898812816301BE167A90ED4A16876A5427D3C3B
76383B28DD09564128306F3CBBAE9297DF467DD4518124D2245A8D7A7B0B0E45
FD20DD5DBD5B08C5801830439CB79950726F8B637> |
732 <001C60D8A8C9B5EE310273E1E2514286C41F3313158A29F5F6ED1978180
744DFA97C850E49FC7CABA7274D39DD12B1B7017F563C66976B1A81FEC3E5E79
2CF807DAF29FF67418D22360A4DD048C52529C0C24622BEDE963512BC3C7FE91
7FF70E1ED9641C799E65EAE46167F976625C6DA995378F3CBB756EF2FC3E92A9
7B5806F6B063F893964F1B8DD26D23E3CA3DBB3CC66895B6297956D8C36B8EFE
94045E221B6A8CF6FAED0D4E6F76EDAF9F104FC0EA2BCBAC6AC3CF9360102D6E
10E94B9AB17E2CE45CE0F16A47D> |
4408 <001C60D8A8C9B5EE310240018506580DDD535438A800D24560EAF64D48
108D324D2EEA2C2B423E2A7393FEF82BBFF7401C4C6FF65DAA68C46B0028E601
6DE07A68C4BA0DD11B1AA599877CCF5D3E7EFDB1F9A3971C6B5BBE17024ECBCE
117D48393AB34A4BD27E58FADB65A5BF93D9399717D5B4A393E746E116E92CD7
978070642C831A091957D9CF2FD0FA744AA4B3DAA74FA25C2122E5DFA6D66560
2E80FBA70BDF17C58017079EE6BC5F42B2B15EA7B38C9FF9EE60EB4CFC69BB48
DF31F3ED340E3D2B513F1B10F2DE9EFED64E101F853320768B445B47CEFDE9A3
125BEFDEFFDAE4B7E034261C78F30E7AF0C634990803F0B1B2E4610F820F6501
E7397CB8E3ED07280FDFC1E96101463BF70C8C440FDB1CCBA41F2F01FB919044
4208E37890F16D82A963E8A824DB08E41FA38476426C6C6875DEFAA336958E68
1694BE1AA0DF559D668FF5F4D6302E2BFADA4B64ED46266CB5B60BE4A0216894
BE5D252B006393AE04B8CE0FB281151EC92192AB69B0EDBD9446C12085004887
F5BE1B41168F77888149072594E671F989E6E061EDF406781C2659D3E8CD90C7
3A1149B014DF8391F911DFD1BD2F7D1A7486F88D3FC1048490A0B1534884B0A0
2F2281752A747EEB3EAB5846610198> |
4923 <001C60D8A8C9B5EE310245F98D5E7340D1A122D174A98B0CBE12F96FDE
DC427C174265343C071DD380DE9F7735F81AEA1C4BD8ECD2B13FDBF3EB75C6CF
602B62F1E8BC77A42487FCDBC37D9082780F7D40F41B12F58AC6F4DBEBF025B9
30AAA9B57317DF373EAAA173F0364631CF92B61D7C40860A0BEB152BAECE6B17
7094EC5FA3CA2B1117498D4E931CDD76D56EA75D59D8CDE14F91027254258A46
7DB77785EC2DD800DCC6C801F6361B9EE2168DB2D3F83ED83151DAB59C7DBC5C
EA34416D30BB038B28267CCB751FA8191C8A168701198AC61731E517F5F33414
AD5111D1F84B69CDC4FB6C9A50E6BC3DE1A585D2500C1D2C0B4445359E2A82A7
E6827C5987A06C3A9586678C915C5AA12D91EA55B1BB258EDC37FAC5162BF095
D45181A1F8138DFE6934F2C8BF85F6D4A86D2CA3E4BA1C4DCA8DDEF499B8602D
53CA247EFCD08DF2781CE56379EA1DBD554A4680D2006353E77E08A1D00E5E41
F50D17F3FA4B294C35BA10EB0E3CABE2E45F1B56DCD591770A89C325DCD6A55B
1DAE15CF7B767B23554782CE754C10B014E29209C206B9C6E681E67FCFB7BF69
75D0C62D005118AE1CF6B1530F2595E2F8DE1F193914728F7CFC77EDEAB8927F
748C53204996D1D70CEEF7415216920972A27653DFA962B8BF5D8329507136B5
EDDE8612B4320734D2DDA71528D6A319A91B5C3002D40F98474E7155345BBDDE
FC25497D28CEC2937BF5EB0D83788589D6F127C15A0094969C28A196BA10173A
A7CFE227A18A2F5D49AF49C8457F5FAA6E40209289E26A301F40B3> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
268.013 377.34 mo
(\030\\\010\371\033o\010K\013\357\002\304\023m\022O\032\326)
[8.60458 8.60455 8.6123 8.60458 8.61227 8.60458 8.6123 8.60455 0 ]xsh
268.013 389.644 mo
(\002\337\021\022\010\371\033o\006\242\014&\034<\023m\022O)
[8.60458 8.60455 8.6123 8.60458 8.61227 8.60458 8.6123 8.60455 0 ]xsh
268.013 401.947 mo
(\032\326\021\022\013\026\011\001)
[8.06781 8.06781 8.06778 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
299.888 401.947 mo
(\037T)sh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
4284 <001C60D8A8C9B6AD61404F84D3B67BDC694536E7C521CA26B3F7645401
F24A> |
4274 <001C60D8A8C9B7BEB13D3AD119696FB355784086E9BA2D3D596EF297CB
3AA1F087A53704C83FFECA0D0B4A9054B0EEBBFE2B8B866FBDD3F85DC0CAD47F
B655D8B269FEBE5B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
304.585 401.947 mo
(\021.)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
312.674 401.947 mo
(\023m\022O\032\326\002\337)
[8.06781 8.06781 8.06778 0 ]xsh
268.013 414.251 mo
(\021\022\030\\\010\371\033o\013\357)
[8.98804 8.99579 8.98804 8.99576 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
313.137 414.251 mo
(\021.\020\274\020\262)
[9.21335 8.9823 0 ]xsh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
336.88 414.251 mo
(\023m)sh
268.013 426.555 mo
(\021\022)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
275.682 426.555 mo
(\037T)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
281.611 426.555 mo
(\006\242\003\014\023m\022O\032\326\002\337)
[8.33624 8.33624 8.33624 8.33627 8.34384 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
330.97 426.555 mo
(\037R)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
336.88 426.555 mo
(\004M)sh
268.013 438.859 mo
(\022\236\031\000\020\225\002\346\002\277\002\334\0218\023;)
[8.02182 8.02942 8.02942 8.02942 8.02942 8.02942 8.02942 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
331.882 438.859 mo
(\037a)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
336.88 438.859 mo
(\006\242)sh
268.013 451.163 mo
(\002\304\023m\022O\032\326\002\337)
[8.02942 8.03714 8.02942 8.03714 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
307.815 451.163 mo
(\037R)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
312.78 451.163 mo
(\004M\022\236\031\000\020\225)
[8.02942 8.02942 8.03714 0 ]xsh
268.013 463.467 mo
(\002\346\002\277\002\334\010\371\033o)
[8.02182 8.02942 8.02942 8.02942 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
307.796 463.467 mo
(\037a)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
312.794 463.467 mo
(\006\242\034<\023m\022O)
[8.02182 8.02942 8.02942 0 ]xsh
268.013 475.771 mo
(\032\326\002\337)
[8.02942 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
283.715 475.771 mo
(\037R)sh
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
288.68 475.771 mo
(\004M\022\236\031\000\020\225\002\346\002\277\002\334)
[8.02942 8.02942 8.03714 8.02942 8.03714 8.03717 0 ]xsh
268.013 488.075 mo
(\030\\\010\371\033o)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
291.02 488.075 mo
(\037T)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 14 GetGlyphDirectory
15902 <0C1C60D8A8C9B5EE3176841403DFE7B1A9CD5432529E54E6BE93F2790
11F3E6A844E8C1591BD5357422B42F4BC61FE4EAE3520204AC85194E8BD14591
65D562EE556CEB99A8D455590FCF6A636146DAE0F3DEF41C110EED9D245D066D
7A3A131E4F1E522C7B88526A20D206C7926D242953698513D8D9F06866B685F8
CD92831AFC818B801443BD17D00D86388938924E409CA2E83E15674DECA4D40C
1C548057B80871307258C03D2AB18C58235E33B8FDC554D93189DA9D72009E30
5BE5CA3A5BD5746D474D7D34C22E488D5528E26CFCD44474B8A07BD4874C5B00
8E601EF4486640383C72631D42FFE2DAB34DA27CB358370ECC5945F3478A35C0
9F6F788D329686F8430A266092BEBAB08FDEEE162332656FEF8148C2824E4B70
474D94FA8F8815A3BA7A39532F5292F0B76E87DB6552D1303D43B84D0515F4BC
5BBAF25743502C8721ECC804D43991B2EE18AFBEE1A1D5E05601A28C485053F1
639C657DE9C68D74DC35474A25ACE5BD79077135EC310A23135E988FABC2C851
A7DAF88BD9A841BA4E65959F9A972C9FEDB5570B0F6DD1036BE844FF0908F570
D69BC60B1510C3CB1390BC2913AF43412919E0B9593A9839CA573FDC8665D12> |
11174 <0C1C60D8A8C9B5EE31713EB608AC02A70199833AE412C35954395528C
018905087CA0390BD006ADECD03257F9837D235C8B426C11A747AFB532132FD1
5054D92119CDE909D7093AC63A50E598033BBEAAE3B299C54B29304424BC1675
4760FA8482A908C7572B53EBA6F758083A2873CC7C2C15862FAC4387727DE03C
EDE40260082EDD9234EED067C2107107A273C16050C8C9D00CB5F0A917B0BDA8
87A3FC2B975C0ED8416C33210EDAFE8F5E924B78CA47C009D5A4B68F3282EE87
F4EF61E3AFB3C8856E6D5BADAE95667F277C224A0470800EDAC66974C9523B92
B803549B5FA5462DBEBDD64E7B1EAD278BFD8FB7458186BFFA13FD1B3849D3D9
C9470506F0DF862E80DBAC42D26311ACC6DF35F398244615A85C2BF92D5ACAC1
74F3B2D6E4ADAA8EB6C6A3F355DB723538748BD8275D0158B15C0E33A6B66D1E
A074E3B406DB451D3E9B67443E9507D85AE21446EC3CFB655D1B79F0748E6114
E7F6B72BC013FD752092C795D3375A63E61A54991802F4ACC491156FCDF04567
3F353F594678B9452022378C09FE6E839189216F824E263B7A0FCD308E982D74
822FCF126BAA6B7622086090E594BF5EDD3A2BC58> |
13588 <0C1C60D8A8C9B5EE31764DC7B78DA5B753A73E019F73646B986D96E7B
12263531489AAFA40957877F3FCF4C73D9A8A250E81BBC6A3E6C6B2334C496DD
140250159372F3DF1635E45833C38F539C04EAF9B15938029CD72085B7A3DF47
1BF0808DDCFF79AA61741A0AA2FE89CE9BBC22DC455A57856B352B8DF63ED0A1
698AEAFC1049B7CC35EAC82F897C2170965DFB0E9181493F7306A020F3379126
C702FBD73DE7636826645BD13901EA134C1D108D9BA594F33659598EEF8B25CE
39BD8E5A4ED2398ECB13BD679BB64F65ABD28E40D50124E6C53DD95132F2A0F1
BDEE08631893728C71876A1FE5554C0C240082CB8C1BC0B3D3B5381C0C28C82F
02D3C4A68497F72F7E97E675CA4C1D43F3E83B509FFC365D74D6645513289052
F0B0A3A3AA39039E651D3B536B4260CA265DB2F1EF7197558F06FDE192383751
A8AA7B14A6AEDF34665E47CB9098D5AF72DF96833D5F213763CE96356B4D7CB7
B722911DE2D8AF292D7983195BBD0A299F93055DCB557C02A29F32D8A1EC8CE8
D8A798CC9E15F2D38E4E538EAA3B7C4C7F67C09A22186C774300F5C92D9F82E0
45BF7EDF3921AC54B5C9EA9E4DC3FF308C164F961BE33BB7EAD19BC78AF63751
3B10AE75C95DE903035D3151D4A210F9864A883EA103A42DB05EBC6875426146
90CDF2A25E1FD4ADAE0FBD0C7C7203057A8C651102BDEAAA219113FA0418BC52
11F1630A0BDBD3BAFA695477E86EE6FD20B8F3AA5CD739134ACA2D438A1B13A7
7B5C253> |
23315 <0C1C60D8A8C9B5EE3176854748A548EE3410F4412F12DFF66E8F5FB78
982DEB06A487714E95BFB1963DA033BE5EDD0D3095C5B52E84BF3BB558E14C08
BF9C4C309D5BD28A736A01157D2EA0278D999893C3B3F7A21695D54FB9B43AA1
71E504A6017FE04D32E5CB2B46BCA8C03238318B7507ABDEF83A28ACCD10C806
3BFCE8BE5FD8BF4A01B744F334BA6D6F48D9E19017DF619493791BEC992DC8F0
D246CD15AF09FB10650953FB930A9CEDB858243DCD9F24C5B273A92B0B658C9C
659DE92E7195190A8EDB047D3C7592488CE2307B3C6B88F34F85EA6A676938E3
750A6A42E391E5823225221F24A53A48A75A5E920740013DCA2D842B27E907FD
422E441C3852FDE49706FE0AE863492A14989A73DF1BAB4D28DC492B837C4130
D639CD635081BA6CB08CF6C12C26602A6444E928E28E24E06B26B5422C712EC3
377E1BD10DE9245CF8E19D2D78B25E8960772B98BD2CAC758BB5F55913DC8123
FA1CFB20FEFB98D9B5931407FDA6671825AE8D24BC6FC2F046C20945FEA09530
FD26A01DCCEC4E6DCC2C95C1075A87CB32FF23D6DDFADE7B15F09E866D8A758D
502590B6C042F> |
15881 <0C1C60D8A8C9B5EE3176FA38D08AEB8E883EC17D58104586E839AFE52
24B67B3778A3382D1BBCE7E72702C77970FE09449CBB7064BC79A8A49963950B
97F0D592F36E03FA5536A1E4F3B1F41BA231DFFB6FF45AD8D8BEAF2AEFFFB56C
4C177A7F3C45C2A1BF869A5FE40768FAC84A1850B1A5B495DB61DD7151E24106
25297A0BEAC657174DA0547590248FABFA4D7C5F8D8BB5DF0616F512740507D7
07C0C84F8A4E5287D59D2FD615EFB92AEC8467FA9EDEB235C4DD934F7B6CBBD2
4D74D8EBD97257CC67E27E3536723AB26552332E9E2119AF1748F136D2055588
7CF45337119A8617D2136E7AD545D0B6918C26E968A05B8147BDD29C3521B49E
749C0717DEDF2266441C37377031D5D8455E54AB8905181F4A97A94CCCE34CF4
F91400BB5E531C62F63A0> |
17230 <0C1C60D8A8C9B5EE3176CD0B4293863B0D21D3515620EA9F12CAE8A4D
DAFF4412F041A2A60869B630DC779BBC7A7CEDF97B0B29D5EAA5A405EE02FFC4
E0E7221A93969280698B2C4460ED3CE7A3D92938B0FFFF5055D794999EC0186C
68B1CB3400A99DAB28B5D17AFFA3D3A1EDA77DC0CBFCC146CD4E5B79A7C0F8A0
1F5A82454089449F638C69DCF110AB488413993EF3A3BF02C56125C44420C02D
C8E32D2303A8CAAB1F95E5BEAFB8D04C920B7A6DE6E4796390592172112EB522
BEA0864EEA1D3A1FC9107C6C7ADC219BA6BFB5F37F7476FBC039C5140F399295
C7F9605AA6C01CE1FD513FC97590FD6273A59AF4FFCF431B317> |
39483 <0C1C60D8A8C9B5EE315366D0C7F4351196A821AD6C087E3E4008B90C8
21AA4BA5DA05D9E017367DCAB1F67A85E80664F97FFE981E0F9C38EDCE4DCA64
F0EB56191798ED4A937443E9FD01EFEE6240E81A7BB66ACAB65DB1066E60AD20
25D4D7A84EF13E9F8E836A1D752153525AB5841C2BA55465CA340F68C8C80D48
0BF8C6F680D71E44B4015801986389843CB318A65D24A27F89E34FFB93CBEBED
8E440F17D6E30BBBC124B045A1A07B36C00ECF610BF100B15E2864925AB25071
245E9F1935D5205E74CD8C800BA9E6935CCBC6E28F47AEEDF18DA47E9A8770DA
F6CF463283BAF041C7AE4F73153E6CF0F88A0999DDA939A80C7B69203C820D69
D2239FA50770C1CCF63AA295A75A9C27C7BBE866FF279C4C3978A8FB1CAE55E1
623730250E39AE9F6615D9BA8FC0AB993170231778DBE70B0538A2D466254D23
714A3AD6D1AC62FB771A9E90D3189A94AA39D7BFB0480386CEAE6CAA950E5066
04428C83692EFEF363799AB24DA424E30EFCA6E13BA83BF2A1290017F6858679
4895770A6723F01130A38B347835929D5BF212C0945E99F13C155E10265E604D
E34B71D1B82059E3287E39A2D0061B729FA804ED7E62F31EFE5E2399F686394F
03DDF12EDA9F6110635C681AF635F88EF4E299CBA8A30A0CF> |
15975 <0C1C60D8A8C9B5EE3177F5E8BB1E67B7773AEAB95F7FA70BC24C19B81
4C0DB7C3D4284B6E351E7B10CE06B153DA3EDC85A4890AF92B5FA364DCA5E1EB
D5CF91FC6D0F08BE7B6CC2F406D4A4A1C9996E211BC009966B32B4AB12D8702E
BCB674CE74BE794FC57751316D2F048E711C2B20436F5211599B29EEAE555ADC
D50122AEFC735DEBCBDBE33FD52311B600304F1007C1AC155D319415C2D6BF81
686E7EED7E9CE1439C62D8952BA3963155B4FCD1BD34E2F5EB31F1E6219F792F
9C273772175C83F5BD2EA1FF34D47D5D22690E9AC8271170FA8386E95EFD825A
1A45135DFC945A985AC35858750C943BA6F0863344731661EACBD1AD7F01A738
C960DCB1B84A65796C71DB98915ADBDB1A853B665E216587D294ABB1826A18DE
745F436BE6D65A356981754D94EB23159D7F1099F0604B5C4BF3BE950F3D3381
389FC1A3AB6FBFDA01BEB57CD0DECF8E93114F4ED4E79B7A6AABA6E981947487
F3414339A5DB544F7B94FD384A58FD2D4D6F44268890136E63A63263F1F98CCD
A78E82E186BE5ABDEB01A3871980EC6062CB27E79AD8A3802B5802B247987025
C32DF49123C8828213B36A09728B9FD02C3A8B43E8D640D8493F43F08970706B
B355B99FB846BF6E0F1F5A431D7DC71A9335EDD98C34B37071537B643173D264
65DDD245645D2D2C03EC53FB638A0C784D4C6C9A01666CD31DE240AE1A53C673
C4D9629CE8E419C4E577F4406533A32A565C807868A248E4933E3A04E317EFF2
40A65A367DA24DD1E752963A305697671F36243584E10E7445C34C5E787F59DD
6DC171F2E90EFCFF3C4018288A1398AC7B1EE67> |
19312 <0C1C60D8A8C9B5EE31537641D738C45E4D48C2CE39E99353DF0034DCF
2B4FD717615E02CD7B6A0ADCBE0BB0294797E23211A6DC9924318EED1EF82066
54EDC245085B3E5D623F4A515D46632492F7185EBE4077862958F63DFF5F7DE1
0A866D10C57A08BFF377A2BF169A57170AEE671E91732B803276B48D7518CC2F
33E337520C1800A516CD510484A8C364AF0C4354267AF5873EDCA61A1D8ABA9F
BC9FB0D3315D6977B2E8118B5C9CC8F72E65DE4E8E3B9D21743081292892EA3F
6F463DA78A224AECFA20D44B2AB17B012667D1B954211FAA4E23C76522C3D230
9AAF7B2B3131A2B4890E17FDA9295DEEAB148CE91A73CA9494C92F2DBDBB8A85
C779224760509F71AFCE74B1DD8E240F59D4A213CEE5729AE8CCB5F98AE7A135
9F54FF3F4D11D799DDDA2234F60E89682886E0B0FAA18527FE53D29BD08E31D0
B8CB6EEC6213DAD1203D250E0DBAA5B755F7F558E7519BB3747090BEF1C361C6
9B0B3803E5EC2A093F999DEAD78F01D437ACC054EFFF7F9399DA2AD1C45781EB
083D44D90E398F402023A29F3782A3403D2281B1E3C1E6B8A24E4876F5B53ECD
EBD2F64FD0BC2648676627482C8702A016E9F831DB17996FA8D38DBDC7B917C7
98D578F3F4B867528C1705BB6DC85BDE241CB0A21803E5C5B09495FB8B985979
906F75F6419E9B4CAD2D79781322D76A409D28FA98D340800084C34AFEDDA6FF
39337B71C24E3D769AFF8992A83A4DC248B8FC3BF43AC7E1A625FCE34C8DEA34
FC2A5FBE5DE12108992FC90FEFFC7124B6B68AB4B40686BB0F5739CB36783C6E
463D32061> |
10940 <0C1C60D8A8C9B5EE31764D2BFBC017BACB52B8D40968748228000D032
4121EB68BCD98D33C9C1F978DC7FCAA1C9B0305EAAA71F322AA9E1D2D17B1DF3
C6BDDFBB039D87DA6DA1B197B947AB3D469BF2C840D9149D9BDCA3CE4DF8398F
52C48A94077D26156FBFA14F38D2A1C0DF2A66E9CEAD201D62CC44DABBD473C9
CD026941DF80C2FE33DEA253F656DDA4E1A23E4289CA886A58BDE9D78E2EFC81
FBC8D8255E8E37878016362E74E0AA18535CF512CF9BCF9DE40ADFC63052FBFA
F6C885C7EF2BCD837FD158B240CB104C6E48E29B184A58B33DE268A91FCEC8D8
6219B982A23257BE60BB41EB15292D292948FCE019853CB30EEC603B4EA69513
82F83DFABBD106A5B56D1C76F42BB8FB7C10018C35A20A2DA871BFB98B9DF780
AA07D893996DD58321DEE34C47E6D043795762DA54FAFD90897BEC911F114A6B
561278D000AC292EEC7917271997080A10F427C79> |
9521 <0C1C60D8A8C9B5EE317684104CB0D7AB54BB4EABBE3AF3572D993E1022
11DF3040269C7593E8D89CA50D7DBCD5FC4F2115A9A0DE5F3FF727273BC7F8B9
6DA3863EADBAD29B3D03A1CD3D70C303BB82225F3F76D8511232EA4FC82A3439
86783AA1C30E0FC68B0BD2AF2695DED0949D881081891130160E5D2717D3EF49
25718CB21C285D650DEE28B3CE72AB051048C7EE5F211952857A65927678B46E
1C5485D06D0A3F7DF126F1C4E2A5CB364748C69DBAA1A7DEA0AC725A89CEF7D1
5CADA40F7254B29A9D6457EC3B10D9F9E3CFA49D72BDA2475147083CAA9B5C80
834D53CA> |
21238 <0C1C60D8A8C9B5EE3102E49EA1C42CCE86D662AB0F45665B688C0F825
FAC78352E38F4DA3E8839C481EF15D775068D92D0A261A29352C22038307844A
2E72DF56884D5BB4E03BFC4081A269DDFE5352B54A3EACF793EB01673D9FFB5C
876039804C6709E67DDDFA58E08427C09E964B18197D27A8A164C1200C6D6B2E
F7136FD6A83559C8CEB96523832B447B10F38AAF90526F6E6B1D1C3EA357EA1E
0AA571BABCA475543D42202AF53C8DE9FE9D4BCB32570364BF8EA95C8F098979
34186ED7144FCF235009E259EDB5D5FDB01D3BBAA28A7750749513B7A314845C
F93119FAD97C589DF82035A515402E9CCCB822DEF75EEF7> |
42216 <0C1C60D8A8C9B5EE3176DABA594174BD2F0C81E32B62CD34D31751BFB
E70FA2BAF2150D51C20F154E2E0687C32289C07B4656AB7DC9E2694745F20A11
7663CFF9C94B3F3EF86DE06AD7767046E572C83EA84C87634409CBD0DE549776
D44B2703C199B1342BB78609824D0DF8EAAE32E3719772F16A4CD93E1A054529
697899FABFC20B6C3E07D40291A46269D259CB72E0DB1618003224AA978470D6
B9D4C45584CDD3ECF7F4B4594A138E18D4611F600BEA919F9CB9450AFF3BB538
3D7A487659ADFAB3F0B9097918A890A740EADF3CBF8C151DC76944AE59923C20
376490B9002DFD225FDF630D7B192BBE9DF4E18C60EFB72D83E24ACD13282648
1441915DD0072D040F9F6A648F79C5C86FF8F76677F02D9C45BAD2CECA8BE528
8DBBAE0F4BA6AAAC95561CDAE88D98700935C3CAB520B79CE3D7046DEF7F95D2
B0FA66988C80677F057EF810CC63A> |
9734 <0C1C60D8A8C9B5EE3103F6FD5229ECA73E3BB2014A42181C2FE2357EFC
9FEF8D00B12CF795C99C790D66959F8A24ECF88DE046BD718931842EE566E510
C16BF679577D1658BC5C9330DADD5A3DC02ED3DC1683A6CA4ED4F8692342B1F3
E346B34E2FF9CC281992979E0E610185AB12EC7B0F893A181B05EFC7D060188A
A56AB61E8009194654FF00772CEB3361D43EFA1AD5A969B8EE47DD2119CC27E3
50E55A007F1490E9C69FCB2D1CF9FE3EC74338348344E286A934E7DCFFC94BC9
0BFC86D6BC8F359CC0B749AEAD02413DA57C512B6AE374F631B8DE384737> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
217.913 409.494 mo
(+\021w\254\240IlU)
[9.72049 9.72046 9.72998 0 ]xsh
-72.1445 425.036 mo
(>\036gEE0u\277\253J%\036+\225%l%\335)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
14.1315 425.036 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
18.9245 425.036 mo
(+\246+\225I\357%P%W-\2245\024)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
86.0285 425.036 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
90.8215 425.036 mo
([\023%W-\2245\024>\011CN%\036%Wz\035+\313)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
186.684 425.036 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2195 442.365 mo
(J?\232;)
[9.90259 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-32.4245 442.365 mo
(\001\003)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-22.8385 442.365 mo
(~\373FN+\225z\035W\3334\230)
[9.90259 9.9121 9.90259 9.9121 9.90259 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
36.2865 442.365 mo
(\001\004)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
46.1715 442.365 mo
(>gQ1Kp*\274+\021w\254\240IlUQ1~\373FN\234jC\020\256\026)
[9.90259 9.9121 9.90259 9.91209 9.90259 9.91211 9.90259 9.91209 9.90259 9.91209 9.90259 9.91211 
9.90259 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
184.557 442.365 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
194.441 442.365 mo
(4\003gEE0u\277\253J%Z)
[9.90259 9.91209 9.9026 9.91208 9.90259 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
253.566 442.365 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-72.1445 457.907 mo
(+\021w\254C\020\256\026%1R\366\244\350.\324\244\352)
[9.93126 9.93126 9.93126 9.93126 9.93126 9.93126 9.93126 9.93127 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
18.9265 457.907 mo
(\015P)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
28.9345 457.907 mo
(Z^&\006)
[9.93126 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
48.4535 457.907 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
58.7225 457.907 mo
(gEE0u\277\253J%Z[\023%WTdR\324c\276+\322+\021w\254C\020\256\026n\270)
[9.93126 9.93126 9.93126 9.93127 9.93126 9.93126 9.93124 9.93127 9.93126 9.93126 9.93126 9.9409 
9.93127 9.93124 9.93127 0 ]xsh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 2 GetGlyphDirectory
40200 <0C1C60D8A8C9B5EE3197A1BB469BE2A03A1E16D6305EC85D8F7250766
FA2B5611D1B6BEC32597D41442DCEF519E13354F8DB9420188CF24347FD29DE3
7702FE18CCFD0547DD91D85B2E57C4A8AB666BE399DF5601DBCE1CE4A4BD26AA
140A177F26F2E366CC2468AE6444F2EC54596413304E9F92BD928B765EBBC0B7
E58CB6CEDAFF1376B318A9A285E215D462D4D80A53E19077D8E36BC990C72927
8395FE07D8E8AFACEDFC99E747FB2BC804E8DD3BBF991838EA4A2DF58905A74A
1A1FE1A90EC436FC054C1E19933E0959B6277E4DDC600967B28D130F91EBA77E
020252CF50CCF3E000C95940FACF5E5F6FBAA3E5A491AA30A5AAA9112AB3C0C0
A17321DC05C8B87EA2514DAAE62F0DFEC3D113779B876BB116F660C82C9C3E3F
86DADAB68A814CFE2C6386E1D5085F82541C7F5FDC0F4323D360F0C3B361E46B
EF2A6710AAD37184CFB1D72054A4E6A63F4968E926A3B5D37F655FEE1F425E43
727F56FC71A95637603805E5E1EBCABE83BEE17AC33590AC0806760E787ACF33
78B33213E8E70E0F27E5350F9977ACDFD77F25DACCF820EF3C9C8DA42D26A8DA
AD5988D888EE95A2D87C41EBD071B8522C0DF8A4359099C0A713392EB181D7AA
95DF073681115004A6D02D52DC8B955E1964430AE2DB4D5247C5610FA6B5897C
3F069DAFD81D0BA7840B201CD1969> |
29792 <0C1C60D8A8C9B5EE3176FA3A329021A25A3AE0F5D70DE691B2E3D654D
BFA44395ABFCF2074B8067C4ECB161332AA8A1924487D204ABA115AAA4F26C15
8D34AECBA2B0A874BE1A27CC6962A723E63D6D2A33A0C211DF15980CA5E046FC
35F4045FBF6E8A226C4F1A3D38CA72FB32BE9ADC4F2C0CEA98A9485FB2A06791
156279BD66C696D85CCD88378E6E23AF50E23D0AE6F34E06106E66F990208B81
AEDB59FEF7063961EC32616801D389C2802BEF92C89A6973B5CA911D6F1D638D
E9C97D7F7A5A7C2EA7EFCCDDA31F26B293F1BCA66ACFFACFAE08C4F8E3A1C0C9
D29BD368D295988AC86B7DD7766E9A74F00EFF57375E4516B40BC3B996CC8600
5E44C98E69E93ECF5549984127C56C67F532CA3924F064CEBEAB47BB7E19CF42
C07414401E7684E6475FC4C62DA85263E7F03F0A3AF975822B13CC6B9D702F8B
AA1EBF8AB81AF6884892EC71E6F0B4AE178C41ED57FDFEA1538A5A52F9D96707
148F41E3ADA71BBBFD0FFDA49A1D2505C762C364332FD099A6EB934540FDEEFA
B3CEF9418501E6880A38826DC0080DA6292638CAA4EBD4CA95D5259EF3CACD2F
75C77A0C3FEBDE06ED81E22FFA81E1C0FB3529944A212BE341C59D59364FC6D8
C240F8D313946A8A1471DB034DBF19E147A3F5D7D49D27FB3E7454D2D12DF086
7BEEACB49C5CE33C736918A517DC2FCF8ED5C0B4BFF4D97F9CF8F905AF3AA4BA
5CD93B9CB2C2BC6627525117C60D5FBB212E558B6EB35FCE6FCC176C6D8DD29B
2EF3CC152E292436F6F238802BF241470C8647AE7BA247ACC0D5ACFB4241823C
B914972C990356559D0BC0FB4C709DFC8F6D84D0A4C49F49A850A641D7421228
72DEC5B0B70F70D28504A31589DB8B80FED57708F5710A58F5F22B501191F86C
047262FB986F7BC15B3E4B0DFEF29BE4B2C3B2E374631593D44C6D9506664A7E
2769BAADE19AFFDE248F8565E41B07910C0125DEC186590A300C7997CE6D85AE
E4B9847C3C7DF7CF921753971497F63953EEF7CC3836D9F0B8EBA302C8563EB8
1726AFA9193B6A13585> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
217.292 457.907 mo
(R\224.\324\235\010t`)
[9.93127 9.93124 9.93127 0 ]xsh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-76.5254 473.449 mo
(\037N)sh
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-66.9394 473.449 mo
(\000\025\001\007\001\005\001\015\001\003\001\002)sh
-36.1948 473.449 mo
(\000\006\001\007\001\022\001\023\000\377\001\015\001\001\001\003)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
.587601 473.449 mo
(\037O)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
8.4136 473.449 mo
(%l)sh
true set_gvm
%ADOBeginSubsetFont: QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H 4 GetGlyphDirectory
1320 <001C60D8A8C9B5EE310277AB99DD521C162C3738B606F2A792F8410593
6A1AD802B1090CDABBD7177B81126E02AD21B1F99C001F8FBC7FD16DFC52494B
B854E2034A65E64085EF189337739744AEA0ABC24290E6B87649B7A9606A7B3D
3292D2C584AEA37BAE7A23D8DE8D236F9B8BD94B2ECB4B2EBC5A6CB3638F9C46
9BCAEC348630982BA5736C36C64F0F66A68BE4FCE831A2F489062F9A7B2513CB
497E35772B55AA7DFBFBD39F50D58DFD0CC5A965ACFB31F54193F689BA5F17DC
B2C4786A43A5A08A01B2EFC516E1CF06D1352DA228DC31DDF68E25784ACFE388
51ED6017417D31FF5E83DE1E1F07F4D643308245CAEE3038F04DC2B55BBB1B54
242E9E6BC1251B293D148E7C7D7222A0450D5AD4D618AA9A36F96E78E0558250
FD106440E6FCA83F35B6732CC9E379632403A0A8F2DE3AE0C234002E853E4E3D
4AB7722493D26F149D95950263C1908AE2B2D6A0E3CCCC5E50BB5C5515140701
5A36684FE5CDF8754FE89131883242A45EF502AC340B69796C7A8957AEEE2CAE
EF612EEA01A87F392DB62759657DFAAD55EC484F59B95FE7E19876D0E3BCDC04
F0CD8CEDA4ED97D8285BF8F3D000BF2F5447B9DA5C7ED01C4AA55D12488BA701
327359A4E13EA3BB0CEDB9F4090A4CA25185DB786013DA292620F69E54566235
741E543696F99D536DF7F7B8B6687D41> |
5953 <001C60D8A8C9B5EE310DD3DA1D7E8DF9CB71A2F6138AC0E148C7563F35
311E823A7C887D4C39AE1AB01B2D68AC2D929C05BCDB3EE401601F96C96D965E
DAD66DAE6998DE693EE1FA117511A800BD87EE446FF3BF343D2B44E18BDCAFEB
BF0F15FB85FA03616F7D8F18CF778D019169D5DD1C784AA00022E0A8A9D99EDC
82FF90536274BA30A8E4E24423DE92EEB0B73EB3CF58CDC3B829DF27FFDCAFB1
0ADC444F621D5C6827C3B531989207B7F93CC8F2A58E614B5C9BF79AEFBB62FB
EC4A0C1A9A9321F99C477885EFB212EE916C2E2154F202602815303B9BBBE781
42D844470E5CED8C108791B2D6884DB20AFA73919C4432212BF1E7CEA76B32EA
8E51A7D13F2D4E1C892C5D7AA5424EAB606DAD5B5C0F381710DFBAE6F6B75A9C
E31EE7C3A2A0CBBC2FE49ED1474533E13339E385C2196E1D16C44C8DCC9953DA
9A0E25DE0329DE41927FE177FEF5C53327D093B8C447B807E52AC85564EE79B0
5AB2AE> |
768 <001C60D8A8C9B5EE3103CF1BFA9487B23D7C6663D8DFEA9F11187BFEBBD
08AEE673CA23145B18262CA344A7FA5DCA7E4B5437A29B1D1C11977D192EC3BD
CDA3801AFF8D03DDBF8A0D95E83F807B6CE8F4A5EDEB413EC9B8573116F46284
89A577F81869C57AA1FD73EBA2445C6DA39F5E2367CDEEC64CFC4DD4625D4354
11BD8C3B850D194C397DA5CB7E7F63CC565F8A682932FCCDB13B1CE71A795729
7269DD6C2640C5ED4B8D577AB6D71A7471F9DE660E1E37157B370EFF7C958C14
D28C897108768C94CCABBAF3C8DA5DB46B037DD783904DF645D81A86B419154B
16F91819A1F16DAA1917D5B69DEDFCEEBFA875C36393DD570> |
7085 <001C60D8A8C9B5EE31023EA2D1EB0A71513C0056D28AAD32DB029C5026
D8092FC53C68149780E01BEF6DF90B6B0C7B4D535F8E62F7928410075106945E
80F320146CE9A2C24C1841BD55BCB3249E0DD04C61BF10326806470C021E723B
EB962E78FD184F4CDB3312B01219134D93C4C4271A87898FDB7564772276E21A
C4C22E5D53763336192394E4A86CE3A12B15DB302060F8B01338AD496A59744C
C5F9039AFDC41547C7469EBB3B267180C99FB5167B0A5982D44EBE890F827DEE
8CC1CF2DBCD68729103C98D0CEC16FA6A828FFFF22E1135ACF23E946A7DCC63E
C04CEDF2BE16BE6320A1ABD2AC7B6B06631EE1887BA07F86999C64266E71BDC5
067A29D335CCEA7CADDEC8831DBFF2A8525F6A9F78F462FBFA2EA9403227DAC7
02C425305C75715F363C11DB502F0BC29106CA6A329B62F42CB92109F8DB03FA
DC678C55C8A3DCC73A250578721E93024A6593EC98392DE1017E77970D2C94B0
122492DFFBA936649346F209715217DD4C2A0E63E278A5D3405EC6962137D294
C3F3E4C4162326C7AFFC1C3BFCC3FC26A055B14296ABA730BC74F7B7BFAA6B41
AEEDA671E521C684C39F1D7624C635FB4DBE7C127AE2D66B2EFB50053608D719
E447EC97629A4E4871A70E13BA7AD1CFBC96ED7B92E5EA2EED1D68B78A71600E
1F1F68C03191BA2FEDC0510479CCE25A9266296CAD41B2A94C60D389B9AFDDCF
EE0277DB12090D73713B4B4BF458123BC28777363DADA6DFE701F8F308E6B331
AF55DCB2D1680747535264E1C62241A096388F9CC3C3F8740F07974D9CE54EA1
A83EC773AC67D61AB0532876E43BDB8EFABB5BD30BD7BDD2CB6084F68DACB183
52C060CFCD6E521FF040E2B86C42583FDC231E75C1F06CA521C078408DBD9EEF
BA4F7F21C93910074EFB7CF6F07E754F089CB06B3F54EF4624B27AD69ED3BC1C
8A17BCD8B2B1D2C820E7B486B157> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
268.013 506.051 mo
(\005\(\027A\003\000\033\255)sh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
1852 <001C60D8A8C9B831A9832C6943FA94F4CB0D31A906C36C179F9F23FE6C
C95E> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
298.689 506.051 mo
(\007\211\007<\007\210)sh
0 0 0 1 cmyk
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
309.09 506.051 mo
(\037T)sh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4017 <001C60D8A8C9B7A73DB6E60B19AAFAEE87A387685D9E664DD49F27020E
16150B6F1058BBDD482B9337F3A760ADF77BE3D68E5D431C2609D59C60501094
A97B31C4202C05D8C5FCF15C09CC1696A46437E3111D2248C304B18D2D354F0E
B2E987870B9BE30A4A00323F6FDD0F6737761B6F01BCD18A12F88E04C758768D
7D4D69A1BB9B4037AE> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
65.4236 502.073 mo
(\017\261\004\262)
[7.74087 0 ]xsh
84.3096 495.428 mo
(\015\003\004\(\015Q\004\031\015P\004\))
[5.93764 3.55659 6.01746 4.10461 7.98 0 ]xsh
.6774 lw
84.3096 499.502 mo
115.47 499.502 li
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
1063 <001C60D8A8C9B756EDA6AF6EF5ABF7EB345C5BAD2CC21098FC099C069E
9C033E28363C3BA4F3A1A88A31FBF2939174B2E711F0> |
1052 <001C60D8A8C9B8771BAF4709D6D4A9E016D93C007021FA8AD04A823FA8
7388D4C55B9AF819BC029E9C52BF> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
91.0676 508.45 mo
(\004'\015P\004')sh
116.665 502.073 mo
(\004\034)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
1932 <001C60D8A8C9B7AC35A186136EF78842B38EC84A76282711EDCC48D957
1110A8A7F874EA638006C6B0318A4A1104971D960D3A46CA957E155BC5FEB867
E8DBAA7EFBE0FB29947C0FFD6D88B7B3DEAB39166951AE2500FA4114CFEA8079
F56352B4B54F119B6596F3B85AB0997A7F34A303EE> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
237.536 502.073 mo
(\0071\007\211\007%\007\214\0072)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-72.1444 528.866 mo
(\017\261)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 7 GetGlyphDirectory
9633 <0C1C60D8A8C9B5EE3176E049D876141A8F689FB3F5C337D752A6B20366
95368294A5FD8B77142FA1630B7D9E041BB22C1D40949CBB09AB8D10D4B9A567
E6D5B9C9E270C95EC9F3B073A4DD7B005DD2A748BDB07058DC88638A7FC37B4F
E907CA1ED578D4D3CBD7A95523F74F28A9260D347B74C14E7AF283E648D8E26F
C01C45B5B038BC1021E0CC62E168BD3AC9415BE90B5C037CFFE7EC55E7C978C2
24A5D86F251B199EF624F64B9B39FB3C9447BBE342AF4AFC6AB3E8C825D786E4
6513587D857FC650DE8611B5C7E94FC7DD7ACD84C8F956D58BEF6C9C717A7133
7002FC2EAD88EEBF6E9250CDA37EA6040103323E0A0758F086BA927F2567F027
1B55E17240C227828A5ECAEBA44B7E9188ACE77B2BB19739458FDED579EDE1CA
B34A1B2DEA2FB1E4B8F4F349741FECABA9802F7AD51283C5E2F606FBF8D37927
D7F019328B06> |
28570 <0C1C60D8A8C9B5EE31763B41DDAF6F28563EA721B4D7D5E800461B125
C3EA442401FDCE4D9AD16731B8CCD046AAA18761A6B5E0C03D7D4210C7F51853
0A59418709F0305C4201A9E3943D9E4A5B373FBDAFF2C091B293FF314748798D
8FEF20D0E4AA3258EE7C0375B0BB9D27EDEC3197738609CD04B5CBA0C596D3A0
506580093FF92D68C48B683C97AB05F0AD7C0CCDAEBA75FE3A5B813A3210A8B2
68AE16140AB756C4D675D00E10A57B695BFB477D8BA7216AFE071AD92D1DC459
284388EFD9A1563F05D889705BF2D418BFBB4FD38CE70F38CD741C3D3304EC08
C413E0E40A4FA4A59A5BD947B040ABAF5B5EFF21ECEEDB5E6052F6F8C484BBA2
7165440AC8D4274F80EC8C52BA152DBF13BC187027ED8C77D25FFA0865DEA2C2
BE0FFD65A99007305428D510EA950ACFA410BC8881D3F1F2B0C50EC2A91322FF
1EFE6EE78> |
10001 <0C1C60D8A8C9B5EE31764D3B92C4F028495F1975AA59EFC4A6A978296
BD000653776B59C31C097B8DE6207AE5B56206B768AEE0AFDD590AC16EE08804
567E2A87FA580927AA3F199C94A813A1893DE320A902CA558CC7BE27EF92A1FB
3661AB57E29A63D1B4C1A05FF04F2E7F1C4AE2ECD95C827C5493068158B916D8
350DD0E892FC156BC1408DAE30A4F275E9A8E671F12E54CCA91A8E5F77DF9562
77548EC4D3E5345406258F10239CCEE5E1EEC24FF37FD7C69508B27814E730A9
952FA658267E7A42DC7D45AE0EC99028353E2245BD597435680B76E672EB4A71
32AA6677A5C5389CADBBD69D286E6BD0A422E66ED26FCD202> |
20570 <0C1C60D8A8C9B5EE3176FA3F359539207659EF410271A289F5D3110A9
623BC653345395CD93FE29300699F6E4C403FEDF8C7A6417A58EC919EB1DD0DB
ACE972508EB6ACAF48A178D9EA6E53EC20AB9600EFE605B61FC048E13FA9D2A6
0B032257C54E9B1D57F8A25615B18DE66C677CB986E41FDD0DD0F8492A27DD0A
01778D489446240D6E19FE4676682BC271FABFB212C0D1CDAD892D1F4363759E
1174FCE1AA03EEE6FCE3F7C9DA73642E476FAA48504BD37E8540F4A3F3AEEF04
2CF67F7AA5736B64CEEFF8FF770B6965BEE6105EF7BDFE11788D112785F6CEE2
319D4F749A483EC1C8712808635B1855574C8D928AA86B98343DF551F85B64BF
F34564ED190B4379B7C421263700C> |
9514 <0C1C60D8A8C9B5EE3176CED988587162AE26E84A663E655591206AE883
6909DDE2AB9C86CEC4457B07B1F195CF1A7AD895B526018E69EB5684D2434949
590ECF419AF7F77E59BA7B54A15B40A93A61A506A607C285AC6F5A8F1F754854
60344FDEDF887A3F0551A5158384229CEB578F79> |
19148 <0C1C60D8A8C9B5EE31764D9A7D692685BE25AAC90EFE03D810B70E1F3
E3C0B40363960D7C87EEC251CD3E4327DDCBABC1F2F959F09BEAC9CFE2864E18
62DA369640BFBB1B52688AF3E37EE15C4D5AD322ADA613F1630D6DF285871282
EC6D2B6E1427F2F29CECC4D7B21DED738DDFF3C765F9524CD177B75688CC393D
788AAA090305E0919D6E0F689309E4C4DF9FA72B22F74F2142D31E9A2F6F1690
99CA2073456C1819F83E05FF49680358F81AFECD807456EEB59419AB9039F334
01C94D099D6873F1571C0370BB2480BD10BC65653EB670384723EE1B29A342C5
E0E17AE54C0E515ED517705CA39A977B1B5C8178DC003BB385C5FDE953017F8C
6287CD07A7FF1D58DFF37EE91A9433A798AABB4FB83EE21E935DD52762A930DF
5DA4C132942220EA776EB41B1410B3B59F2181562C8B4F12ECBA4E3831662511
760CE3014E20601585624ED1D2775096EBD04040258326DF517CC9D13C358F58
2350F60D5DB413C668D0EE32747C2D1A67CAD7F207C9A47EED1C4A5EABF90BED
287C6D6D9C7F428F3A08B6D76AEB23C11BB3A16548BDADEF2740557AA21E2A83
A2AEFB892C34D8A8B2B1DF5F3BCB6F35E74100A79807637A875AEF4E382A92D4
611FBD172A4E04EBF54EB493ECA326A33E6BCF3BE> |
17685 <0C1C60D8A8C9B5EE316FE228B6470B7A205310F943C7F8A60C24F569E
64FD220648D9689B7019B29C300F69B420D1CE5A806F571C76B8197C34B18CA6
21D46930B826743EF06B07E2C19C841A978E9D90385C2C8CDF1EB8903D53438F
16B8291B195AA3146316B2298D46B7D74B20F59DAD36E4B7065BD7DB7B474EE6
2A9CD35396A257CF0E8280410890AAB3FBAF420CDAD0B6F0827B0AF06A38B274
CAE1AE11C829B1C8EFA89B214322E1918531CA09710131701079A742CD6B8CAD
D8700F6F7D72B0D0379027B902A7A4C2CAC0C79D5661661464A0687FA9E7D575
06A8EC8CB0D98FEBBD60D04CDD05EBD9C3DA1006BF5869911F7100EB7EBC79C2
A21DD4F5DB1C13E143740EA22353A81C656C86DA636D2AA748AAA3B02DD06CF5
1A93666A23DF4CA404B94FC3A864A4DCA428159C90364F3281FB77E4CCC7830D
2AF0791EA68D861774844D4EC18EE0595EE3C7635BB7EBEB03FCCA431B685CFB
C7193F719005444E450AB46E8FAD7E7A80CC3A82042013E1ECC18AF9E1A4C20D
5205B1BFCA9762A26EAD1C1BF50D63552628BD9274C3B3D95CD5843264F14567
67B18B6A201992D0379619803A9E701A702FA427415FEC22CE0626272FC9AA61
4BD2EF6D971A279DF9AE485A816FF8F21EB3C4F07E1A8D8F5B7C73C96EBB9455
9886307A50DE8F2BFFA90519989570153F345EC2FBB2972934932BFFE89FEDDA
71FCBCC> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-65.6694 528.866 mo
(%\241.\252&ho\232'\021c\276)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-6.65738 528.866 mo
(\015Q)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
.854622 528.866 mo
(4\003)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
11.9356 528.866 mo
(\015P)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
21.4096 528.866 mo
(PZ.\324%*n\270J\314E\025)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
78.9266 528.866 mo
(\037T)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-52.2194 546.195 mo
(3\275)sh
0 .745 .745 .208 cmyk
QYYALI+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-42.6334 546.195 mo
(\007\211\007%\007\210)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 2 GetGlyphDirectory
32533 <0C1C60D8A8C9B5EE31763C1F92DB9DB6D1C8341C99FD29EEE4A68512B
5A21AF6C2303442EB81AD32BAF177EA43558CAE89D66FCD3E69E97A735A24630
9EFC8B7EDC5A68621910B0CA1039CE05A023583801A2FE49E78E6E1FC7831E72
9881B3C12C1A5E01E80865957518D3BA517D02DE8365D407989CAAFA99C283CC
B635FEBA74A6B724ADA27404BAEE1DFB2020C0F865B367890AF9DA7596A4E04D
FE2F20DA4B6C03D42A68155A6D5F6420B859B6FC044D4E64B4A67931D524805B
BC3498DE079517681B0FD84B3DC9F1B2486F9846E68034B91D82803F73E99F88
ECDBB3C1C7F1048AEB3B102F91A20795805008F758C66BEAFA3C86B6E505EFBC
808709636DB52A483B71EFD7B75261F0A9F1177268B8AD03A91DB9A98F177845
0592A4B3DE5AC313184C075079FADACE395C87EB6E04E02773B9C65CFD7BCE16
B0BBBF4E3607AEB3200BCD9AC78A89CEE68AF5B85CE00566967554BFA08DAD94
233173FC6AF3D2BF7068E823BF856F2D0B923C17910B8AAB488F0E7> |
11139 <0C1C60D8A8C9B5EE31762D361D73A567EA796BFBA72E87EC1EAC77FB9
5951D410EAFCFCC2BEEA89E539FB3DAD219A540DD83A6C8891D6159A595FD67E
8EE5F00FDE382734A1B571ABE4C1D1E878EFD219232ADBD67F570C32E5E5EDD9
96707799F842B4CC287051A8832B2F818BA0D6B8BA22D204C1FB262BBB96CD08
32314D7BEDFCCB84F48B8C452C19ED58EB5EADFCDB66A5F328FE8DF30554B333
25F987B70B4921892D82B4C44B70570932042278C6D1DCCEC1A89564F2C1FFED
EBE06DD48EF7BDA5E986B6E47B9E317F8265DE0AD8492D37B6E8ABD36CEE61C6
6C16F1653756FBDD4DC18D6517D5933927DC8D7E5D63D8ACCF8528D596BC40D7
64DD535141F40FC631C5A6F53D73B40478AAF18BB585EE07376E05EA6BE225AA
922447F854BEEF68D64B1E5BCD6DA0786BD659F521C31EDC00188C005C7CBBB2
7DB261BD3109DD13CD78715A39E2B9A62> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-30.3294 546.195 mo
(\177\025+\203%\327%\036%W%\335+\225z\035\253D\260\(n\270~\373FN+\021w\254\240IlUsO'[)
[9.70117 9.70117 9.70117 9.70117 9.70117 9.70117 9.71083 9.70116 9.70117 9.70117 9.70117 9.70117 
9.70116 9.70117 9.71082 9.70117 9.70117 9.70117 0 ]xsh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
153.905 546.195 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
160.541 546.195 mo
(*\274%ZTdR\324gEE0.\324\244\352)
[9.70117 9.70117 9.70117 9.70117 9.70117 9.70117 9.70117 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 5 GetGlyphDirectory
1066 <001C60D8A8C9B80F37FEC6B130EC7CA4519E0D1991A516C91CF9426682
00C7305432BFA2F451A64401731D1052479BE4714CD69B3CAB5C4622AFC184F8
9077EC204E0D1D16932249D64F512FBE951923086B8C13B91CFD> |
3354 <001C60D8A8C9B7ECD93714DF512631CC791BE1FCF2FBA2BF1C505A49C6
4928368ADABA20193A56B83D42F8A930E67AD39469820DE5132FC588406C1352
780AF2E68A040D7AF42D9DF90C1177553371B3934E257FBE434FF4FC254F8E37
F8867571FC5B0C4023A0836BEABE9B790F9BD445B8944BA2337005757B64C1AC
67CAD9124FA83AAB2DD2190FD8FECE53AB1B53EDA943DBFA9BB09952DA7F0804
778F15112C7486D8928AA1A6B23D870867929863F4E7C124C6D846D535B2709F
A4E48355E255F6515B96E3F2B92061B1282BBF220FD7> |
4275 <001C60D8A8C9B78FDBB09DA2F57E2BFD1E2107DBF1F2E518C96C291974
E0BD03EC7584BE3B4419B127590D39171B01B6FFB5B7355D148807B55313F5AF
B524F040E9E0F688CBE82FF2609C1E4B2EADB4738B6E0B7F0D657DC19B8ECFD9
A97366367BF0E1AE59E7ACDFFE4FE9936DA65B8343> |
1067 <001C60D8A8C9B80F37FEC6B130EC7CA4518C3EFE809B7446FDD14C3681
E957603120704D28E96DDD7B173F27B8F52C4A213B22AD8837CF8752490D255E
B5BC69C4C61C04265B416DFC7BDB3486065FE3E196C7FA0F3A89F342> |
3352 <001C60D8A8C9B60AF037441392E233EFA1E23161F5D1B4006D086091F6
9912368D4C6F4269A925E53DCBA45A5649CCB3E5579EB923938001FCAD8D2093
42F0A6B4D4EAD7308437A96A22D77D3DAB94EF6F17275B450CEDFB706A90508C
C2BA26BAC3F5ADEA861C8DA31425DAE6D5FAF980158AAC6E381D81828118171A
5013E1526757273CE840E10E479466D9AD6FFBE52EF0B6AFEDCEAED000BFF252
CBA2F848833DF40E36D94CAF56C3913F1B8E174776ECE2E5B3CBC86357E77D82
30EF304FE889776AB5652BED14B9901B91E2EAD6C1161F599341165401036405
2644F7B13CB77190> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
239.719 546.195 mo
(\015Q\004\262)
[9.77335 0 ]xsh
-72.1444 561.737 mo
(\004*\015\032)
[3.47694 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
-63.0984 563.829 mo
(\020\262)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-59.0504 561.737 mo
(\004\030\015\032)
[4.09458 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
-49.3804 563.829 mo
(\020\263)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-45.2274 561.737 mo
(\004+)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-41.7504 561.737 mo
(\037R)sh
QYYALK+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-36.9574 561.737 mo
(R\366\244\350.\324\244\352)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
2.88159 561.737 mo
(\015P\004\262\004*\015\030)
[10.7396 9.94268 3.47694 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
34.0406 563.829 mo
(\020\262)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
38.0886 561.737 mo
(\004\030\015\030)
[4.09458 0 ]xsh
QYYALM+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
49.1836 563.829 mo
(\020\263)sh
QYYALM+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
53.3366 561.737 mo
(\004+)sh
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
56.8136 561.737 mo
(\037T)sh
1 1 0 .1 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 4 GetGlyphDirectory
262 <001C60D8A8C9B7FA130B99932EE4B9F3B8252DC0F89B981E62F4E5AF6EC
E2D3F1AA373C4E9D54D3381BA6CEE265F267C8952CBEB53A7361212FDF5C0D23
F7085A945A79B1ED23FC865B8322E7ED170157EDF570C593111CC216847511F2
3EDE7C3478FAC6C1E1BA1E7243BC551A3C2F9706CF02557594003E102191A470
177CE8780753872CD02818A8970FC3A7E3674C73F1DAF7E43A1A1C6> |
1828 <001C60D8A8C9B8771BAF4709D6EAE300A7AA34E6BA2728DE6E80EA2A9C
AE0549220640DE483B04C69A771A2D1957D2291F52A2B395C8FBF9A531C4B29B
97D9436527D5A15215DADD> |
1837 <001C60D8A8C9B738A232BA25867880CC2E500361680234C9E9FF118FD3
E7612276> |
256 <001C60D8A8C9B7B14CEFA879D6EA696FFCF0FDCD805D22B54413200F4FA
AE3A4091ED1963B1B569A0769084F9E8EE36B2F7C53B9A38819C57E66EDF7823
F7CF69E98256E2CC880F5FD572AF60AC34DD321B70D8B09DC5DF798C9D4FC463
B8A15FD2051D9793E40383ED2AA0CEAD74B979BD112FAD86E721FEECC3B6828D
95B8E45CF624E85C4B5ED34D6009E> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
QYYALI+STIXTwoText-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
-72.1444 575.91 mo
(\001\006\001\023\001\023\001\017\001\022\007$\007-\007-\001\015\001\015\001\002\001\013\007%\001\005\001\007\001\023\001\006\001\024\001\000\007%\001\007\001\016\007-)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/QYYALN+LMSans8-Regular-Identity-H-Identity-H uf
/QYYALN+LMSans8-Regular-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALM+STIXTwoMath-Identity-H-Identity-H uf
/QYYALM+STIXTwoMath-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALF+STIXTwoMath-Identity-H-Identity-H uf
/QYYALF+STIXTwoMath-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALK+SourceHanSerifCN-Light-Identity-H-Identity-H uf
/QYYALK+SourceHanSerifCN-Light-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALH+STIXTwoText-Bold-Identity-H-Identity-H uf
/QYYALH+STIXTwoText-Bold-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H-Identity-H uf
/QYYALJ+FZKTJW--GB1-0-GBK-EUC-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALI+STIXTwoText-Identity-H-Identity-H uf
/QYYALI+STIXTwoText-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H-Identity-H uf
/QYYALG+FZSSJW--GB1-0-GBK-EUC-H /CIDFont ur
reset_gvm
true set_gvm
/QYYALL+SourceHanSerifCN-Bold-Identity-H-Identity-H uf
/QYYALL+SourceHanSerifCN-Bold-Identity-H /CIDFont ur
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
