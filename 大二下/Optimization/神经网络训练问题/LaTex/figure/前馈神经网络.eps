%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <795E><7ECF><7F51><7EDC><4E0E><6DF1><5EA6><5B66><4E60>-<90B1><9521><9E4F>.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: yy
%%CreationDate: 2022/5/1, 19:15:23
%%BoundingBox: 0 0 210 117
%%HiResBoundingBox: 0 0 209.5179 116.6714
%%CropBox: 0 0 209.5179 116.6714
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 803 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2021-05-18T22:09:40+08:00"
   xmp:CreatorTool="LaTeX with hyperref"
   pdf:Producer="MiKTeX-dvipdfmx (20200315)">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>邱锡鹏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">神经网络与深度学习</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 104 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YEKBAA+STIXTwoMath-Identity-H)
%%Title: (YEKBAA+STIXTwoMath-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YEKBAA+STIXTwoMath-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-978 -1641 3072 2627} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2016 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.  Portions copyright \\\(c\\\) Copyright 2010, 2012, 2014 Adobe Systems Incorporated.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4278 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-15 0 469 485 510 530 603 616 630 647 655 668 704 719] def
/OtherBlues [-235 -220] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YEKBAA+STIXTwoMath-Identity-H-Identity-H /Identity-H 0 [/YEKBAA+STIXTwoMath-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/TVZNDL+STIXTwoMath-Identity-H /YEKBAA+STIXTwoMath-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: TVZNDM+FZSSJW--GB1-0-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (TVZNDM+FZSSJW--GB1-0-GBK-EUC-H)
%%Title: (TVZNDM+FZSSJW--GB1-0-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /TVZNDM+FZSSJW--GB1-0-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -234 1063 863} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6958 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /TVZNDM+FZSSJW--GB1-0-GBK-EUC-H-Identity-H /Identity-H 0 [/TVZNDM+FZSSJW--GB1-0-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
true set_gvm
%ADOBeginSubsetFont: TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (TVZNDN+FZSSJW--GB1-0-GBK-EUC-H)
%%Title: (TVZNDN+FZSSJW--GB1-0-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /TVZNDN+FZSSJW--GB1-0-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -234 1063 863} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 8101 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H /Identity-H 0 [/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GFNBAA+STIXTwoText-Identity-H)
%%Title: (GFNBAA+STIXTwoText-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GFNBAA+STIXTwoText-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-948 -373 1297 1047} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2018 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 2082 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 15 dict dup begin
/BlueValues [-15 0 468 491 532 548 628 649 657 670 700 717 804 814] def
/OtherBlues [-237 -219 72 82 242 252] def
/FamilyBlues [-15 0 468 491 532 548 628 649 657 670 700 717 804 814] def
/FamilyOtherBlues [-237 -219 72 82 242 252] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GFNBAA+STIXTwoText-Identity-H-Identity-H /Identity-H 0 [/GFNBAA+STIXTwoText-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/TVZNDO+STIXTwoText-Identity-H /GFNBAA+STIXTwoText-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (TVZNDP+FZKTJW--GB1-0-GBK-EUC-H)
%%Title: (TVZNDP+FZKTJW--GB1-0-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /TVZNDP+FZKTJW--GB1-0-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-109 -227 1055 863} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 7415 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H /Identity-H 0 [/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UGXAAA+SourceHanSerifCN-Light-Identity-H)
%%Title: (UGXAAA+SourceHanSerifCN-Light-Identity-H Adobe Identity 0)
%%Version: 1.001
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UGXAAA+SourceHanSerifCN-Light-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-994 -1050 2930 1810} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2017 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 64785 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 18 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 524 541 747 764] def
/OtherBlues [-281 -281 -271 -271] def
/StdHW [36] def
/StdVW [67] def
/StemSnapH [36 47 63] def
/StemSnapV [38 67 79] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 1
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 747 764] def
/StdHW [34] def
/StdVW [65] def
/StemSnapH [34 53 116] def
/StemSnapV [65 76 117] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 2
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [38] def
/StdVW [36] def
/StemSnapH [38 61] def
/StemSnapV [36 47 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 3
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-1100 -1100 1900 1900] def
/StdHW [30] def
/StdVW [43] def
/StemSnapH [30 61] def
/StemSnapV [43 52 69] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 4
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [0 0 524 524 747 747 802 802] def
/StdHW [33] def
/StdVW [61] def
/StemSnapH [33 47 105] def
/StemSnapV [61 98] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 5
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 120] def
/StemSnapV [40 120] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 6
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [36] def
/StdVW [36] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 7
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [63] def
/StdVW [47] def
/StemSnapH [34 63 78] def
/StemSnapV [47 74] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 8
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-18 0 524 541 747 764 792 792] def
/OtherBlues [-281 -281 -271 -271 -177 -177] def
/StdHW [37] def
/StdVW [61] def
/StemSnapH [37 53 106] def
/StemSnapV [37 61 72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 9
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [39] def
/StdVW [46] def
/StemSnapH [39 50 110] def
/StemSnapV [46 59 109] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 10
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-18 0 747 764] def
/StdHW [31] def
/StdVW [57] def
/StemSnapH [31 55] def
/StemSnapV [38 57 70] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 11
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [60] def
/StemSnapH [32 62] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 12
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [30] def
/StdVW [52] def
/StemSnapH [30 48] def
/StemSnapV [52 69] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 13
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [31] def
/StdVW [31] def
/StemSnapH [31 46 68] def
/StemSnapV [31 46 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 14
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 12 dict dup begin
/BlueValues [-15 0 511 525 726 743] def
/OtherBlues [-272 -272 -262 -262 -202 -202 -172 -172] def
/StdHW [37] def
/StdVW [69] def
/StemSnapH [37 54 94] def
/StemSnapV [43 69 99] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 15
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [50] def
/StemSnapH [32 43 109] def
/StemSnapV [38 50 109] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 16
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-14 0 702 716] def
/StdHW [36] def
/StdVW [61] def
/StemSnapH [36 50 65] def
/StemSnapV [61 71] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 17
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [32] def
/StdVW [31] def
/StemSnapH [32 43 69] def
/StemSnapV [31 46 72] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <051C60D8A8C9B5EE31016ECB81E0C1366BAD401163892378F09CCEE0154E6
2994282057923F54B325CC9A5AE05541130069BD6350B359AFF79A4F1203E4F9
65AFD06CDD29B899DCCFF61E378EF8BE0D6B163503EF8D2BB88E2DA55D0DE272
114CCF5BD1FD2B8ECBBBA5C87B1265A800E5B0CEF> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H /Identity-H 0 [/UGXAAA+SourceHanSerifCN-Light-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/TVZNDQ+SourceHanSerifCN-Light-Identity-H /UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ELRBAA+STIXTwoMath-Identity-H)
%%Title: (ELRBAA+STIXTwoMath-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ELRBAA+STIXTwoMath-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-978 -1641 3072 2627} def
/FontInfo 5 dict dup begin
/Notice (Copyright \\\(c\\\) 2001-2016 by the STI Pub Companies, consisting of the American Chemical Society, the American Institute of Physics, the American Mathematical Society, the American Physical Society, Elsevier, Inc., and The Institute of Electrical and Electronic Engineers, Inc.  Portions copyright \\\(c\\\) 1998-2003 by MicroPress, Inc.  Portions copyright \\\(c\\\) 1990 by Elsevier, Inc.  All rights reserved.  Portions copyright \\\(c\\\) Copyright 2010, 2012, 2014 Adobe Systems Incorporated.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4876 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-15 0 469 485 510 530 603 616 630 647 655 668 704 719] def
/OtherBlues [-235 -220] def
/BlueShift 6 def
/StdHW [29] def
/StdVW [83] def
/StemSnapH [29 41] def
/StemSnapV [83 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7DE87DDE77D9F0E62FC88616F0D860DCCE4DA0B50B1A8F98
3EBDD6169ACEF4DEED994B25C9018FFC3DEE1E9A88779AB95E62CA9CEC6ECBBB
A68A10C31C92046187221BB92A791E7FBC2D58D5EBB65FBA43AF3B0F1F16FCF8
C9E703A26C83C7829480A5EE85A0B926D43133E6FA3FCC3EDD3447EE9A092287
80C623578F179A24EBE381BE51D92B4F77F12672AE05F1A8E15EE2BC99935E19
5CF848C7B64A3C64FA05B0209C67BBCF7252FDC18E4A174F46CC865C67A5A74A
17043DE6FB45DB680A74BF005D9DCD00662A054B5CD3C5A0F57D9A2203BEDE09
81CA035C25A4633465A2F8EB0AC8642D9D8C9CBF041C5054D9A2E20EE66542AE
B42BFCC18E02059591A7BADB3DD479949183ADE5F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ELRBAA+STIXTwoMath-Identity-H-Identity-H /Identity-H 0 [/ELRBAA+STIXTwoMath-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
reset_gvm
/TVZNDR+STIXTwoMath-Identity-H /ELRBAA+STIXTwoMath-Identity-H-Identity-H findfont ct_VMDictPut
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -116.671 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 116.671 li
209.518 116.671 li
209.518 0 li
cp
clp
false sop
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 9 GetGlyphDirectory
1930 <001C60D8A8C9B7AC357E9949B91C1FECB983388BFC07B6CED6C0798DFE
26AC7794C6E89E06270DFB409D6D997F33FFFEB48DA5FFDDC821CE747EB9C3EF
23B1C73A4A9CC2F246DE79969BAA59C3> |
1829 <001C60D8A8C9B8771BAF4709D6D4A9E016D93C007021FA8AD04A823FA8
7388D4C55B9AF819BC029E9C52BF> |
1929 <001C60D8A8C9B7AC35A0E44596F9773E422119C0DD97DDFBB56EB051F4
8ADD5036EF60981EC6A0B83A510685BAE4F49373D951615D44C071B44BD00F42
716BF135D9C792DC91417EA84038CDBA8D2027E33CFDC1D024627AE89582A197
BD20227E1412A9454114CE7F0F0354C390F32F5207294AE4E2725D33D1137B8F
3CC167EB9C10C040963E45B28F0A47926266DDCF00FB8D268A8D2BDF7577930C
2668880BE4C8D18153784DF0D1A4718A4F> |
1928 <001C60D8A8C9B7AC3555053734DD1D67297344016111D36CE07A723ABA
1EFD86AC13812366B7F164CA450F6FEEBE31BD222D29FC2C2A1A22BDCB33B478
9D76A1082D3FBCC3D0C0E4CB7B4959AAC47B9722CB4D9EB88FCF4517DE20636D
5C3A934205A1436885482AD1> |
1926 <001C60D8A8C9B7AC355E8E1D620B1ECAD79066F7FE5949D279CA1E6F18
41CA4CE12881D6C9DF86810331C4A370FD36A778D6919E7942FF5EB87197E634
F8FD9049E79663C0447EFB45592D51953A09015ACB124B05E976984CBD> |
1927 <001C60D8A8C9B7AC355578F0AFBF2ABA49231DD42B98E13BC66C31BB11
87975D4B1EDDEFD42BD4E59A726DCE91358EC40A5F077CBA7C186B55BA13370F
060B7FCF> |
1931 <001C60D8A8C9B7AC35A0E44599192AC2E0E5C1B1E926D79110C1D6E740
92D9D24BF6DFF465DBC28C40C8A710570CB45B67500BCB9BA3A636488CAF40BE
3FCE494B5CE34AC0FCF01F1D91B5C236544E1A0F17BE3507A06C1400771D75F8
F3> |
1934 <001C60D8A8C9B7AC35A182D8F2AA2354653D2C1EDDAA0DF20B30D74BE0
0FF650E4312E9EA7E5595B658A044B3E7B50FD18877CAB5D13CA652873AD3E88
3708569345B9035E76FC92934B5D785C23BCD9F8E85E91A8F8CDD75AFAB6AA34
178E36CFF7DBFB1E9407A98868B299585A2C7DDD0F21D4C8E0FD337106DC9BE2
F82EEA17820369F37AB31E4766DFA71C1F921A12A962195205AE2DF3A6E1BDCA
D6BBDBA223E0FE496AA9B0E84F998A29BE9170AD8200D07D5E39A3CCB6680791
48D0D908EDF213E8C73879A08A349A400F5BC58318683362E50C49B9A56CBFB9
2E84F038DD> |
1935 <001C60D8A8C9B7AC354D1A53D29D2CEE869DB74B55DFAB08583084F2F0
8FE51A9E911C82522537250CFC763D9EAE0A03ACEF0D7D5E573701B78D3CD9A4
3A9C011954C17F1BDA5412681CC7EF1659F24D320E0543A07AD1DDBAC2722F5B
803FF57A64DC2892D81EB1792439A154693575> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-59.5313 -17.8934 mo
(\007\212\007%\007\211)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 9 GetGlyphDirectory
11260 <0C1C60D8A8C9B5EE3176C0B3AC8088B90B0FC10904EE69FFD5E3E3E22
B72F45EAA834DBA244F3F8E5147AAFC5A8E022825AF8AFF55C628BF56049C549
F96A2E46C13EB324794A8A4A2591173CC729D8A82F0501D28A2B70A2E48D5822
3B9EF483C2DDD77ADC5CC763B0FA61B2C73E66DCEE685C66EFF05D1242C9F750
CCDFE0B74C77E43ACD33C10A81D1244AF9D4AFFF65C3B6BCC26ACEC06D028F4C
AF1946A10206B7DFC5EDAD538ECF0137447AEE877724447FB7FA4567B06099D9
AD46D7FDFE563452FCD2EDD5FAE695E9BEDB0DCD5080B4E7E7F1C88246170E3F
354F4EA30FEAB737DC1056A44BD913626B4E2BF6A76F810453995E50997B3119
D654AF62A81924FC2CC798C95D751CEE7E4D0B2E2CB4781540267F8A35A823DA
C7F3EBAE4D4B796CAE51A4DD10FE5C3DB59982CC600E28A8691E59E865B8114D
3BCF8C59300AA541D5886D299CD70CF745E8D20F0233B33D0FB055DF18972285
48A4146151E891F82A350543A8A0E62901106A17C0C63DB641FE98F32FB95ABC
08096D6> |
45588 <0C1C60D8A8C9B5EE31524457BAAF9E1B39A61FE19268B379946193494
75DDE62199D74C7409BC6100FC6C92D1B2A694D22ACB06EB130C0139C6AB3C3B
4DAC96DEF8C196DD4FC600A79D6BE167FF6140D841B52B591A0135B98890E17B
707C5A38A7D084227DAF7CAFE9F58F95081BDE0213F7A0C5F81C508F62769816
66C346A01FBF38CC973F26EBFE0A599CB20092F4172A740D6AA66275EAE9FF86
7CB78D797895446464E2212BBAFED47894B8891796C96A547236914736494618
237EA9D8FB93B2C547686E309F5AF640914780E59B4301558A17EE86459FD46F
4E3CC544F2328DCB009388C609AF884FBFFFD294121169A126AD920971E99039
44DAB0A1D32E83A73361E0F4079567F9F195FE33A2D38400718AE73B670DFCE9
EB988C66E7657A237D400BB1DF93AEF79BA838B0857EF5420F09D52F2CEF4DE7
128B39E5B24D7DCB473C8A8C5DC4ADE84652331134110DE79E44C53647B81849
C0B59883316B8C210EE12799A5E6BEDB64C293EA9D9ABBF072AD5B8A6A4A4671
ACA7CEE9CC5FF9A4BF401A0A0AEBE9E164E72D5485BF0DB454663DB7E672F32B
337407B962C5948D292EB2B542E9BC266FED64787C35F75D967B7BA9FFCE0C7F
D4799AEB3689DDD3667B27810DF66FE5BC29BD7C206D186A867AF86849254745
E780BC3CA725943F58AAA70> |
29592 <0C1C60D8A8C9B5EE31764D153FAD2878C9ACF074AF857CCA4A39DA897
84EE25E72849747AE9BD9D2C8CECCCB76D6BFD072333170438540D7D68099133
A9B2FFC88C42C090835450CDFCC31A97D82217B3BD83AF57EF37AB396CE0ADBC
17453DC4AAD1B2E37A993D92CEE68D2AC2201FB1E841E4AF889275AC6BBF3FA9
60096B47976B18EEF1483B00D5A2D334A5C7AB53AE03B95D6D3E2563A6A172B0
0270FE30563CA8244AB8E4E4DB139E02253A08106D9AAD973DA9A6F8B9F9F5DB
1D72CF20215B381703F4CC2C5C25076C6C0D0153DB809DA40F812901B6D50F60
F54D6884F2842DA00FE37626754B28C5532BF67B1ECA079A810ED0BB911603AA
93E54B7EBFB4F692326487BE32DFDFB39609333DDE2D71B3B04E9FC576D45913
11321706F166E1E81AAF80DF6C7269E3EED7D2BF9309170A1437B84C1262C38C
620E78CC009208F9D8FF3904B245F4CDE5DF4A554F7626351E9498878FE80D1D
F5801B4473A2B5DF4F6A0F859904D55E8B7B2E7F5CFCDA7EC8B> |
32523 <0C1C60D8A8C9B5EE3177F0DC6D305BE9934EF90C05D8355D23CC5C9EF
73F014D55060FC162148A6843BCEDB0FEB8CDB39FF2E06850F3EE5B6064F7310
38422478B8191E3BB9A144ABD9776A71F409BEDE0244B47C3E6EBD75FA6444FE
9FAD8D2AE67071CA8F663FDA20EA6ABE6F47427E475C2A50FA6DF24EFEDB1263
32D9844BA2BE7F32CAEEBF153B08694229BFCD28E62CC6098B35D9C80D4516C4
EBBCEBAA0BD206F6B7CEA9BD36574BFE453CC6DF6DF03888BA035E4BE880A0DE
09AD4219F24748F15ED127DA2632C12E38F734BA9B024771C6F66376FB4C6965
C6AB09AD0B131037B0DEDB44BD71A7F5C91FDD44628304A4B686B30A38599C4D
5486895008306B54B7786A0C6323498BC61F23A918B4FA7AB5C12E554B78DDFE
CC6360753252B69F6ECDFC80D1EEA0A3F2A7FD413AA6725D3256937F611D3AB2
D1F012195AF97E8A5E560F66A514537A28A3291189D70B62066C940E16847E57
5FE8811ED32A6CC85EFCA1A1CE727505E92E0AADB1C59821E8FF8800FA93FDA9
0FB5871FDD5D341E36E95> |
32689 <0C1C60D8A8C9B5EE3177B67F587AE0640461F41DB2735CC2F4BBF0069
12F104283298C8B15CA6FBBE0DCE2398989B769AEFD0E690E01FE35FFEE76A2B
923F42585589E2CF18CC91A5994FFF3CA33C4AADE7FF9977B16A02B52E1DDB29
A2EC4E489806042BF778411F9A45CA0888159D62201EC9EA702348EC58308EF4
6F77FB35904F238A32D25220937EA6A1F6DDB9EE5355FC0236E1AF0C4DD14F12
92E2D4E4DFB76D896317676D5C4B81211B429FA68A8E2205FE4E7ABA59D9E510
8B9479F313C12785CB565E1CC66ABB87A4C5224AD9FB8BA23524498C40D9507B
4E7A4D9852F49086818671B4A487522E58C36B9D4FAF127E26B2CCD66419EB17
B98777B87E4998C5A00F5790296EDAFD9BECCA3160FB325E52706DB3E3902CAF
3B4698AA537D9982AB53D8C1AFD9A7641B20DB0B6A5D55E3B4A6BB2C9E1B89E6
B21BA09EE3063BDECAC6460EAF662897AC45D7B31F6233F538288B6C379116CF
37F93277FCCDE5726059B> |
32536 <0C1C60D8A8C9B5EE31763F88285A0AC57A2188CF39E7CB6F0F89CE00E
0B38A3EDB16704D07FFF66C1DA328712E43E043C7B6EBCA6DAE31F6ABB41ECC9
BDB22D4421EC90EEA06E8AD06615C9B6EE82093A8C4BCE5399A48FCB0C3F0D82
B5EAC12E2CCA85A8600C0E07DC6A51D04BBB7F6F17117256385EA3AB45E99844
7996F28783CC11F6DD2304783A9AA931F76D9EE5E7C6835D177A7FEB2348A948
DD55F229F185C3855E271AAE1C0D8F2364D52D3DA78349EBEA81D9FE97F5EEA4
CEB5B69AD03FAAAA7A0B7B652AFD7C4F1DAC8FF215096B0006665A37DD9DF738
D8AF3F833AAFC96B640E9D03F8F34354996C3508FEBDBAA4308533F3649A54E1
CF3C5C3002BCD271D265C5271D72CFB8F6374B0CE60B9FF92116409C7FFBDCD0
EED345E2C40F5B5EC536AA71475A73415824D613113684AC44DF46CC08CFBBD6
B042EA078E6ECFF4DFC9795F82971CC98043F524DF2DECC507CA8CCEC36FEBDA
EEBE65A98564E2A5EF27E405E519A8443FF208B79DACA5E5AC40DA9D57354549
3B0344D17F757C79DAA5D0FC9EBE5E36C0F99F6F08527E01D12C217A9E666817
9C181> |
17169 <0C1C60D8A8C9B5EE31764D3934C5265999C438C01422F644829CDA3B3
09774B23994051064B36DD95770D81A262444B59E215AD1A0C5C44223895062D
886C46A62610885A265551435030E3E6BE25E78F5564C543366D53102EBD49CE
D106C7A1C789FCF0CCB91C9EB5BCF988FFBE7AC89B8B19BBDAB4D24F3D6D0612
29ADC41254EEA1E9DC86932BF6C2E49467ACFEE6C3F050B0A331821292508DE0
82C4133AB7D021D84FCDAADB59330FBD36305C6D809A023B1DE3E63710341593
9B43C6031BBA07690752284787C44FB69C3FD5536D7B434731318> |
21139 <0C1C60D8A8C9B5EE3176FA3F3A05DFF001B79BB7DCC8800FACC3634A8
D7F57CA5DCEBDFBDD5A2F98F4067FAD89DDB77EFFF41FBB51D4CD11331B14337
10EF6AB834F1433CF57190EA9013095F66D141F559FC5325A075B293BB4BD7C3
78C736CB4AA49EC256FD75D2A102E5D4493365FB27971D91406203DC3F3B9113
B8F215B1ABFB90463BF68F87F934A3116BA702FD4D9271CB5E898F7E4DA586AA
4C94CFC7D297518E73FA263C40DACC05C7225DABB9610D807EE3059AE1DC3F2F
B57CCCE7B87C870C6EBD2AEFCA1C625179A2D807A4527AA95F398DAAA6502809
2BB689A6312A9802C0538> |
20669 <0C1C60D8A8C9B5EE31762582AD99FD9F6F9DD49DE1CD66CDE338BFA57
C0966FF1FE0D754CD0A7C0920398FA9A19AAF0CDFADCD2E7BDAC12DF5A8E197D
9A6C7A654F6F1C6DD60D6F903D486F905423E188CE679929E2D3502DA3D9330A
B3B40EFF62E88B0DCA584ABF03B92845C6D3D6727E20BD1384063495A7D399FC
2F9> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
-39.4913 -17.8934 mo
(+\374\262\024s\230\177\013\177\261\177\030)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
111.322 -17.8934 mo
(\007\210\007\206\007\210\007\207)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
133.39 -17.8934 mo
(C\021)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
145.317 -17.8934 mo
(\007\213)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
152.59 -17.8934 mo
(R\223)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
164.517 -17.8934 mo
(\007\207\007\216)
[4.93144 0 ]xsh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
176.722 -17.8934 mo
(P\275)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
347.299 -17.8934 mo
(\007\216\007\217)
[4.93143 0 ]xsh
.3985 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-59.5313 -14.1074 mo
357.162 -14.1074 li
@
gsave
6.23142 113.548 mo
203.599 113.548 li
203.599 3.54366 li
6.23142 3.54366 li
6.23142 113.548 li
clp
34.2686 41.432 mo
31.2749 41.432 28.8481 39.0052 28.8481 36.0116 cv
28.8481 33.0178 31.2749 30.5911 34.2686 30.5911 cv
37.2623 30.5911 39.6891 33.0178 39.6891 36.0116 cv
39.6891 39.0052 37.2623 41.432 34.2686 41.432 cv
0 .100392 .100392 0 cmyk
f
.289084 lw
39.6891 36.0116 mo
39.6891 33.0179 37.2622 30.5911 34.2686 30.5911 cv
31.2749 30.5911 28.8481 33.0179 28.8481 36.0116 cv
28.8481 39.0052 31.2749 41.432 34.2686 41.432 cv
37.2622 41.432 39.6891 39.0052 39.6891 36.0116 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/YEKBAA+STIXTwoMath-Identity-H 2 GetGlyphDirectory
3354 <001C60D8A8C9B7ECD93714DF512631CC791BE1FCF2FBA2BF1C505A49C6
4928368ADABA20193A56B83D42F8A930E67AD39469820DE5132FC588406C1352
780AF2E68A040D7AF42D9DF90C1177553371B3934E257FBE434FF4FC254F8E37
F8867571FC5B0C4023A0836BEABE9B790F9BD445B8944BA2337005757B64C1AC
67CAD9124FA83AAB2DD2190FD8FECE53AB1B53EDA943DBFA9BB09952DA7F0804
778F15112C7486D8928AA1A6B23D870867929863F4E7C124C6D846D535B2709F
A4E48355E255F6515B96E3F2B92061B1282BBF220FD7> |
4274 <001C60D8A8C9B7BEB13D3AD119696FB355784086E9BA2D3D596EF297CB
3AA1F087A53704C83FFECA0D0B4A9054B0EEBBFE2B8B866FBDD3F85DC0CAD47F
B655D8B269FEBE5B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDL+STIXTwoMath-Identity-H [7.22717 0 0 -7.22717 0 0 ]msf
8.91844 36.9838 mo
(\015\032)sh
TVZNDL+STIXTwoMath-Identity-H [5.059 0 0 -5.059 0 0 ]msf
12.9584 38.5014 mo
(\020\262)sh
.578175 lw
25.726 36.0116 mo
19.1708 36.0116 li
0 0 0 .9 cmyk
@
27.9808 36.0115 mo
27.0413 35.8236 25.3502 35.4478 24.2228 34.6023 cv
25.1623 35.6357 25.1623 36.3874 24.2228 37.4208 cv
25.3502 36.5753 27.0413 36.1994 27.9808 36.0115 cv
cp
f
34.2686 61.9957 mo
31.2749 61.9957 28.8481 59.5688 28.8481 56.5752 cv
28.8481 53.5814 31.2749 51.1547 34.2686 51.1547 cv
37.2623 51.1547 39.6891 53.5814 39.6891 56.5752 cv
39.6891 59.5688 37.2623 61.9957 34.2686 61.9957 cv
0 .100392 .100392 0 cmyk
f
.289084 lw
39.6891 56.5752 mo
39.6891 53.5815 37.2622 51.1547 34.2686 51.1547 cv
31.2749 51.1547 28.8481 53.5815 28.8481 56.5752 cv
28.8481 59.5689 31.2749 61.9957 34.2686 61.9957 cv
37.2622 61.9957 39.6891 59.5689 39.6891 56.5752 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/YEKBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4275 <001C60D8A8C9B78FDBB09DA2F57E2BFD1E2107DBF1F2E518C96C291974
E0BD03EC7584BE3B4419B127590D39171B01B6FFB5B7355D148807B55313F5AF
B524F040E9E0F688CBE82FF2609C1E4B2EADB4738B6E0B7F0D657DC19B8ECFD9
A97366367BF0E1AE59E7ACDFFE4FE9936DA65B8343> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDL+STIXTwoMath-Identity-H [7.22717 0 0 -7.22717 0 0 ]msf
8.84227 57.5468 mo
(\015\032)sh
TVZNDL+STIXTwoMath-Identity-H [5.059 0 0 -5.059 0 0 ]msf
12.8822 59.0644 mo
(\020\263)sh
.578175 lw
25.726 56.5752 mo
19.1708 56.5752 li
0 0 0 .9 cmyk
@
27.9808 56.5752 mo
27.0413 56.3873 25.3502 56.0115 24.2228 55.1659 cv
25.1623 56.1994 25.1623 56.951 24.2228 57.9845 cv
25.3502 57.1389 27.0413 56.7631 27.9808 56.5752 cv
cp
f
34.2686 82.5593 mo
31.2749 82.5593 28.8481 80.1324 28.8481 77.1388 cv
28.8481 74.1452 31.2749 71.7183 34.2686 71.7183 cv
37.2623 71.7183 39.6891 74.1452 39.6891 77.1388 cv
39.6891 80.1324 37.2623 82.5593 34.2686 82.5593 cv
0 .100392 .100392 0 cmyk
f
.289084 lw
39.6891 77.1388 mo
39.6891 74.1451 37.2622 71.7183 34.2686 71.7183 cv
31.2749 71.7183 28.8481 74.1451 28.8481 77.1388 cv
28.8481 80.1325 31.2749 82.5593 34.2686 82.5593 cv
37.2622 82.5593 39.6891 80.1325 39.6891 77.1388 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/YEKBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4276 <001C60D8A8C9B78FDB45FA1747662A6A462A2E185225A20B30F87C3857
6DAFF2A2FB1FBFC61E3B4175909C0790B69F42BC69132A4CDA7A306A34ACC8CD
D7D54324BEC44F642C3D53492BA3D0A80D2CEFDCE5C4225594BCEF802FFE9855
F810EBCF88C898E3F4FA615364E6FB2EDE95B409B973B4984F84C88C593FBD47
0C0114040879F2E762078729A5CE7B1C0D8FC94E1B1FB5D6C887BB0F954472DD
B8F3BF0B4D8291A7AF8644FACBAC1E7CBB> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDL+STIXTwoMath-Identity-H [7.22717 0 0 -7.22717 0 0 ]msf
8.84227 78.0779 mo
(\015\032)sh
TVZNDL+STIXTwoMath-Identity-H [5.059 0 0 -5.059 0 0 ]msf
12.8822 79.5955 mo
(\020\264)sh
.578175 lw
25.726 77.1388 mo
19.1708 77.1388 li
0 0 0 .9 cmyk
@
27.9808 77.1388 mo
27.0413 76.9509 25.3502 76.5751 24.2228 75.7295 cv
25.1623 76.763 25.1623 77.5146 24.2228 78.5481 cv
25.3502 77.7025 27.0413 77.3267 27.9808 77.1388 cv
cp
f
34.2686 103.123 mo
31.2749 103.123 28.8481 100.696 28.8481 97.7024 cv
28.8481 94.7088 31.2749 92.2819 34.2686 92.2819 cv
37.2623 92.2819 39.6891 94.7088 39.6891 97.7024 cv
39.6891 100.696 37.2623 103.123 34.2686 103.123 cv
0 .100392 .100392 0 cmyk
f
.289084 lw
39.6891 97.7024 mo
39.6891 94.7087 37.2622 92.282 34.2686 92.282 cv
31.2749 92.282 28.8481 94.7087 28.8481 97.7024 cv
28.8481 100.696 31.2749 103.123 34.2686 103.123 cv
37.2622 103.123 39.6891 100.696 39.6891 97.7024 cv
cp
.16 .95 .95 0 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/YEKBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4277 <001C60D8A8C9B7E7C1F8C84132C9A6A8A83AAC9CE17C9934D0EEAF43C1
C75D27D2EA6092B5AC1A093A2C7A0CAC14C8D231347BABB67A4D3B111EC6381F
570841E9C84D18A29D6CA2660CB999EA1D89> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDL+STIXTwoMath-Identity-H [7.22717 0 0 -7.22717 0 0 ]msf
8.63988 98.6743 mo
(\015\032)sh
TVZNDL+STIXTwoMath-Identity-H [5.059 0 0 -5.059 0 0 ]msf
12.6798 100.192 mo
(\020\265)sh
.578175 lw
25.726 97.7024 mo
19.1708 97.7024 li
0 0 0 .9 cmyk
@
27.9808 97.7024 mo
27.0413 97.5145 25.3502 97.1387 24.2228 96.2931 cv
25.1623 97.3266 25.1623 98.0782 24.2228 99.1117 cv
25.3502 98.2661 27.0413 97.8903 27.9808 97.7024 cv
cp
f
.289084 lw
91.0981 25.7297 mo
91.0981 22.7361 88.6713 20.3093 85.6776 20.3093 cv
82.684 20.3093 80.2572 22.7361 80.2572 25.7297 cv
80.2572 28.7234 82.684 31.1502 85.6776 31.1502 cv
88.6713 31.1502 91.0981 28.7234 91.0981 25.7297 cv
cp
.16 .95 .95 0 cmyk
@
91.0981 46.2934 mo
91.0981 43.2997 88.6713 40.8729 85.6776 40.8729 cv
82.684 40.8729 80.2572 43.2997 80.2572 46.2934 cv
80.2572 49.2871 82.684 51.7139 85.6776 51.7139 cv
88.6713 51.7139 91.0981 49.2871 91.0981 46.2934 cv
cp
@
91.0981 66.857 mo
91.0981 63.8633 88.6713 61.4365 85.6776 61.4365 cv
82.684 61.4365 80.2572 63.8633 80.2572 66.857 cv
80.2572 69.8507 82.684 72.2775 85.6776 72.2775 cv
88.6713 72.2775 91.0981 69.8507 91.0981 66.857 cv
cp
@
91.0981 87.4207 mo
91.0981 84.427 88.6713 82.0002 85.6776 82.0002 cv
82.684 82.0002 80.2572 84.427 80.2572 87.4207 cv
80.2572 90.4143 82.684 92.8411 85.6776 92.8411 cv
88.6713 92.8411 91.0981 90.4143 91.0981 87.4207 cv
cp
@
91.0981 107.984 mo
91.0981 104.991 88.6713 102.564 85.6776 102.564 cv
82.684 102.564 80.2572 104.991 80.2572 107.984 cv
80.2572 110.978 82.684 113.405 85.6776 113.405 cv
88.6713 113.405 91.0981 110.978 91.0981 107.984 cv
cp
@
142.507 46.2934 mo
142.507 43.2997 140.08 40.8729 137.087 40.8729 cv
134.093 40.8729 131.666 43.2997 131.666 46.2934 cv
131.666 49.287 134.093 51.7138 137.087 51.7138 cv
140.08 51.7138 142.507 49.287 142.507 46.2934 cv
cp
@
142.507 66.857 mo
142.507 63.8633 140.08 61.4365 137.087 61.4365 cv
134.093 61.4365 131.666 63.8633 131.666 66.857 cv
131.666 69.8507 134.093 72.2775 137.087 72.2775 cv
140.08 72.2775 142.507 69.8507 142.507 66.857 cv
cp
@
142.507 87.4206 mo
142.507 84.427 140.08 82.0002 137.087 82.0002 cv
134.093 82.0002 131.666 84.427 131.666 87.4206 cv
131.666 90.4143 134.093 92.8411 137.087 92.8411 cv
140.08 92.8411 142.507 90.4143 142.507 87.4206 cv
cp
@
179.062 72.2774 mo
176.069 72.2774 173.642 69.8507 173.642 66.8569 cv
173.642 63.8633 176.069 61.4366 179.062 61.4366 cv
182.056 61.4366 184.483 63.8633 184.483 66.8569 cv
184.483 69.8507 182.056 72.2774 179.062 72.2774 cv
.100392 .0511803 0 0 cmyk
f
184.483 66.857 mo
184.483 63.8633 182.056 61.4365 179.062 61.4365 cv
176.069 61.4365 173.642 63.8633 173.642 66.857 cv
173.642 69.8507 176.069 72.2775 179.062 72.2775 cv
182.056 72.2775 184.483 69.8507 184.483 66.857 cv
cp
.94 .3 0 .16 cmyk
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: YEKBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/YEKBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
3355 <001C60D8A8C9B7BDE39634C68951D838895FCC3A1C4989C0C90B9EC3B2
DC5957F75502E6CC8CAFD1ECFA64859446F83853DFC55AEF4C986D0B09F2D28C
85BDED0DB2CA3D022C3C4B867CEFD1D0A5C5CA02E80BE6539A54A10F251C9CCD
6C05FF045AB64B96C9DFCAA9124649F8FE012E4B80221DF39340F868F95672AE
ED10D21EBF495B4A726D8578521AC03D9D5E863102C10FCCC6CCBDC41770B766
33CD0204> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDL+STIXTwoMath-Identity-H [7.22717 0 0 -7.22717 0 0 ]msf
197.436 67.8037 mo
(\015\033)sh
.578175 lw
185.35 66.857 mo
191.905 66.857 li
0 0 0 .9 cmyk
@
194.16 66.857 mo
193.22 66.6691 191.529 66.2933 190.402 65.4477 cv
191.341 66.4812 191.341 67.2328 190.402 68.2663 cv
191.529 67.4207 193.22 67.0449 194.16 66.857 cv
cp
f
40.434 34.7785 mo
77.3013 27.405 li
@
79.5123 26.9628 mo
78.5542 26.9628 76.8222 26.9259 75.5509 26.3179 cv
76.6748 27.147 76.8222 27.884 76.1036 29.0816 cv
77.0433 28.0314 78.6279 27.3313 79.5123 26.9628 cv
cp
f
40.434 37.2446 mo
77.3013 44.6181 li
@
79.5123 45.0603 mo
78.6279 44.6918 77.0433 43.9917 76.1036 42.9415 cv
76.8222 44.1391 76.6748 44.8761 75.5509 45.7052 cv
76.8222 45.0972 78.5542 45.0603 79.5123 45.0603 cv
cp
f
39.6601 39.2466 mo
78.3527 62.4619 li
@
80.2861 63.622 mo
79.5772 62.9775 78.3204 61.7852 77.7887 60.4801 cv
78.0627 61.8497 77.676 62.4942 76.3386 62.897 cv
77.7404 62.7519 79.3839 63.2998 80.2861 63.622 cv
cp
f
38.7147 40.4577 mo
79.6371 81.3801 li
@
81.2315 82.9745 mo
80.7001 82.1773 79.77 80.7158 79.5707 79.3207 cv
79.5043 80.7158 78.9728 81.2472 77.5777 81.3137 cv
78.9728 81.513 80.4343 82.443 81.2315 82.9745 cv
cp
f
37.923 41.1278 mo
80.7127 101.033 li
@
82.0233 102.868 mo
81.6301 101.994 80.953 100.4 80.9857 98.9911 cv
80.6909 100.356 80.0793 100.793 78.6924 100.629 cv
80.0356 101.055 81.3243 102.213 82.0233 102.868 cv
cp
f
39.6601 53.3402 mo
78.3527 30.1247 li
@
80.2861 28.9647 mo
79.3839 29.2869 77.7404 29.8347 76.3386 29.6897 cv
77.676 30.0925 78.0627 30.737 77.7887 32.1065 cv
78.3204 30.8014 79.5772 29.6091 80.2861 28.9647 cv
cp
f
40.434 55.3421 mo
77.3013 47.9686 li
@
79.5123 47.5264 mo
78.5542 47.5264 76.8222 47.4896 75.5509 46.8815 cv
76.6748 47.7107 76.8222 48.4477 76.1036 49.6453 cv
77.0433 48.5951 78.6279 47.8949 79.5123 47.5264 cv
cp
f
40.434 57.8082 mo
77.3013 65.1818 li
@
79.5123 65.6239 mo
78.6279 65.2554 77.0433 64.5553 76.1036 63.5051 cv
76.8222 64.7027 76.6748 65.4397 75.5509 66.2689 cv
76.8222 65.6608 78.5542 65.6239 79.5123 65.6239 cv
cp
f
39.6601 59.8102 mo
78.3527 83.0256 li
@
80.2861 84.1856 mo
79.5772 83.5412 78.3204 82.3489 77.7887 81.0438 cv
78.0627 82.4133 77.676 83.0578 76.3386 83.4606 cv
77.7404 83.3156 79.3839 83.8634 80.2861 84.1856 cv
cp
f
38.7147 61.0213 mo
79.6371 101.944 li
@
81.2315 103.538 mo
80.7001 102.741 79.77 101.279 79.5707 99.8843 cv
79.5043 101.279 78.9728 101.811 77.5777 101.877 cv
78.9728 102.077 80.4343 103.007 81.2315 103.538 cv
cp
f
38.7147 72.6927 mo
79.6371 31.7703 li
@
81.2315 30.1759 mo
80.4343 30.7073 78.9728 31.6374 77.5777 31.8367 cv
78.9728 31.9031 79.5043 32.4346 79.5707 33.8297 cv
79.77 32.4346 80.7001 30.9731 81.2315 30.1759 cv
cp
f
39.6601 73.9038 mo
78.3527 50.6884 li
@
80.2861 49.5283 mo
79.3839 49.8505 77.7404 50.3984 76.3386 50.2533 cv
77.676 50.6561 78.0627 51.3006 77.7887 52.6702 cv
78.3204 51.3651 79.5772 50.1728 80.2861 49.5283 cv
cp
f
40.434 75.9057 mo
77.3013 68.5323 li
@
79.5123 68.0901 mo
78.5542 68.0901 76.8222 68.0532 75.5509 67.4452 cv
76.6748 68.2743 76.8222 69.0113 76.1036 70.2089 cv
77.0433 69.1587 78.6279 68.4586 79.5123 68.0901 cv
cp
f
40.434 78.3719 mo
77.3013 85.7454 li
@
79.5123 86.1876 mo
78.6279 85.8191 77.0433 85.119 76.1036 84.0687 cv
76.8222 85.2664 76.6748 86.0034 75.5509 86.8325 cv
76.8222 86.2244 78.5542 86.1876 79.5123 86.1876 cv
cp
f
39.6601 80.3738 mo
78.3527 103.589 li
@
80.2861 104.749 mo
79.5772 104.105 78.3204 102.912 77.7887 101.607 cv
78.0627 102.977 77.676 103.621 76.3386 104.024 cv
77.7404 103.879 79.3839 104.427 80.2861 104.749 cv
cp
f
37.923 92.5862 mo
80.7127 32.6807 li
@
82.0233 30.846 mo
81.3243 31.5013 80.0356 32.6589 78.6924 33.0848 cv
80.0793 32.921 80.6909 33.3578 80.9857 34.723 cv
80.953 33.3141 81.6301 31.7197 82.0233 30.846 cv
cp
f
38.7147 93.2563 mo
79.6371 52.3339 li
@
81.2315 50.7395 mo
80.4343 51.271 78.9728 52.201 77.5777 52.4003 cv
78.9728 52.4668 79.5043 52.9982 79.5707 54.3934 cv
79.77 52.9982 80.7001 51.5367 81.2315 50.7395 cv
cp
f
39.6601 94.4674 mo
78.3527 71.252 li
@
80.2861 70.0919 mo
79.3839 70.4142 77.7404 70.962 76.3386 70.817 cv
77.676 71.2198 78.0627 71.8643 77.7887 73.2338 cv
78.3204 71.9287 79.5772 70.7364 80.2861 70.0919 cv
cp
f
40.434 96.4694 mo
77.3013 89.0959 li
@
79.5123 88.6537 mo
78.5542 88.6537 76.8222 88.6169 75.5509 88.0088 cv
76.6748 88.8379 76.8222 89.5749 76.1036 90.7726 cv
77.0433 89.7223 78.6279 89.0222 79.5123 88.6537 cv
cp
f
40.434 98.9355 mo
77.3013 106.309 li
@
79.5123 106.751 mo
78.6279 106.383 77.0433 105.683 76.1036 104.632 cv
76.8222 105.83 76.6748 106.567 75.5509 107.396 cv
76.8222 106.788 78.5542 106.751 79.5123 106.751 cv
cp
f
91.5154 28.0648 mo
129.155 43.1209 li
@
131.249 43.9583 mo
130.446 43.4349 129.016 42.458 128.283 41.2542 cv
128.772 42.5627 128.493 43.2605 127.236 43.8711 cv
128.597 43.5047 130.307 43.7838 131.249 43.9583 cv
cp
f
90.5873 29.6575 mo
130.417 61.5208 li
@
132.177 62.9293 mo
131.561 62.1957 130.475 60.8458 130.123 59.4813 cv
130.211 60.8752 129.742 61.4621 128.362 61.6821 cv
129.771 61.7262 131.326 62.4891 132.177 62.9293 cv
cp
f
89.7028 30.5599 mo
131.618 80.8583 li
@
133.062 82.5905 mo
132.605 81.7484 131.811 80.2088 131.738 78.8014 cv
131.546 80.1847 130.969 80.6658 129.573 80.6057 cv
130.945 80.9305 132.316 81.989 133.062 82.5905 cv
cp
f
91.9654 46.2934 mo
128.544 46.2934 li
@
130.799 46.2934 mo
129.859 46.1055 128.168 45.7297 127.041 44.8841 cv
127.98 45.9176 127.98 46.6692 127.041 47.7027 cv
128.168 46.8571 129.859 46.4813 130.799 46.2934 cv
cp
f
91.5154 48.6284 mo
129.155 63.6846 li
@
131.249 64.5219 mo
130.446 63.9986 129.016 63.0216 128.283 61.8179 cv
128.772 63.1263 128.493 63.8241 127.236 64.4347 cv
128.597 64.0684 130.307 64.3475 131.249 64.5219 cv
cp
f
90.5873 50.2211 mo
130.417 82.0844 li
@
132.177 83.4929 mo
131.561 82.7593 130.475 81.4095 130.123 80.045 cv
130.211 81.4388 129.742 82.0257 128.362 82.2458 cv
129.771 82.2898 131.326 83.0527 132.177 83.4929 cv
cp
f
91.5154 64.522 mo
129.155 49.4658 li
@
131.249 48.6284 mo
130.307 48.8029 128.597 49.082 127.236 48.7156 cv
128.493 49.3262 128.772 50.0241 128.283 51.3325 cv
129.016 50.1287 130.446 49.1518 131.249 48.6284 cv
cp
f
91.9654 66.857 mo
128.544 66.857 li
@
130.799 66.857 mo
129.859 66.6691 128.168 66.2933 127.041 65.4477 cv
127.98 66.4812 127.98 67.2328 127.041 68.2663 cv
128.168 67.4207 129.859 67.0449 130.799 66.857 cv
cp
f
91.5154 69.1921 mo
129.155 84.2482 li
@
131.249 85.0856 mo
130.446 84.5622 129.016 83.5853 128.283 82.3815 cv
128.772 83.6899 128.493 84.3878 127.236 84.9984 cv
128.597 84.632 130.307 84.9111 131.249 85.0856 cv
cp
f
90.5873 83.4929 mo
130.417 51.6296 li
@
132.177 50.2211 mo
131.326 50.6613 129.771 51.4242 128.362 51.4682 cv
129.742 51.6883 130.211 52.2752 130.123 53.669 cv
130.475 52.3045 131.561 50.9547 132.177 50.2211 cv
cp
f
91.5154 85.0856 mo
129.155 70.0294 li
@
131.249 69.1921 mo
130.307 69.3665 128.597 69.6456 127.236 69.2793 cv
128.493 69.8899 128.772 70.5877 128.283 71.8961 cv
129.016 70.6924 130.446 69.7154 131.249 69.1921 cv
cp
f
91.9654 87.4207 mo
128.544 87.4206 li
@
130.799 87.4206 mo
129.859 87.2327 128.168 86.8569 127.041 86.0114 cv
127.98 87.0448 127.98 87.7964 127.041 88.8299 cv
128.168 87.9844 129.859 87.6085 130.799 87.4206 cv
cp
f
89.7028 103.154 mo
131.618 52.8557 li
@
133.062 51.1235 mo
132.316 51.725 130.945 52.7835 129.573 53.1083 cv
130.969 53.0481 131.546 53.5293 131.738 54.9126 cv
131.811 53.5052 132.605 51.9655 133.062 51.1235 cv
cp
f
90.5873 104.057 mo
130.417 72.1933 li
@
132.177 70.7847 mo
131.326 71.2249 129.771 71.9879 128.362 72.0319 cv
129.742 72.252 130.211 72.8388 130.123 74.2327 cv
130.475 72.8682 131.561 71.5183 132.177 70.7847 cv
cp
f
91.5154 105.649 mo
129.155 90.5931 li
@
131.249 89.7557 mo
130.307 89.9302 128.597 90.2093 127.236 89.8429 cv
128.493 90.4535 128.772 91.1514 128.283 92.4598 cv
129.016 91.256 130.446 90.2791 131.249 89.7557 cv
cp
f
142.733 49.0594 mo
171.391 63.099 li
@
173.416 64.091 mo
172.655 63.5089 171.302 62.4275 170.661 61.1722 cv
171.05 62.5136 170.719 63.1885 169.421 63.7033 cv
170.806 63.4399 172.49 63.8464 173.416 64.091 cv
cp
f
143.374 66.857 mo
170.52 66.857 li
@
172.774 66.857 mo
171.835 66.6691 170.144 66.2933 169.016 65.4477 cv
169.956 66.4812 169.956 67.2328 169.016 68.2663 cv
170.144 67.4207 171.835 67.0449 172.774 66.857 cv
cp
f
142.733 84.6546 mo
171.391 70.615 li
@
173.416 69.623 mo
172.49 69.8676 170.806 70.2741 169.421 70.0107 cv
170.719 70.5255 171.05 71.2004 170.661 72.5418 cv
171.302 71.2865 172.655 70.2051 173.416 69.623 cv
cp
f
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: TVZNDM+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDM+FZSSJW--GB1-0-GBK-EUC-H 6 GetGlyphDirectory
6957 <001C60D8A8C9B5EE310DDB6FBDDEC501CCB4DD07FDBCF024F0F88C488F
4390292404913D0CF55DC9287F1EBEA273B227C8FF38802CBB65E8AF249D33E6
9D9F6A1BB44A7D46F048086A11EA89261D46FAB78A7B79130B42494B39A686CA
72014EC5210E639396987970DF1FD92A9FEE161F00FB7B06E81160CCF3D0D94D
FA1F9F2B6ECDD358113A97EC6B5639330D4245A7D6AA35E9E752F700B171A899
1385B68D3646CFD609ACCE4E561F6E4AC91FE4CE664335A70974E1B11A9B820B
5AC6CBD3744F70A40EA165DFF2C22B0EA7D8991CB315AD9F9E40920216397A86
3E9AC3A29C9CD10ECA29719FDAA249C4375A213CFB12FBBEA2733A7DFCF626F9
7253F93DDEBB836941CB2F5BED638C7CB2FB09682DA5BCC41890BE9A468BE419
907095C70C31A91F3709C1A35C5AA5DB2E62ECE978493A1E1D395BC414451BD5
423A7E6FD27427A7E881B875743508115E7F7DADEB87636CE0019044BCC89A81
5B86637261376B9859AD8AD64E75AF26D2546614ECC359ED0B70FFC6AA8D15E6
9B3E5766D0DB2398D5D298D5036382477B429282F4473973848F28304C3FA7FF
6AA53B4D87BBE87F40EB671DB0A25AAF5ECC2F6A1424F3893EF8A1CA91DDAA88
E8743458401556507B28BB35A6CE456311F42F41148B47C60C8779A20A8EF5FF
1B8987990A54B2826CE7D86CC5249B1BFF59FA6DD1A8D49EF587B793C392C8BD
36E79E82A3CBB38CDA2D27B3903439AF67CCF045A62815AF4D2F04BD94E04765
3F9AAAE8EC86D55DACC1B2103E7247D13B3FE2B935> |
5681 <001C60D8A8C9B5EE310DFCCA57571C282BFA3C559332FA3B4CE25686CE
1165FE704EE4AB17EB2F3682BB64A7CA055EF670C3EF8E2D087274A5B7CEF433
F4A66873B60935ECACC3CC90B39937919C131F508D9D79537BCC7A47379C0419
A1A3CD2601CF29447A31309B3038374CDA88C955856A1B3E9F380877B185D804
41D3DB4BBB0FD97B69927355060FEB7D5903BD72A220A9A6F2A723550B7F5A27
3A67BDDD5863DA1A98D92059AE60D71B49235364BC8C08D053DB3110B3D7E01D
FCAAC5363D2C16B6B4E75A72283AED6FDA1C35E718B3689382257C10D7EFDF69
C43595E9609408631C75A3AC60B7D1B7FBB5E1E08C0B400AFFC8A777A841CB15
E8675B41C49CC40F4FCF79218FE7E1F15E0953F354D6F7AC90C4791576717544
1029E28C39BFA8E2D1F8FAE8DF63B3EB1D785A8F0A3694571BBF7686F0F488B9
DCBB17B900ED3FC5211B58D71B8AACDE0D650A22B278718B2D63AB997052ABB7
8D045C9970BDB46E81858DB7DF52C756200039E104ADD912BEF953F5E6FFCDF4
3AD68D953216F049368C68304276A055887A7421B4FC92C91FFA4BFAD2A53E1D
B306A44946A93A2120A54FF02CDC1F88DA904E86C428AF2A35DC7A0CB0636CA2
E42D53AB585206C3486C735A1F3785E672D437988E40156B8D99F9A28B5DB066
01E72BBF51DDC4CF45039C1C8FBABA554DA6B799BD7BAB91914B84E7452D2DCC
C089454A6DB11722D2EF5973C63919ADCD3F8648685F60296DE9D6236878E4E4
9B86BA960C1A5BB2D5CD75B15FEB85B6F3A2DCA5D174D335E3DB89C22B4F7590
67F13F99FE0A53C3D17B0D199F8888D0BA1E27F31015E79E66136071ED52A734
7577AE09CA70F6ACEC49EF6F219BA05F644BF519> |
2135 <001C60D8A8C9B5EE31036204D84B56F6EE61987E51393C00B64961D578
425C461BFB41F16498EBC45B699D1F79BA66AAB38036301468FF45AF5E8C959B
282FCFF4C504575506E370A1E028C6A950B13B8D47E68568E7D60788ACDB7FE2
0380650C6B7A3B0ED6BB8E1F6B2D776D41F8A849B8D955CC4674A13D99490FB5
3CEDED23E79F6C2397BA35243DE5E5315AD3CB9C4981172AC10995544C08AC05
6FD0D2154FAF63B83998B5E31611230CF66A11FCE8967ABD6CD2137EF5B18CD9
BC846094DE7CBB077FC848874DA3302285D320592026578C87E1ADBFBC17CE32
58191F59C908AB298C8D347E874E761B8CAD87BC4687724A430B6CDAF955542E
7556B71057782F39833FDA928FBE7CE98FFD061E42522F593A510213753D226D
CF4B> |
6381 <001C60D8A8C9B5EE310DD7A56F90A0B10CD86BE22138CB162DA1820D05
6AFBA6A20EBD3F027AC14283A329A6FE7D60B516B16AA9983BE0455DEFD8E1D5
50EA171767A3781327778D2A8608DB07E2462427C9A97A7BDE011C4B7E2DAC4C
948980330F26AD7F945AA8B2328F8BF777E65CF0A2C009F192B90150DE6422DB
3158CB5AF40A202510921E79EB2DD2920B5F2A27EBCB1242C22CE9EF25FE68C7
3C74D7C7B80C4B5FFFCACA58BBCDF375889C4C7158B5978E55158BA618E3895B
1FB19D8B0F3CAC29D5882D01932AE6A63B5F68D7C3B21445FCD1BFB744F2BEF5
5FECC4857CBD5FE5669A09D391714184A170E3928110B35F55FAF156A1F25028
F9123906CBEF4EE07395260C805038FD3C997E329D7AEF80317252A489140ADA
B1DA188C65A694AC5C6AADE79A6A922C0A94C9C51EE26F4D86827DE81DA55870
7EF68DFA58329671E9C1A3BAE4B4E3EAFE80B6EA9E9EB52F46600FBBC98C453B
A080B5101E18AABA10B3F36A4B9C67E61B8FEE78E13B04F783D5BD466B246E6D
C3166D3D41B9A73D9F35AB2C37F7F7EE119B9338AEAED3E9A6BB3D06B3AADD63
4424C5B49CB35FEBBA5F1D974E6B384D4D2BF49DEF29AA96D32379EDB5C55692
BFC37DA80DFD352C0F7E5F50C17BE053C2ACF5919269F33B139D1C86719DBC00
184D13A1ED23EAD9989FE280BC5A39DD01551534C8A1AB77376E0897B815F9BC
67D2526B25311F08FB307A2B0C0658270BD68A61383106C4EEFD4FC3748037C3
DBB7C4B3B71C49A57D90FB8A9F42D31E54C9BF7A> |
1058 <001C60D8A8C9B5EE310240013C238A9B2EC88418389C9DF3A7A0ADE0B4
8302129BECF7A1355F252BBB54EC152BC3260BFAD8377C98F9CEDA0F8BAA64BA
338CF5C49CAED0B458ACCD0B255B0FF1729409C91F26347B5B80CA812097E4FE
FBE5D0BE1BA21ED866675B1A3706E88E2AE26CC012C23470A4040D92> |
1131 <001C60D8A8C9B5EE31026C8BDB020DB127A9B4B5651F6D5215627D4572
5DE165447D6C3A74821C6E30DE872A7A7B79F3CB0558D6F19A6FAF64F3A10911
F55353F75CE2D63D3052B1301DD7DBDA750860CE0144F2E16B46CD9F23898206
87ADFBB1E09B254C66D5AA6207C100BC14D9740F06ACE7E2EDC1041A4E1A4F52
FF8CF93C3BC32D032FCF4836D844FCB5E2F83DFB8517C4AECAA18865AA02B508
ACBA9598FBD00E88B121CBEE73116FC63513B6122E5C257BBE0F457456965750
1FD4BAF1465E0FEAD4155C6C1336891703441F2799DF490AAC6A158338> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDM+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [6.95412 0 0 -6.95412 0 0 ]msf
75.0617 11.7374 mo
(\033-\0261\010W)
[7.13493 7.13493 0 ]xsh
126.471 11.7374 mo
(\033-\0261\010W)
[7.13493 7.13493 0 ]xsh
23.6526 11.7236 mo
(\030\355\004"\010W)
[7.13493 7.13493 0 ]xsh
167.598 11.7236 mo
(\030\355\004k\010W)
[7.13493 7.13493 0 ]xsh
grestore
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 3 GetGlyphDirectory
13245 <0C1C60D8A8C9B5EE317638D4178DA72760CD981C0DA8F9B882D9E6336
4A675BBEEDE6D702B74D328394496AE249867650819E7A71A4158DD8466512A0
C202C319866581915E17BBC93AEF66C4C57726005B5AF0712740003389FF8725
306CAB7C08DDC2E7801E93F2F3AF788535D1104C389F06AC62D49D433F505222
50DF96BF60766E6F375E86264C34ACC5F611E88CA220E38DBFBC36AC389BDD8A
3E661E7F64FE4549AC21197101BCF6B27A013BB73E9BFA489EF8D750E4ABF0FE
B9689FA2280641E422F2B8C157080751DB186B49AA0C6D530E3B3AADC4D9B462
71D60909FF76995A93C17C95AD6DEDD9762F3B3C6271606C15EBFD1950E01560
68C73F427A6D330377358B90DF3E27BF80195F81AB192217636B54DF3CE5B703
3137F984C8F4419C9503226D8E0CEED71B9450108025A07B8F5563B1FF4EEACE
FFD6C0886EE9BFDDF761E> |
14147 <0C1C60D8A8C9B5EE31764DB8ADA91B872F2A9118956D283B6C0AC3455
A8885A6FD44155C52B26E03A6ED19A3E671B46DF13EA7E38E4689F6F650D3F07
C952A035749C9084C04524536CE7EC017D1EEAEACD19DE1023D1C97DFCDA0083
B6D6270BD8C36FF4494680A6094B95E18D0C4C1F78EC184AC91FA2F9FD1069FE
11A1D89DE27FE71BCF1C5DCE7D039F3CDB9FCC16DE3C942BEF6BF612F317F41B
BA3AB6F474081C33F2BB43D7BA8477FD8E8CB9CFFF9B2E5650EC7EFAC2384640
75E527A69235517980F9967330819267832593DAC0160A444753A681B18059F3
79C5685BD0B3BF53D8E1926552030506FE39274EB33C2AE3DF10881AA> |
16002 <0C1C60D8A8C9B5EE31764DF263599BB43B3215BF267ABFF7177031FEA
14E81E3A1DD979159AE92E0F15EE3A544EFBB992850C0275D1CC01A04874CA2A
D7172DC2FBC28058217FDE10B1E273741545BE510E7B958C66AA71F860EC455F
B234387065B0B79E1DC867796301824ADC7D59A8E1384C936E0CD9F1A7AD7D52
6A810E274EAC92FADB8F696B9B576A13A3B507BDDFA888E9BF4BD4338E20F5A8
2A62A37DDE01C520C1E8E6BBE04CBD1CA2B466E58AC729ED57B42AE0D114817D
0A62E507603CDF184FB29DACE097DEF20560E5D9FC7F761E898B88B17D71F788
B007482156AC8ADE4B234B320A1ECC15D69D6BA3EEC0DE82B79E93FE4FC34D01
48F355B0FEAB02FC4AFBD3B0F21D7FE38C3086EE16ACD8A6F7EDA4930D335C82
BAFBC50737F2022B0> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
55.8767 128.502 mo
(3\275)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 1 GetGlyphDirectory
1933 <001C60D8A8C9B7AC3546B1DA94C2A0CD68D68AB15650112CB66CDCA748
D1C3AA51C5F9B611148CD7FA083D63F1C5819BC5C02991F45F699F6E7D7710> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
66.6117 128.502 mo
(\007\212\007%\007\215)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
84.8577 128.502 mo
(7C>\202+\374\262\024s\230\177\013\177\261\177\030)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 1 GetGlyphDirectory
37545 <0C1C60D8A8C9B5EE317642A7075154CDD79DEE1BACC76231A434373F7
F0D17777D16F75506062F09F60C4824E70C118465402AD2393CD0CA5733A1EBB
C5E59355F7AE7D2A78AA9CACF520249339A5CC0810BF64206BBAC07F149C4DAF
E3339A2C4344B70932D4540998282A3E2CAB015ADE6D906FAF214E2BF65BA355
5935385CC0ECACDD229BD9CB33FCE7B5AE84C487741F4AA4EA2C1906FE8D0A26
9377CF08D847522D5B8C77F324F2688C46040312C369D8D70D642C8EA7D85FFB
3CAE1175FDFB37E0C59F2A82BF3AB81E70DC5EF1061AFC1228A778F945E93862
2DE7BA428A8C4400F43C0FF30A58ED6A9A4DCC3FE2B2607B0537DE66CD7D7C7B
D4D799772E8F10443A84C22AAA5A85E7AA710747EA2DA14D295E3E6453411DD6
2B65B60875BAA86FC85528A4466D80AAC883D110039387D96AE6226FA067A2B1
7707EEE09166815811BF14DC1F406C02FE545E6393E5B70BC187BB2603052950
F5C93861FC5DDD9D09287EDF3F9FDA5C7A652CDBBBC9401B650A2E77279D7EE1
5> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-39.6063 156.835 mo
(\222\251)sh
0 .745 .745 .208 cmyk
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-30.0203 156.835 mo
(\007\212\007%\007\207)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 8 GetGlyphDirectory
32533 <0C1C60D8A8C9B5EE31763C1F92DB9DB6D1C8341C99FD29EEE4A68512B
5A21AF6C2303442EB81AD32BAF177EA43558CAE89D66FCD3E69E97A735A24630
9EFC8B7EDC5A68621910B0CA1039CE05A023583801A2FE49E78E6E1FC7831E72
9881B3C12C1A5E01E80865957518D3BA517D02DE8365D407989CAAFA99C283CC
B635FEBA74A6B724ADA27404BAEE1DFB2020C0F865B367890AF9DA7596A4E04D
FE2F20DA4B6C03D42A68155A6D5F6420B859B6FC044D4E64B4A67931D524805B
BC3498DE079517681B0FD84B3DC9F1B2486F9846E68034B91D82803F73E99F88
ECDBB3C1C7F1048AEB3B102F91A20795805008F758C66BEAFA3C86B6E505EFBC
808709636DB52A483B71EFD7B75261F0A9F1177268B8AD03A91DB9A98F177845
0592A4B3DE5AC313184C075079FADACE395C87EB6E04E02773B9C65CFD7BCE16
B0BBBF4E3607AEB3200BCD9AC78A89CEE68AF5B85CE00566967554BFA08DAD94
233173FC6AF3D2BF7068E823BF856F2D0B923C17910B8AAB488F0E7> |
11139 <0C1C60D8A8C9B5EE31762D361D73A567EA796BFBA72E87EC1EAC77FB9
5951D410EAFCFCC2BEEA89E539FB3DAD219A540DD83A6C8891D6159A595FD67E
8EE5F00FDE382734A1B571ABE4C1D1E878EFD219232ADBD67F570C32E5E5EDD9
96707799F842B4CC287051A8832B2F818BA0D6B8BA22D204C1FB262BBB96CD08
32314D7BEDFCCB84F48B8C452C19ED58EB5EADFCDB66A5F328FE8DF30554B333
25F987B70B4921892D82B4C44B70570932042278C6D1DCCEC1A89564F2C1FFED
EBE06DD48EF7BDA5E986B6E47B9E317F8265DE0AD8492D37B6E8ABD36CEE61C6
6C16F1653756FBDD4DC18D6517D5933927DC8D7E5D63D8ACCF8528D596BC40D7
64DD535141F40FC631C5A6F53D73B40478AAF18BB585EE07376E05EA6BE225AA
922447F854BEEF68D64B1E5BCD6DA0786BD659F521C31EDC00188C005C7CBBB2
7DB261BD3109DD13CD78715A39E2B9A62> |
9687 <0C1C60D8A8C9B5EE3176FB6B1BFB61988C948598F418B2ED8F2C4C929A
9664D0407D22B998C6BC91D42EE055769A7179144ACF64A29B886402124AD304
D3966F4BAB0009DC7A51C24817E323C9A773175A8FD6CDE19D1A422AA67DB642
327865BDBA52C688578496049A17EECA22A8422969E4479FB324A516BA85BB6C
A7561504CB10EDF1F205514D17F22096B0E7E0D225EF1490EAD6359E89A6C49E
A8B8B82F0B7F0A632D0E65A432BCE78F71534FA6A27CB783FD2146D55F854C0F
EA49C8B28395A11D> |
19646 <0C1C60D8A8C9B5EE315376370279FAC46F0BD99C01C63B100CFFF202D
854689F2DD99841F10E96AFF2BBC0C946E851A84AD06F4CAA246FC6D25336A55
BAAFF51414ECC93FAAD9A9BBF485707080233395279D95E18D63D9FF89AE0929
6B4C933673BFAE29A0949773E9F51E598E3F2F7AA34DF060343679A95D292C9E
194F8FDEDD7E0D74C18A047317EFA10C14404D0042EA7C8A2E63B665EB9CC86D
80CCCE27415680A607BCEB8285BF737C089DDAF94990F15575F6423FA5C3D1C0
95734C7AED244ADB81033CCD1518BC44F5C9FB71D0BED1BA61FEA69E07AAE62F
8F941453E2722161ED1E7556BBB1E7280E562D1A85A40C5E2658D044F36FBA93
92C44399139F49032F7743A7D5FDE125629E042C0AA834E6355345D5F254326E
829E997683D0156F55D03F998B3C965DED0CE9F189598B66141451187E74370A
BDB9839C892DFB7E454AEE5361F8E1AF1D380E891E4F4F4D2E302A21D03AF7F0
A9445DBB26B76F5FAC346B908E7C493FAB658157B2B2EB0C05FDAEB823C04EC9
3DD482020AA8E9E65452D677F3D33C38C967498D4E63B90070391348A280E5E2
10B1E2D99E3FA8615EA2EC9DC78D4EDC7DE8E133E30E7880AF58AD7BF54C12C8
2D57F365517040549ADA83F31D3B99E565B021B55C5BAAC0B3582AD0759B071D
F9414644761989368C276F0EE925DF98DDA1B03842DA3FD50DE079572114A51E
1C14EBC821D8CE52347296ABA26B50B1BBBB257465CE86651AD> |
41166 <0C1C60D8A8C9B5EE3176DADCE181EABCDBAACBA037C7F60439A1F3733
BDF974C99495F0C6CB43E1F5B545010DAC7809D70331EEAF70249BF8DEF4FAD9
D3A73C8D93D6A22A5A2EDF6264169B2D54799A483B52BC2E95044F5CD0A6E8CB
2F41FF274030296E8BEB38B036F9780320C625F954687A66850556FEB98B6A72
4EFBE92BA943807580207C95C1C85072A5FC5792502B55FACE9DD3221F341E5B
8DF29D3B1D4AE1B846766076A794140EBE4089FF9A40CDDB781DA5648A8F96A7
C297529426FBF0857FEC4ADE5C34B186C9E08BE1C305DA13B98321358D7A3D55
324E935A2F7E0AAB055563853275E816018DA76E1E66C991628D9DF46FAC9A1E
545A68B4F4C24FC8D5A0B08D99B4E144242C90B28C1A5CDEC861030C045BAC4F
9A098E4349C1E9D67F6DA1165E4958B65F8A226E16FE3E1157A3AF9CBF36B0B7
FB27ED4AE76F931E5C5D4A2F2A4A864BFADCD483F9E2106EEA0BF0EC0AC26DA4
FCBD10D58FFD55D4CCF97635B396ACE2B1A4C9E10943E418D96CAC14A5A49AE0
896F9ED57DB0A4C918A37CD0D2A90665294F15586B98BE8FB8F> |
28344 <0C1C60D8A8C9B5EE31767F1407EF8D9138BD8318837C9908474305F70
589C28D80DC42982B7BF48158AD0DBE02391FE32091D47885B685DA2E7F1BC41
89849CB79B86783D4396CACDB297CC9F176D70D195CD29D220FE2E911EC31BFF
7CBCEDCFCFFF2CE2787EEAD7653284E0ADB405ADF54CE09706D9AC941FB72FD9
329D79419DDB820CC4ED4D37365AB0E1E563232182C43788A4A862D2EC073627
F7D56EB25B89FF120B984530AE60A75ACC9A94ECC8CC6C2DE3E0CC5B18D8A039
7AF09A4321374F98CC234C55E4909352285EE9CB29E2F205FFE73433F35ACDDF
E7602ABE9052B2B647F9ABCDD894F5B623FC02731CC3AA6C2FB993A2435A33C3
84E4042ACA6BB54D43AA9971079764861C94853640FCF3A03444BE273F7681E2
C120AEE18E6936D082F08FA98EFF4E701528C5D281308BFC3A2364D513469063
5A27E5E5AD80882C7BD54AD7857D9CD7F1EBD20FED04C2446> |
39384 <0C1C60D8A8C9B5EE3176E7220D4BDC1037AE7FEE8CA5F63AAAFFE4CD2
16772680FE83B6DD0ED497809C1161D8FBE0AC7A17EF76213870EF6AF29C2899
5A97EA3BE3CE4C5ABAF73F3FC54EDF1BEFB90B853350BC75A690CCCCCE6C942F
9A316E77D3ECBF73D59B476B87B6CCC201F151691D3432A8C53271F4437E391D
806120D2115BFD398B093D4C1796D999EC55C23683911AD3199256B916BF82A0
C821E9539FF948D479E920DC5BA8BDE2BB1EBDC761988E32B25C8E1EC7DAB19E
19FD2BEC195F1922F93D4ECA669F55771B568B88E9FFF34C79C719BCFE8A3975
230A39E42F410E57E5063D44ADC4AC69BC2798E98F6AF058D15DE044B7E52D2C
C5B410501FA44F0018BF9> |
11957 <0C1C60D8A8C9B5EE31768542513E4681B8FA7BC0D2E3C7A11B365851A
E2B94338C93B4DD5D18DBB23EA29B5E106B5B65AE3C169E17B41A93893D8E5A4
3F80FD30453167B9FE100ED3C525168C778F4C83B7CA8FC8793A41F8451D69BE
5F2D17E3C34CE239D012604D9F0A21EDF62D05F2A23C64C79C3EBDB0F65AE3D9
7B3E1257556717F234CD0A0AAEBBEFB51799A67565DDBC84B7F1A18FD0C85834
E9EA6F89AFE9A9F3624A6A78968190E0938D92451D3E41DAD6ABA0A9A438F153
996CC5788A11CF9089A6F76C141327B4702C0E710D4874AB5F0353163C13E6AB
CC7CBE022CED710DB40880F1A7A101FF9A9F002C310E3ED1DA9A8ED708C29435
EF6DE18F71F3C75373B83559D1FD96F452152BDB0AA4FA1D7627FCE1F9FDC691
83C7811B563EBF92C59A1EDC09F78B694DDE92D24734CE1B8758EADD71F2DD6> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-17.7163 156.835 mo
(\177\025+\203%\327L\276\240\316+\374\262\024s\230\177\013\177\261\177\030n\270\231\330.\265)sh
true set_gvm
%ADOBeginSubsetFont: TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H 1 GetGlyphDirectory
8020 <001C60D8A8C9B5EE3137434EF3A39EC30B88FE58D60DCEBA946FF80E31
2F5D4C750E56CBD746E4FD> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
116.492 156.835 mo
(\037T)sh
0 .745 .745 .208 cmyk
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
51.5627 175.624 mo
(\222\251)sh
TVZNDO+STIXTwoText-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
62.2977 175.624 mo
(\007\212\007%\007\207)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
80.5447 175.624 mo
(+\374\262\024s\230\177\013\177\261\177\030n\270\231\330.\265)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H 12 GetGlyphDirectory
2135 <001C60D8A8C9B5EE3103D7AC2E4B6664A582F543D5C975A2C8F8A2CFCC
E4C8E7D306C72619A29EDBBEFCA3B64F86189A52AD13E4F04ED04CA73522C62F
E5F9597CDDA45B5D31076FA9484E562CDB9BC2192241A694752D1F478841A19D
E5E6CDA3B1CD722C2055A5CFE2F02261EB18B7D2F5D4E805B4580A837FBE8E3E
0704C37EB7D3917B4778887F83794C46D76AD0EDE0486374F48B404616B73862
29CC0B94DD41494797655602B961CE6591AFC12F984C1A70E1455DA5A4739FCD
83AEC83FC09C53B346BF1D82EE65A2BC2A120EFEA15706020DEDBA2A256F8786
1C691F8F5DBC567A3770E42FFC4D37189C51E5FAE6A7F95389CF500FFFA42049
18960FB91FC53F6EE826A3172869FA76A68091A59949086765F70224E5FEE6EF
BAE7E4AED1B53476B981D5E92E2C10C170DC1180EE30AF856475365E67CB4AA5
BE5F16AE8547E00BB5ECEC14D5E599FF823E9E058EDAADAA062D36AA67F0B1BA
B01E0BA8922923DACA8C48C186DB51A1CE96607031C01DDA0D007EE7EBF7150E
55DA502E481BD225E9EEFDF53F0F9593D84785F508B104277AF6A7A5F6A7A506
78BEB7C9F194E560A171E89054> |
2981 <001C60D8A8C9B5EE310DC6518FB562D05134AB04E8EF74A2EB3029743C
22C537E1D970998CEC72A1D9BCAB4CE74A4FB84AFE1C6392320210137D26C03F
40721B103ACC54B465EF19724567768EA8E9308193A29113619FC48B125F3E2E
4B7182B96293467A1F2FDDDAFE4DDB6ACF90F2148A0F7FCD6E6C8B06C91C6100
2A93EC3C99A0F53B2D8413BA1F10BD656302E0C23558083372C898B758970419
5D2CB5601B45F825690529831E41C8397EC220B9CB1E1734022F8DC5481AE6C2
241052BFFE1A598CF46FBE79C7B171AB28EEF4138BE8D16C8FAB5C81F415EFC2
2CC632A60A19B49CA52C61814588EF9A1B535FD598A4745F04D9593465087941
49238DAAC606A5D9C3315FAFED45BF060F461CEE828BBCE3E71CFD600BCC3D1C
3257A9CA4139F577AD6D626E9EC6350D871E2B8330B58C7E8E9E71845FE22938
DD34F7531E073D69B1F60C4E092EE3F4438C59E15D8460EB261DF8B1C6CC46ED
CD2D7DD9E9DD7DDEF9D0A0F0677CA1553CED21C3296124A3FB423B8B7B7FFEE7
1CC00790DB6C74C9FBEF520609B05C33D14AD61A3394CD703ECFA590D8530C58
BDF1810843F5A56156B7FDB35E0DFE514256F1FE77B07F12BDCA2CF95C84CF41
6C98E4B7216171905093F42A7C94D6AEACA7E3DD60D54D77038E6841F0B8A0B8
2C5F4799D5B9CB129FA7F1486F375B13412B515C28A3C026253C80FA124F553C
8AC500659A015705400FFDA10CEC102447787E3317DECCAF6A6EDBA5FBFEA77A
A1D6E8FCC0BF2BFF41B8CE0DC43B8AED0CA466ACB4BC9CB5445FF46491AE0215
2BFAAAEE887EAFEF6B589DE811BB34C88D04C0516F647E87D22EB339BD09B890
9A517C33112424A1DD13F94DEC6A9A5076A3FE6E1DAEA4BEEAFB091F45170C3E
F5B322ABBBC4FF8D8809A3FCAF7DF46FA04FB19D49358A578E43BA490FE3F165
17F1317E52786E9758ADCF193F85FBF16F4BD67467C8786F8F6BAAC58CE3D604
59963F567744BA12163E731D235AB80D946CF9B4B356758C3FC165CBE45DE1DA
D95B24E0951D0953916BED9555E958D12384A8457FFE4BBC8E42F3817ABCDD6B
0EF59257B5C4879D80855F2CBD9392701E96D052FE9D2399B9CEADCB6FC51817
FCB7A095D65F> |
703 <001C60D8A8C9B5EE3103898812816301BE167A90ED4A16876A5427D3C3B
76383B28DD09564128306F3CBBAE9297DF467DD4518124D2245A8D7A7B0B0E45
FD20DD5DBD5B08C5801830439CB79950726F8B637> |
5330 <001C60D8A8C9B5EE310DDB6E8379D5B4C5DF0364B5AB0A97E5CFDCCD00
5B33FF109F7A91AFA7AB5F1EF39D581AA5996E812ED3483DFC731C5810A0C967
3287161E94019232CCFDA837C22DFEC316ABCBED1C4B2E24048EE13604F1111E
D33AD4DBF8C6591173AB599BA22AD2DCF4901D58A9E2B466A253FE143029D941
D8EA2A9A9224A976F5FECA30A6DAEFE0DE7C1C367A63CC7837705C5B75798B01
9C824C0604F7CBEED37D3730E53AA9C0047086EBD287EC68CB2D1CAB0A620FD4
65CBB64B31ECC872A2BC2B134E68B20969D60F032374E4251CE343EC9BD4ACD7
5F623A6499C406E8FE432D3C38CC9A8C77FB1FCD1F33516B2A440C99D4DAF93B
CBE444D32D0182382DCF6D60FC60BE5DE7EAEABAF34FA3B1EC5FC354236D5E45
51A611891526B7579EAEF444C6C66667E4799109E20ABB9531A0E346B4F34C11
3EE9BDD940B677B2CA628866C43983E58540D2A9854C79CCAA05A8E1B043F3C3
15A294E2A12A40B18B86598D889C6E26A0165BD9B1BA5EF6B94CA952077D1114
CA2CD7AE6629C28F691764C6BBB2F42BDDF336BCAC08BB8F4B4CDEF683F2E7CD
66386CF83BEB2CB4FBD7C4E2A7E79B8347131C9500C1EF43F1D49E4C107FFD89
15EC01DEB841E87E4777E4DDDDF5D97B26196E4E9BC5FDD69DA50F3CAEA85247
13E88B9B48CBD4ED7085818ACBA95A94F8667FD5291A083D4CD5B092B9053199
D1760723C9AC7BD6245FE56A318CDE16C87D4276FA79BBF48B5A6AF4AEF86F20
E0B55C943745342421A0EC7EE4B09ACA1D7390CCC9271227D2E82D827EA93910
76951678E869EC27D9F0137FFC40F2D74981F0B5D9672D08E9184914B75AD6F2
872BD0E87C7165A6410073B947B4DBB91ABC1FDC93E37627195F18415E221BB8
4FFB888025DC63D7AA9D9516B30644853635A36BA15B> |
1342 <001C60D8A8C9B5EE3102CC25A820880C71B590BFCDB7F28FE685072819
BB871379C841190534AC9E3E3949C2B6C674CE707370D8F4993693DDCA5654BC
FDFA479773C3D88A2EF72F2011841C69C3F8FC9FCF725A5D4E3C0F6F976AD3E6
1E5931FEB45D7178AAF1C8674A62B654D2BE3B4F0491A96616A505EEE4F4B820
CC30C8A0EC01A8339EE9CC72AB0424B29AE6540AFEEAB0670CB26BF7EB93F33E
BBA83355B8104F7CA848D77795A5171E91A0DE3A8F09CED30F8DF1EE747FEF08
0530A71399EF399CDDFBA86BFD937B2CE5B4FCE3C146E6FED82013AAAABA3235
40281B1006DDE6D8B7B7F808568C6663B4B785A0D70816968DA70BBB75F0C374
C9EA686FBE2C> |
5102 <001C60D8A8C9B5EE31021BDA78A15F2AD5C1409B97090FFB73A2329890
DE7A05FA0A08A7DA15622F7232704B33FB4D2DCDAEDD4C1A2B0B4CFF7A2E55BD
89CC767D0765AC771D7220C4D0F2FCF4E734E75A1C4657892AA8A63F053D78DD
CBA1FFAEA4253E48F39CAD59A4FD279FD43A84C44F7717EA9BC2570C596691B2
1A59D02EE338AB83F279FED5BD587EE9A1C8B3E685578E61B689E1F8ABACD780
46CF877AA04257B7400E61B25C272E3A204F1A226F358B3427DB887AA1F717E1
FFA993DE34140F7B32D4D73884477BA21D9AA24A5E4460EB0DF4BB1FF7CE5D76
1418B5F034604805691C4D0FC7F9BAFA6698DA0E42BD0F80D18BFFBEE997DFAF
D96C5E0E2DC17FBFCD7F00673E4A0F6831C839F039FCDFB40A97D6E2CE1EE179
8B2AA338642925C614E862FBD2E535F89EF1C44BE06EE9CB4EDA222EA14F415A
EC4E7D37EC014740EC73B3DA56FAAB922E7385222EDBBFE8430C6F64A845DE4E
70EDAAE95AA37270A7DAA81C37BEECF9BB4AB504E2F7E5B7DB29341683CD5397
2CF1EF0E4D29071102D42CAFB6D8D7782D3DD7F5A4B6CB7508FD903795F69563
D2764E66035295F8F4782092EF2021B3CF7A567AA156E63699982FBF05B3A452
9177761A3CA5A29F6D5158893814DFB89170D665AE8F15E3DB08BFD2EB089A77
84F9D1DE01760FB0FA7103BCDD2781777F74644645A83207CA> |
5701 <001C60D8A8C9B5EE31020BC59ABCF86780F1A1E14619182AE8083F2C95
C86E0AC510233094354EE41B44CAD3C1FA1D6998A97D91A49793B72AAE436C70
AEDB43CC642A9259865765EEB7CCB53D38E8DA1AA3E3861D5C8B9AD01C6C956F
DC5520D6097B143C3476ADAD379BD7B60A970B394A03B915F4E8038109D8EAC3
8AA0DC4E5E16151B719A2DE3B742C5A379DA01E08DDABECC092662805EAB5AB7
20111D211B4427FC9F908285293AE3265F4E54DEB014153A2CDFD09D3F22ABEE
AC0F5A00FC3A4CA1D8FD3A133D6FCB4B90B398A4F370633AA350A4D9CEADF615
623383A29CD4068885CFC10066AF9E3F361EC9200B3513B0D0C908C76F9EC895
A9664297D9E0249AED5E15467660EB7DFB3DCC0B700D723C16EF23605D71E5DC
97298470E736C6627AC9214D63C140DACE506F5D475A6E1C4435C320C7494016
4FD3CBABA3DD73E7FE4103BB64088D4ED83C70643BF598EC519DADEB66A42C0F
03407534233D4CEC661C1005C90D760E2F1AA79F8163AA683D4C38AAA79DF9BB
EAC892916C4389DCAED121CA4BF1393C9E1CDDD2E57D88F22264498A2243E8BE
B501ABC0FDE940371626C290F8DCBDF9B012B22C55D2914BDFFFF916243B04C3
8A1A04DD71B9F7C54EB8D15BAFA1A41C3BDD5BCDF98650820F2C8D57DD87CF66
191D1CB7D88FDECB098DB624DF306A802B67418FF2375069302975F4F7569C8C
10BD04E53F6A0F47139930B80633F0794E1DA15417B6269ADCA9109C28B5B6DF
A0543E57551F9290C626128F3999BB638904021AADC55027AE3B2CC7A53E780C
8414D864B3BAAEC862583806A192EA358565CCC281F3388C7B3F> |
6957 <001C60D8A8C9B5EE31028693718937368646489E1DA1BA06BFAAB83D51
24A2F215FE9A4099D2F865AFD95268103B40775D0519FED50B68707B04AA2BEC
59C29700250601B49F6664A135993F27BFE4938551D604EFDFA12691CC831ECB
250725CC1E43C0509432D05A182A863E05E6BF602C26AFB59A658A6507829387
C4927E3E3F7FFC5A1D357D875324D18BCBC2871BC29CC683712A216E9568721E
2720383276C3170A546D538B91E2B4F7FF0CF6C4F861A8CD73F37DD0697E5AFA
E43FD612BD06D1B128D112405E9A263B104C16CCB6847A640204258468220247
FEF38097F95A7DBBF4557C62B9F929EA21BAF46A48ABECBB56E3EC58A58EF009
A50F3946314E932290D2D88A23219E375961FD5032B95DD08A69DCF759709033
5A63E24FECEADC995180B235F21F6C544CF5C1473C1AAA046402E6B6ED73B2A5
33EA6249A5E389C8872AA89700E6AFF3ED5D01E2205DAF22B4820D640939E3B7
DF1795B0E40340D946D2A277958247F98FD53C6E8A7CAADB55D58C79E076BB2D
DD9CE07EEC779F6CCF7F86C52589704E8722A230C42DDE2AFE96635225A6C421
F82F27B4A02B8068412A754C9267890E3569462EF98031268A9D221A2B6C0DB4
8B928AC7444289BFE1C6C26BE98C0C19F9DEE3B3980E426B2B37A47EF48ED0F9
1FD5B56E49B48DBBDC3C79D6209AEBB80888B7F261E021D2A7F3C2BF7898C6BC
56A51F85C069D9CFEFE5D28C53CE983D231B877D9739AED0852105937B225CE9
9BBF4CFAC51FC4D8D2DC5C74D2A1C8E369B9F009EBF4A2F8ED9FBF43FBD9BC9D
D56ADCAE623AA15E594C1765CA5F8E33062A07C3A05F8449CDB5EAF748FE0D1F
D15A508A3E0708386473138B18FAA086E189C4903F85BA79107DD2B69AE70267
8408DA77B92BFEA3B303436E99A8250CF183C29314B3723EB02D8A06A8DF0844
A868C5A63630> |
5681 <001C60D8A8C9B5EE3102C0D6B72DF04DCD825A2A7005DE0248AD2C77D4
04C1FE11DA8596253B0ABAF227226CC8764B4AC950BF91E9239C5A5D800B6006
6AFAD194EBCDDC78F8300E62032E5D0B47029D03D1CCFE4B4E42EF8A2E561C32
4B5600C106DB5F75B5E40EA5914597B4218C818474B8EE8E1C30F85AC60AA6C1
8B4A88866F9A8743AF93F52168A9BE7FE538D35F20E784B604040B91545B87D2
28B26468DD0F692EA08183E83718F2D57E313321E22E1E709608FF0C87E15470
C4952D9A4430EA4DF5983E089B148CEBB7CE3827E38165C9CD92D8342EF79EBE
F05F277B44830E0D16FEACBA3A2778FC40AE3383196C1D564298B8B8EA4F3609
4AE2EEE41F705A99D7FB781425556FEB32AEE5319480FF8A99E7BF817FFD62B2
198FB87C5E33A4B3123D8B2D4155A443ACEDED7D7954CB2853DFDCED75A07CDB
0FBED1EE16151885BEA1773E56A8842EA531E4D973E506DC97405C7F9AEA6687
724B191D1AD557ECF0338376DCBA9A0FEB5CF74C130A834AB64DA5E35767215F
DBC109464763499549D0E626EBF87BA81EB68032BA42DE103B9317756A2D75E7
10B193C144767549CB98DFAA234AC11C0D81705A364D50D8E07E37DFA0B4D639
EFBBE91818635A493698C96481DFF5613661AF190E4E1AAD623B87DF6B0B25A4
4C6FDE8841A5CB178CDA8C0E270BBD0CF78BA654ACE92F3AA28A9CD8E9AA4DD9
360439C528D80F20E8E74CE88B01594338ACF21B631725DE42BEAFC331CFCBBF
A39669E82F0C8504A7949A10FB6DFF75738C26D12F59C9693463EF32DF7F5CDA
E0AE5984BF5E8BA9C9EC4ACB4821C8B4607F8B67ACE341FF537879A19CB71D36
867A25598620E3A3185AE571381A889AC5982C7C13877677BCB0A124ACE63531
599DDCB035BAC07A24BFA7BA0C5592EB0FC043E38357D6E3F5B4D7D4ED312484
56BC568894BBB1082EEEB5515F43D8857267EDEE9F9A7C4F7E94C0DD06B3F59A
07FF2B3287648D42077FE511B60C7A335970EA9B7D704D5F87CED07F51AE42C2
3782F1F54C7853F1C05A626E4C08974F39991F69D4E80C39A0B3899815E83E37
A1183F57241D7B954CC26721E7D0BDA3FBC34E8A65DCB0CBD6A1DF629389CA18
715DE4645547E57C5F9F67D4D6EC007313E4190901DCDE6EF4E2B024C8E3D304
8F0CDA3850527F16FF5C8260C8ADC664F27E6106AFCB50A35CD8A37C3D23AAAD
E941B70B4037E162E39F4C21867CB69D9D855415A28CF1D0CBD912D8A418B864
1A2E5E85A4A505B21DEE3847E1C0B14E529E7760436F9709F17EDBE021300D66
77700DCC9740CF932142EBE7DEEAB82AC9A89AA389A5C96A5335247BE1361E63
D63DBDA749D45FDC> |
1439 <001C60D8A8C9B5EE31021BDAB35259BC6BD69D0EDC863608147F4861A8
174C9433A09067A4D8F4FCA6E009B5193AF935A8881639C4EEDA79A215B730B9
175EB686309BB91CD3C7E9503F856E2DA988C1409D383F9D9293E30D6B7DA630
81AE4110C0630FE66FA35332DF5337E9BE5A7BA9D7982624E94A8BDBFA0F723D
ACEA167EE0E1A6F1E1FCED814627D7AD063108CE887D4E9B8DAEEF1D6199CDB5
8E47603304482368FAA394714E532E4D2D988627A6B636F6892AEEC4DE2571CC
AB90B2EB1CC5DE28B9E957EBC4A4326B621441751191CCA67A3E2403D3F3A7D3
54970A0AC0979CCB0A463E7BA6875AA0700B4356FE052E91C0D6C5AF35F835EA
9D9708EC6C39AE015DB4B0A0BC6EB4BB3D768E8702E07925791E6D998A542BAC
FA4B7BA71A986B8471BAE2BDCE1CB502AAB12AE4D1C427DE0AE9DDDE9E0B355A
4C54FEDFFBD7F10095E6F51ED66E302C4DA4CCAD048E208732BC051F863C8502
0AD09DEFB564081B9EE1E9193B48C539BF541B7F07DF3557C38C226AD0B4A208
56C7E81832ACF9AE185DD918E90A416C24E877C8A59DAD7374915E92D26C36E6
9A92419358419DD72140EAF516EE07FD79F6FB93203BBA9AC92DE399F391B91D
53ECC673> |
6381 <001C60D8A8C9B5EE31029A72FD43598ECCEC986E8E697DC6C6BF39A431
5A196FAC081986661BC7F3C0A04E51E78FFF318B70136C27B61E6ABF6219F7A5
F9A9FBC220B114D6471743C97DBB56FAB2710671C5F0378246E0F0539EBC5FE7
46EA3F35AD1FDA29CF0DB2A732AF41EE97362350155734E7538F3C0E9A62431D
4FC83AC723D8EB11A6B9C72F3170B1007E54269253B1539E3EAC5BB4ADE5BA40
F61ACF7DF4CC5CFF91826D307E4A56E79C5DCB5F16EF64ADF4BFAD7DAC24C7E3
22A016420A7DBA2F742E0AE6A862C889C4406521A476AE83C22A3D18A9D852D9
04A20C6BBE22AC19D5BF04D8DADD864B6C68D7649A8B832A23A4BF587B62DBD5
C0A503754C03B13454307FC9F40CEE9F37248EE3EB0BC315760E4A41D887F060
F94649AC138FF39CD254F0415018D7A849D57D9A30DF805864DC9410DA7134C8
55297CEAAB6578EB6BA0F28F68A6F3ED7EB10708F7045EE2E1422BBE0C0ABA21
77C6F6E13A3BEB56B2D32E6EA662D80F43C18C45FF7073B415046E20DFE8D7FE
DFB33DED640C95A5DD259AFB2BC32B81CDA66F5F079517BA8239593E9E332844
09DFF58AF1922BF18AEE04D2246FEDC08FCF91E7D1A7E92623E2B616E203B46B
856B51707A3E53B2D189B8405AB83C92D092FE26F86553A7BC5FBAD4A828F2C4
F0CB4FE574478BC3E0F789EFB123794637B75B12E6B685658793B8DA9287847C
4A7535114D882385B0D5B2C21F39690F764ABF1A2B44355974ED5A9BFDA3F51C
8816B718BC00776A6B91C5BD8782D7750C74BE4D5C6AE0D6927B0830DF0B21DE
06B4A6CD701309974C4B581688A098DBC83BC2021E88E7EA02F08B9D2113BDFB
353260544B5A6A9161DBEAB29AB26B018132DB2E0FE39C73FC0A7B6EDE9DDB2A
4E5ABA77F4ED25188AE06A3F1DCD3682BBB13356204E9CA5EC4BC9623C09CF16
25CE020BADE66FEB233E635729E50F5167BA669FDDD60F7F49C5595879924FA5
0F3800245DD61DB9141DF89C2FEC33F28B9ED2E64161DCF52B3CECE7E766F27A
02705CA62F77AD92A274C8B404FE7C130CD4F1F1C7BA5FBE5CEC765751BE8033
0430D65170B5C8F37CA332A8FE594EE6374FE8300EDECC042552C01474AC64D0
0B6F82E1E8C9893D2D195FE263348DE3579F1C2F42FF646E01247CF91CEF5AC4
CDCF5B76456F0C26D3A8C9C39853D0303D48F229CCB0FAE6C03CE5F173959970
6038899091CED504F16B539188924472C1> |
1131 <001C60D8A8C9B5EE3102603FF54A300B43AF59B737B1235968A39A1519
F70FBD3244EB7F7F8D9CA9B08BFAE606D4744E13D58E2B72195C39A3676D6C6E
3897A85D278414BB006AC97BBC46839BC1AF8B874967088748E2B7163E0C53CF
C421BF8296A21A31102B4EAE7199D1AEF8FE96FBF715ECD7761B0DC30A9F1514
527AA5FDFAF3423051396BB57D29EC2BE850172E2E61587D62F88A19090258BA
4618E7862DA3089B4DFA4918CC8509CB7172BA3D40097A872FFC6E691945E830
FF54B9936EC814D4838042FD60FD583C974BF40B237C559F089D4E329CC7FA8B
B1496BB78809C525544716BDD7C62CF1D87CA1E46C63DBC51827A077760998F7
8774DFC407FFE247B17ABFA0FE52146E298E9CE33A367CC7AABB2E79BF813F44
DC853DBFA1107DEFA66A2E6C29E047BCC0B94935924B0991F55AE4C276C4CBE7
CEA79FEEA6173CFE52BB6E548098972D2F59528705EED2ADA92761BCCA81C99C
2A40E8C985B0232BF427172092D7A8F0AC4172D9FDDDC0749C44947D70644088
8329C1219955418ADDD873579E70490034E6661F2D7C630D945415EA> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
280.626 244.301 mo
(\010W\013\245)
[7.66901 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 1 GetGlyphDirectory
4406 <001C60D8A8C9B67031BC701AE743FFBDFBDBA1F308AA7FA7AB38890ABA
615BB0B4EA1346C225C39D9820F589CA4E8B4012A32D76C33DE592553CAEE186
16A0FB77BE0A385775B5AAD8C42613FB894889B5615300C7782CE8E582C7CE77
C15B25C1E3DE2D182ED486E8C7F31128FD23E447E6142073> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDR+STIXTwoMath-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
297.167 244.301 mo
(\0216)sh
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
303.441 244.301 mo
(\002\277\024\322\005>\023\356\026E\033-\0261)
[7.66901 7.67673 7.67673 7.6767 7.67673 7.66901 0 ]xsh
280.626 256.605 mo
(\010W\005\237\030\355\004k\010W)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
318.971 256.605 mo
(\037T)sh
.797 lw
-13.0653 179.011 mo
222.821 179.011 li
@
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 2 GetGlyphDirectory
12028 <0C1C60D8A8C9B5EE317638D54A5A47CBFC136840D95356F6D40AC67B8
B9F4DCE07A6DA81E32603BCFA9A6B372F49E4697F9D477B0A1DA24557BE15A1D
7757976E9BB237F2F6B112435C9AAA2AECE841BA8BAC9F19887E6CD540EB06FF
CF9A99A6761F4FB0A08B01DCD5B97C38520B61F177101F38D85974A707B76FB7
4C616086B286617E040957DD7515C12E1FE2A531FE32EBAE6A027FA81DC19A55
6C9CFE48A7F8ABD17EE1F7C4D65E1CD4D80C3216A60EB3E50A489D6E661500A9
BA4CF5F8B2C756B97D85E86664EA2BB14C3C865F13218CFEBD8BE0A2F4A88F37
E359CD23B0688F0784853EA75F9A0D17D4CD7CCB4D45F1E852AFF5C5905> |
9604 <0C1C60D8A8C9B5EE31BA75A0ED44E7A9F10098948A4039B123AA2AC45E
4028AB57EC89467758C646614492DD95281D283D8D1FECB559AD2EF4280F6153
DD53B0A0534F94E02358C9BBCFA87DBF29411A2220268141D7573BA70383643C
6444F1ADC005E7ED5E402E04CF79820A55EB5BD62CDFF5554D36222BD6798FC3
C1E383B6281A09D37EA2916DC472CA39587B5CEC00D3C1BE61CD03> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
-7.08727 195.437 mo
(\231\330.\265)
[8.6276 0 ]xsh
87.5947 195.437 mo
(.\374%\204)
[8.6276 0 ]xsh
.4982 lw
-13.0653 203.127 mo
222.821 203.127 li
@
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 22 GetGlyphDirectory
3311 <001C60D8A8C9B7E2CE5B7CDE2FC5D62086F8817DC00DD16AA8074C314F
CC217A2DF7F04248A3A40E74C236F29DC0DB617C748038E2D640AC123A22F0A8
D3F4E7FF1AE735C050091480E1B8501D11F7F283376F19234E9B523463098B23
F3DC860448C99C0DACFD3466210F924921F97F320AA7213D> |
3312 <001C60D8A8C9B698731BEAE1F013D53041543C526FE9B258A4F28F2B76
A477FCF4975A89A62ADBF7E2F3A22419FB1BC26D3CD36144C825CBA15F8779C5
CB00AAF0FA9E9D2004EB5E8603EB10FE49F01FC1FE2327D041C8BA758F24EB14
C9E09D96D70EA17FCB75E43B6798B8A6073971B983D9EB05625DBDDBD2DEBBE0
7EC94D888D3D5A837F9E70B61D3DE465C7> |
4684 <001C60D8A8C9B806F54C57D34ECFC7D083E244E898A850C610371FE0A3
FFD6764457DC4BEEA0A2B895E981D1586C98D4D8AE2253B5997060CE988C1C09
012C8C35A84E012B5BD128B68BE421F135AE7149F07B583102686872CEFBB201
FDF17F67FA5CD49B78FFE9F658> |
3339 <001C60D8A8C9B854D081B7257E636B4A515E751CBE3411FAEA63F14ADB
12D836AB63F7330B459B0EC94144489244B83B60F9D54BEDF90C69E31AD5F194
932D3EA5663F84DEDEC125957415D9438F7420A9B99E1D3773AB7751180C62> |
3331 <001C60D8A8C9B7FA137BF42A9F2A41E36A4B7680596EB3F444DF0C14B5
A1EB1B21F218130D0165B60B3F25D3CE348E3170B73C872D1F68C0CD3F496BE8
A7E950937E272DEB8490223E57A8DC73F50A3252054E65ACA02D48FB5DC3D00E
EF25E42516929AD1BF4CB6CB4E9CD0AC7C600A77A9E0DC1A544B7B5DD5D4425B
F56C0FAF261719E86647A0A7A6F30C> |
1064 <001C60D8A8C9B807CA4291AB8257406A395A4B2380DFC664D72F8BD22E
54823618A791C3AE72BBED6D974E979732EA91E9998A477F96D4C070509A5CE7
92E00A16B3CED8> |
1938 <001C60D8A8C9B8476F031122C585AD0629D74D620D951004F7A8624767
8B493193A214C6775ADA46C24C573512> |
1065 <001C60D8A8C9B807CA4291AB8218AA3E0616F43B5AD50BFBCB554EFB94
BA104CFB185E5366BBCC3E85503D67F34F5D68350FEB8D92E7007D622BDDDC95
75AFFBC740F1782453> |
3380 <001C60D8A8C9B5EBDD44071F6119D98623BCD062F9B8D6BAE01A13F797
FE613BD9C4514569852FD5C32323F9CF9C98AAF387B7B3D696587C861AADDFE6
B09CCD401BDB1A91D40A94FDC3E40252D81A6DCFAB6643E5CAC7EC3C285E72E1
13EE84A63459A460E6C16EC41670C6AE8F00523C7CF11297E3D11EAC5008D425
95A8FEDB3835BB38AAD8ABEEC9604BC2F914CA5E9DD5465040425BE52D25573C
A8002737597B066A814B87BBB38476E8CD907EFE016F1CF28DADFCCE0A742DB4
AA0E02E07FB8362E894F54D0F7A550B3F9A858E1> |
4535 <001C60D8A8C9B772794CBCD90E353C05D6578C4D498270127C4020E937
1AF0A52AB0E22FB608A3547765E81C68E6F5C3D398AD3A75D94D1630A291C08E
3C2300C9DC872693C0B72361> |
4536 <001C60D8A8C9B772794CBCD90E13C50F70E850CF5656ED63ACF2AE16BE
ED86B5D4B40E215E076FB9A64DD0069BF0788AAE02FA46C1D5951C04966E74EB
6EBDD4A7215D89DE8AF121F58C41> |
1629 <001C60D8A8C9B630ACA4BC516B9EAC64927259CF60681E1C58535F73B8
EF77B805A9AB13C09601C6A481D861BB23F2601257AAF5853320406A77442B64
F046C7003F921039E7EDE7BFE05CB153455D721F72A576EFD1D14CA0AC109907
FD039E93A7DFFCCF08718613039AA1683D81B0476F> |
1236 <001C60D8A8C9B60C97AD343A62955042D5F880C380C9DA9D09D01CE443
14BCBF114EE2A505C6B82399C0782B516CF7CBD7859C352FED988AD992D3BF20
F212528A49E37F5F129ABC465DD73547DAB3CA47FB02BDEB946A3F48472515C3
F9C6625D43D6E2FDB2FA5576317130D3993BCF7C283027B66FF6CDADFB85BE65
36CE4DE507C068412BA4B8939CC64B196F8CECE73CA5C847ED607464EF5C18C9
8877D2138E4F1912CB> |
4656 <001C60D8A8C9B54AF3F5FA1EAB12A1E692218A1D10D8655DB0D727CCC7
FACE599966685CAC91E28A6C96C11661B7E7905FCD08309B80AFF9C9E3E36541
6043CB4384DA96B7981E38BEA6056B88B2BF538AA633077ED84CE53EE72E5556
BE23AC062D523B356A230C2E187D8A8F4CF408FE19889BD33B19AD8F52E5557D
52E176D7B09E00CB1F5E94B1F10785B684F1B53E0AD740AD6AA1B198F40CD30A
3BFB64CE939BDED61EFA50A43D> |
1200 <001C60D8A8C9B6422846B550D86463CA53439B511FCD5D5EAF1D83C0D7
744256EA169D6781519A65BBBD23A3F201A8EC119DD93CC888A785226F778785
10F1668DBF236C7ED0F6AF> |
4533 <001C60D8A8C9B6EA91C1D038788405276A9D8CFB5BE271FC776AB75F40
E1B3> |
4523 <001C60D8A8C9B7EA3AC73239691A85BCD0C4F9BDE0B33C5FCC116816A5
112536F5913072C43803894489418E84BD0927369CA451E6F153461D54527DB5
724A4E610D57BAF5585DE02976B0DFB139C3EF4F55D30F0A1A2454D2D5241E53
D6D1B6A41F5B26142F23C0A7CC107C> |
1197 <001C60D8A8C9B605F8D38B1BBFBC75A8C1ED0C508CBED258CB7F35A7EE
BD4A> |
1138 <001C60D8A8C9B7AC355578F0AFBF2ABA49231DD42B98E13BC66C31BB11
87975D4B1EDDEFD42BD4E59A726DCE91358EC40A5F077CBA7C186B55BA13370F
060B7FCF> |
3385 <001C60D8A8C9B7F942B6F8F6E851004AB4F53A7CC1C617701C37EB3C1E
A496630BE6205CE07EE9BB7E4D0AB081B0A8C1EC3F885283CF753648678BD5BF
FDE8E0C741C8637E6624CF50552CB1EF8DB59C638E7F0A5A123A91238D4D0D97
932BDF7F7A1B8EF6E4E69E0E50BC9A1B8D79A68BF4189A2C7F24BAAEBFA48C86> |
3411 <001C60D8A8C9B7AB67A0F04CB4153BA88C83F387FBDD2E6572C6F6D5FA
09CE7A4758A26D7A6139AF854495C7B30D546BE52066A74C643CE0C23CF30B8C
97C203B7301B9EA8A2DD1621B5F36DAF7699B76BB6AED3B5780264F8EF9CF1A6
42CF60AFA7A0EA38EA53FA2E4415E6ECAE76E57E99B5E9974B4A1F7A7A1CBE79
C9589F11C6C484D760FF727850B906> |
3384 <001C60D8A8C9B7DB13B16C0714EB5EF75E7275FE5CAB94AFE79069A372
98B1F97B0746922E233327F5F0A4EF0456BE0BBE8F81DC43FEFA36F35006BCDA
F780905DB0A6758942F86F74AC03B6C98BAD562467F275E15E3DD8A911B6BEDD
89F483BD8F0D349DC20F8E4D30E396B050DD88D8BF3F23968052A79503F5F03C
70D63AE65BDC628BA7FDBBF556F7BC5E3D554CD42AFC3AF16868EDD1717111FD
95E5D0AA13EED86C6C2553BE67716CF7C21E8113781402EBC11BEC6659E91486
FA345ACC4B2DCDE716F13BFB965395BFFA9D> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08727 219.404 mo
(\014\357)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 19 GetGlyphDirectory
20442 <0C1C60D8A8C9B5EE31764DF6AC02B1C29DA9F84EA714F104EB2DDBF60
D9EB4A4299BB9B2F4ABBBB4546AFDFA102DA279B58639DED7A67FD68269BA651
3DE6543A8BEF35F82D185304BACD2B8D94BCACFB6581F9758BC83D547C401E47
29C9790F2007466FDFA3B1A4616067D07B08B36CD8C57F0F8424FF3710245FB2
6BB0CADCF9552565B592EF7BD555FA4D6D0344FCCACE329B49BD04D39B501ADE
27844DFDDC129EF54DA2F3AAB13E785F37A84F5C6691CF1FDF79810EFE6BDD93
CFE26F2DA6E18A75AD6E090BCDE286B61541FBFE59410778DB583B8F67F30D82
5F69CBA9B5D66AA73BD2CC67AAD8F309D8D6D4E38A115677DE46D94B89C0E656
3F940BEC8A8AF239565F40AF50D522F76A5C194CC35A4075B727A28EFED06AB6
465D6101B880613AFC3608463439EE87EFBBD6C5A399AE1617C58CE8C54DE31B
0C969B754165513C508BFF5E460489F457D4CA80E8E6C3530A9D9240725C4531
037DEEA1BFB5FC97162F32D776300760FA7F45457AB43DF2D32B79B6117D7E33
C4661924EDD0AD44F0D472ADA09C5C13EC356FC69A5CC9660BC6810EF62D45AF
54688C7709049BB83380FFAEA2659D61A270A81DAD2F358E7268C23EF49E9CE9
4D80B9851880FE6089E9BC101AB32F9E4ABAFB0175597E1D60F3ECAAA13CA351
44C028467A229E5C243D30840> |
30552 <0C1C60D8A8C9B5EE3176D77D58C947C6A9C3CA9BA4CE9D84039208281
4EB6D2278D59436787F4C883AF03801873B26BCD51D7D3BBDAA98D0CC4C46750
92A2FEF843CE0BC7B175EC3A763DD91A3E3EEFC86441C62D7173B5A05DB4261C
39986DA2EF593B8A9783F259207E7E60EF801A576789E21B4F664A841764BCC3
DFA0E3435189155529536B4FCC5E30C61C629FF246EC4473FA60A0CC07BC6DDF
BFC01884FB03C9878C151642257A1867FF0CC723512B5F035698539EEDCC2D69
BC209C3C62D904BC66ABEF0541BCDACFE02CF3A9EF64D24902EB53F1F0D92180
0CA9253F226DC20104A6B561CB5E72092420842CF852A2FC414E8B2306BB95D6
56BE00FBF2F83C69540FA1A8CE2248D342F1D9F391DE7481645A32F932B25267
FC19EEF0ABCE438F07000D53AC1ECD7F336497EFA4A444D5C5607F4495B28D19
C7595346080210FF3F1166E70371DAFAD6E05F20FC4193881B22E8CF43CFFFD2
0456DF6EF0058E60F04F5A4C4FCB2E94F4E4DBB8A6114A6C75DFB69719D7C147
926A56F7933DBE72A7CBE92C1012C99ACBE34736B3A289E90E79788F344BF6F8
7E60A5CAEB575770700C9D63E9EB8D55A2567BE7AD578FB1A78C24009E177B3B
EC1D00C60E8343F61D9AB636E901CEA1B5BF7D6E7B9DF45FE1CBC> |
10855 <0C1C60D8A8C9B5EE3176E7246AFB598E81465629F5F23A0E232096E22
7D3237E80D7368D9D4C16A7F294FBD5ED56F36C911CA0C19FBE07AEBD9EC5298
16D32701A4305DD02D2F4AEEEC1D83E6AB872869CEA8DA878D877C23DE80BAFD
B69BE96A517D73DBA9524AA193798F780962832B56DFB1111D4C7885230EFCEC
C9B2817FDC6FBF32D2F8C958B06B02BAB7C8899B3CF433184BD99D1A93258893
68B1ED242A796D5286D9A4C46CB6D57945C120E5DE36B8BAB95717D6D104B22F
EFA13EEA7B03F7ACB36F410FBA282> |
9559 <0C1C60D8A8C9B5EE3102908D985AD6490F6EA7AA9101E535F365EC758E
18EE3E3CD92C7B36E35F7BB489455E81AC90C81EE96FE8CACECFD9D15C836A3B
FB1DD02B372FCBF94C3E5DF4A98A6A01D113841ECDA595369104828CD2567787
B52C6C4017572DB51614DB920919137C8DBFA7D4AB2E7CFB967A299E> |
25033 <0C1C60D8A8C9B5EE3176FF3F26ED5D9E0A4E217E64E19963EE8DEEF2B
D73FA7FEB7862E9CFB5A2CFD3FD1CE17EDC872FE54967233EC973A0BED530EF0
28B0C9778B0A40EE1B72399294A590EC6ADF94F46A0BE4CD1F96F000EFA98A09
D002516FC47E7E1FF49A721CFC33A5EB3F44003E7076667DE53A092064598085
7197A6B469C5924C110360151130C74F035E6A575BA4AC2C65FE548FB6D98DF3
92B92E91AA0FA96B6BADAC2E1C48247BC70C21480348A4657162C311F0B49429
BCFF282E9EC717B4A5ED8EA226D18CEC0E5ACBDD64FE89E9FA8F91D1C72E184C
88E290487E407E1473E71A9C956709B757729BEFC55C04BBB30F118E49595039
449FDF2837A742D9AFBD28282FC969AF1E66FA870E70706EFDA06A74B9EC4E96
A8C33DF3FAF56DB0C887164CC9265A166722F5134D134CDBAA67BA5211997BE3
5F1C87F7B721D0421A2C938F8FE64AEEA2F4D027E7492BBC81D1298ECD335B80
DF0A6916BAC04FC982F36C80A7236C44EA75B0D463DA1E95C33854D7BECCB4C1
5062A3BC35DFAD22C6193FCA838E62376D5858B8B04CC128EE72F6C30625273A
3C53EDA3FFD4793B4D7721C673B939DE8B9FCD0971FD6E6DCBCC900A72D1F373
C586575482038DDB45314881BAC88F6BC60CA4C3C338AFF70126E1A400B40BA0
1D314FBCFF4AAB303A1BF436E37CC5245DC5BE046EDE69CFED47968B2FDA1D61
A513BD0081957346018C308A926FFFB9885033957DBBED5E79A51A8665ECB60B
E47FB8835C6B8785C64B7E3FEA1725F5803E41D8178FA2ABE63AEBFB2AC2B381
AE65C2C8CC49A9B2CD42F0C230305AEF983E3F6C603A2E02B6FA0E723E1E26A7
F3EE907621CAC9E7B8CDA2D7F4E914980531B4F526A7E60E284A49704ECF9AC4
7638BC5C7F3CC3B20A552CBE583A7F240AB9F7D7FDF883114C9AD48509E44EED
36D397C83AF6A4AA78364DC> |
23899 <0C1C60D8A8C9B5EE317634EAB4BD188CE1E6A6F65EDFB69559F457EC9
3676CFECA78A22332BCE4668CB6DD61FF6055372A6CA8832CBF005F6E080BEFF
408EED7EDF4FC6D23C38D1F11AD9CCD8C257D6B5427B879481E9D612B5168FC9
775000EAB9616BAB8C0536CED4DB3E74484028BCB54B68D11DB9E0834081DD33
CA1796A6C00B155939B71AFB2A0229F3E7E8DA4FE6983D0FEF47743DAE288BE0
74BD7ED9476003A88B0E6EFECCC15CDA726AB9937352D9FB9B9D62724D65CC23
3AF1E33926B06DB2043819E0D698B51754FFE3EFEA74BA8E77BE9A26F3DB6B62
275C48D700F3EDF6624FD98FB8F16423B63FED86E3E9BBAD49DAD9913193A845
7B82AA8A983472B375C264F923F17047D92F6D215503405B4BF92E6C0AB4BC77
9C9EC08C2EDC667CC46D775D258F4BA807F3BE21D50EA5DBE5541DD949368B57
476F2ED2C364B847F45D8F14813BDD4EE682DDE5D61508F50D0F1081E43E9A4B
E3F7CF14A6DE849A661BF7E931706A78FDB7828751AA76F2AE6> |
11143 <0C1C60D8A8C9B5EE3176320F8F4722D862E9718127B60B0A4AF39AD7A
EA8B9DF1BD6D58C3656C7BBE12870FE76B9C965E8245C4B4B993CB97A569DC70
55381FA5134EEBC41AB03B83D0206C263E8E4686973FE766C0A773DC19DA37B2
646CE790E5C090CF21EC784CA639EF45857F6BFF7CB14E01527F9F03B9A7D6D9
45D7A647156A36F9E992A001110608C697CA9ABBFE229F9172997898BBC606FE
1C02843A8C03477EDD720BEE6C4EA10703658FC6E8D12248A43AE2DBB9C1A251
F9ACC6EE009BEA7CA4EFEBEE1EF67909A3FBB55B1D5E22944FFC8985071329D4
AF9552FE11B6879D4E9B075B456E5D04CB5EE08E703FEACCCBAF594B037913F1
836FDEE4978A95E99A923B38FFFD383E3F37EB695A672FB33A3AB5D8297BFE70
CD58C706AF76510ADFEB7F4D3BC34B7DF779143CDFA8A29DB7E9731622B6FCD5
C71903A66A154CE4D5E43B93F0A2B3AA45E68DA2084A04DD96548CF6BB93CEC5
8BF0B11480720091EDA5696484E3F0F718306DB9E556C6F4AB7058FAF1864060
7CC655106FED62B8F74D681D63D92C870888A5603F36A7A852BBD6EFB31FC191
A02794593C793F9F9D86479B6EACE35DFFBE588A14D5DE2567406A9C5A9E1775
FD4062C9072814180BEAA1C439B400BDD2E6989A7421BC41A5A5A1B9510ED3FC
6429BB12669A03B420DDAC7806B4F6BF413B25468BE5669E77B40CEA4FDBA09F
100148D89> |
11218 <0C1C60D8A8C9B5EE31764DF263564D0562D0AFDB7100889B57141D9F6
A0B1213780AD294AEDABBA4316DD39F4C7DFA3F05BF7AF5EA92D85B09E89865B
09552987CC1735BC3B318C8BC2023CFE5016F2824205EB8AF52A7F107C6B8513
8CEA1F7AAB1C3456A6B3A50D7D6CA90AE2D1CC915D311705254CE4DA0B6058AC
67C8BBB282CB474D747569013A4A28C83E35C3C924689C3B8F5841AD203C1A1B
C69E7637977CF45CA136C31EA92A5117997328E7E9068265C608F0870F644BAC
C6B9187FFB882F366254F0ABBEFD607615B2030AB23A77923BAE7B1F47C2BB46
F6BF947C722D3A4FA982433903D887422FFC58417E838C43B68C17D9CCEA62B8
FF57ACEAC15A4535F68D8D3915C0A57AC87A9280FBECE1BBF4D57C89DA88604F
FA406E37EEDA00A069BD8AFD53C7B90063083D4D2434BB9A3467612F12FC6439
E98256C21A262F69F1F616031C3E48AED080ABBAEC3A5CEF1A85D7A2BAFED5E6
ABBC5709AAE62E203B92F52537EDF94C07303C1BDEAC50EF55A59DF3E5F6C439
51A7059158C325F93CF6D1CA2F4CD70AAC04FFB15FA6632175D50C3F0358BCE1
E2D4C4E60149B61F303802B00D95A9B7671E670DAADD513A82F02270E98F445A
A76B0A11A597FA476207215> |
21238 <0C1C60D8A8C9B5EE3102E49EA1C42CCE86D662AB0F45665B688C0F825
FAC78352E38F4DA3E8839C481EF15D775068D92D0A261A29352C22038307844A
2E72DF56884D5BB4E03BFC4081A269DDFE5352B54A3EACF793EB01673D9FFB5C
876039804C6709E67DDDFA58E08427C09E964B18197D27A8A164C1200C6D6B2E
F7136FD6A83559C8CEB96523832B447B10F38AAF90526F6E6B1D1C3EA357EA1E
0AA571BABCA475543D42202AF53C8DE9FE9D4BCB32570364BF8EA95C8F098979
34186ED7144FCF235009E259EDB5D5FDB01D3BBAA28A7750749513B7A314845C
F93119FAD97C589DF82035A515402E9CCCB822DEF75EEF7> |
42216 <0C1C60D8A8C9B5EE3176DABA594174BD2F0C81E32B62CD34D31751BFB
E70FA2BAF2150D51C20F154E2E0687C32289C07B4656AB7DC9E2694745F20A11
7663CFF9C94B3F3EF86DE06AD7767046E572C83EA84C87634409CBD0DE549776
D44B2703C199B1342BB78609824D0DF8EAAE32E3719772F16A4CD93E1A054529
697899FABFC20B6C3E07D40291A46269D259CB72E0DB1618003224AA978470D6
B9D4C45584CDD3ECF7F4B4594A138E18D4611F600BEA919F9CB9450AFF3BB538
3D7A487659ADFAB3F0B9097918A890A740EADF3CBF8C151DC76944AE59923C20
376490B9002DFD225FDF630D7B192BBE9DF4E18C60EFB72D83E24ACD13282648
1441915DD0072D040F9F6A648F79C5C86FF8F76677F02D9C45BAD2CECA8BE528
8DBBAE0F4BA6AAAC95561CDAE88D98700935C3CAB520B79CE3D7046DEF7F95D2
B0FA66988C80677F057EF810CC63A> |
28952 <0C1C60D8A8C9B5EE3177FBFD2ED6BEE6A4A3B56E327614CEFB6F87765
19B7D4A2DB03388E7E78A59AC66FAA71F4513366F8B2F7CC0C609352281A4898
D1B7264621709E712E29963E8B80664315B7C63311DF477A3266A7C7DDF28857
7FE89BABEB219F07E5ADD2A656112873C8959DD5BDFAD9CE4144B5E3AFE459A4
AACBA3E257691F8149AA5BBB9CC211425CA0DE65FA8E89F46596B655A5908B80
437D3ADD973981BF33B09C52F2DBC65813B9C912780F7A2A490499525BAC4ED1
50B6EB46C0E551AD58E0A81D50AF9144A5E784C2919E5BC1FB73B1358B755E31
B0CB6811FB659D8716805654708ECF3589EF0AFA3E3953AA52562B070146A769
DA8575E4D33444F765A7C848F01CD976FC1D74E386A9B4786F3B98987BF473A1
3907ED35031B39C3A33BFDE4316D9CA4F54CE9AE4DF2E41B9A6AB7C901D2D842
8EEAC88193157C36657442121805B6867C47329AA39C72F25995831793BF8F9D
E63A4115F2478E7741890F992C78C2E3048E26871D3E0BE81CE66EE9BD359DDA
B1B60D2AF9557A7A69CF8F659088500C1B6640F8B2EA9BB200ECEB1365A7F6F1
FCA477E87B240E736C66E70BAF199924F95672191C76E3DFCF35EBD25646F> |
43924 <0C1C60D8A8C9B5EE3174EAF7A24B86EC836BEBD50C0BCB8EB60D5DAEB
66D09BFF805588FA2984C8C7178EEEECAFAF3A25F3BCA5C0B09B7613FFB71746
8E53420AFD28B448B705F289165A09FEA95919358D890BFB0D7925907E8322BC
4A0F98D06DF656945CC6E26647F65AD485F3A858465EC5A7A0847F9096E3F149
3F6315DB151E18F36C1B2D35D0412572E1B8DC7FC4E15AF1819CDAAA179686BE
DFF88FB5802A368047659C25086F602FCF94D00D0BCB319989631BDBC22582BC
55E2C2702A24C0FE6F060144B57C506810AFF7C7A62CD2F3F79332FAA7824705
A7C5A789ACE5CB23B0E2BE0F245FF3F8AAB23A076A32F1DF8A02B5E21DEC4760
8DD89954C0283B18AB14C90B731F4B974C3DD3216AFA4AADA0A43E32D73D93A2
6A69AEC3A41167A44C965017752DC68A9B4FAC6BB6614EFDD8F92B123E157BFA
224F774AB415E269739EBAA258C4394E4F13B30F1B5E6CE1D750D3DD7DFBED39
F76E3068388D9EDC01D48DDCF88F74C86BDF0C63B90C5B29C6759D9FCB583D2C
72B73AE10264F63FB857722B322341440AAA916657BDD1AB557B66DCC00BEF20
8BD7A9F4DB80B3114E4997230BB0FD08CBE1AA24F61CD03824D3E49D489FB6E2
459A7DBB45BE4983725C3> |
10399 <0C1C60D8A8C9B5EE31524090936EE7CE6A348740A3DBC02A2B515B1DA
2C121361F945F87CC4775C9AEA7D87AA896E7C3704B026B96C8A55E8166132CA
F658092437D2301D8BD38A1A8374F2A9AE591B60FAF1303D3BC71D41D5B3B9E6
2DEE6EF9D94F3BAEF2BDA75AE1A503CC5EDDF1D8797B912B0660E0CD7AC72882
9E134E04F359F9A41AD539B49870B57DC2065F5F46C82456E61012E9A00EC6DE
6E2EEA9DC5AA978F897B12922304AB34E92180CE1E739E44A23C9455D208712B
6B1CCAD2092381D79D5A31D34DD0F4F90AA1ABD6740E479BF543AC2715D32138
390D517B81549BA952FD3A12DB4D993868C6008B77446E86FD0E0FB280705550
41C030F000BF1071A4F4AEC264F62A29218C524557952501845C22A65B6AF01F
B5741DD29DC6C7C1E194ABE2B91C7C86C891AEED62BCA785607E123EDECBA226
22905A3EF0E0A6051AFADCFB62CDB9FAE9370E8F3E5FB41D9923B5DFDB5C6226
E0AD335501AA0D8C01F1E5C8202612C4091519F6D32ED0180343B135D3BE435D
A31B9590D69DD392A6DFCC3965DEFDB02BEC86921689DBA37E5535EC9DCB71B1
1784550E25405B36F36E09F044C1A459F107F8092> |
32734 <0C1C60D8A8C9B5EE31535CCF84F4F3104420C33BB9C98E4FD236D68DF
18673452407E425126C5DEC1691570403C465CEA55B550F6A8D9C9B4068B31E5
7C1B2421AD68317FF73C5FC47E5048AAC732C1E8809D3D9A6E4EA87A2E20EAB8
4CC34CE1BF96AEB1602AA4F8B37D47DC96529A5BE606E66442389D26E7903004
575AF103A1E2F8B7F4F6EDB61EA97F7FC18D223A50004F426B086D9D23057E84
10A06F27210F1AF4835C7E9DB8675FFCC5D475CE7A173B07BDEBC19904AAD6C5
A35A5A3071A546F4172552E4008178AA014535A8B89F1213ADFF0DBC82A272A6
00E74061A4E715F8F19CED83C3D8AB4D65480D9A3029837DF069ED9F6A955966
78D40119D070341A7AC1E28637989847EAFAD50C002336941F911BD79D040D6A
EC4F809210EA2DCBB571E06663D8F6F03B966FB18719FC6404FCCC86CA7A7167
39AD07DB3882A17A21869F9E33F56011A9BA4770E44DABB66E17D1710D4B5E3D
3A78CE781A6437666DD5D7A79E60E709B2C836D6988418A90C1270006402B793
D9F31AE13F22AAB97E6F40BBEE0286196592201401F6B51186CDF132EB592158
96FB1A8BE74AEBA86ED71A3> |
11045 <0C1C60D8A8C9B5EE31768417A821FCCC1AF72FA5DED5E748F19AB21AD
DBA9FEA41AA7C522A2E5E68E83410D51D9449723B1495D3F61C71DA0AA981E25
2D500817B810770B4DABC990C7AB5763423164B45E910C1DA0B6B40B34D3D4D2
398FF42E99CAFCF557E0886B24C437A5D658CDD64713EB953D1FDC32BC5F77FA
BA02E7D2CA331112410D475614D4C47408241B26CD98EF82DE42966F193BF028
5F6B75809D501B4FA2CECEE1A7FA9B5E27635C012F96BD69CE2BD0B0A3396100
25238FE2975EF2FE848CF4217F307B025528B82A1DCC063DE3827E6ECE436ECF
AD6C5FF4A913C6A66956B3976CFFE99438E4DFE4888A2C77FD4B6865E3A4540B
F14BB0C2852E1932A1C0B9B92A31674CDD880D6550E02855303B71E9C06CF5AB
E8F315A89D27F1D56829DA219AAE1EA745BE395C1FC3165FC4F2E136EF1E8921
5A682D3EEA9EF3479341750910D9063E038926C493DF12045E01E64E75CC9747
F4630453C9B6408C48B4BC9EDDF499C6D52D38E30BCDDDBF064FE532EC83E476
EFC166B1D49CF4BC349DF30642097B61106106485B5751AA7A17633890F49872
283739566D0278CA74E4083386E156FEAA3D6DABBFEF5FBB25B5E0F6EF260F44
814F793C3F34ECF17CE006C4A17575572C13D81FBEED09BF04D> |
40962 <0C1C60D8A8C9B5EE31524475A1B7C77E59DE9CBB154CE538B003CCF92
BEA23C88338F756E67EC33C20C5228908E8ADEE428AA947AB77594CF5A4DB395
EB98EECBAE5A00875BF52EC4014D430FECA496A92D7A474C91220E5474AB7A8A
E07DE9CAA3F35C2D867929A0FA5DA4F957FBA6091E84C7E8B9475D9BAF31AE58
DEABF26EB7EE9FBDF21CA52865F1CE99D8768E79D9D959FA739AA8801FFB4FCC
04C4EAE5CFB7D4E9D2CF3A1CB581D93A3B54B1147B0304CEBDFA34D5F46A01D6
5D6AA5AB3785CC7A159C4D584071CF14FF8BC3DA65D4C6450580C3DBAAE397C1
CBA5DB3EF91DE165877C34575078C2D246E9F2808277C72927F33A08F504174F
99C6B6CE0970800AC9BE9F40D47EE974A06DC8AAF41DDE52CFE1482B2633AE35
8175376C631C216EB837FB57738E8293A32CBE3A43A39AC1241FF21DAF2FA4E9
CA7C99EA744EC9F28396A57B4E75CD6A8A05654E55562D157A74B5D0BD90A963
356339844089C0B162ECCB04326C1E3B2741F6AB73AB1C7B098512836B07A22C
7E565228AE973C74099BB77CAAB23117B3C517B9DDFBC761D793881651E78967
727900773FB39CECEE0D97DEC9A597C615373D64BB38415A2AEF4EFAF264101E
22BD1D7CDF3909C06D644F3358B0960918C18AFF60ACCE10C2353E00E8803A15
5ADB7B5ECAC3427CFF7BF885EEF5E7F77028D8089E42DAD29B42A5C59A86E9E7
4A976D12E5764271D23ECEEC00FA82815F84ED34D52C5A29F76EFFF170ADDDCC
195B82ED3E14FEC20AFC5D0E13F9D3B2979048FC74BEDA308F68185DDA7C695E
5CFB17DED90BD8D3C148C15860C969408309D187AB63BEF48701C9FCE8F44924
F7C21E66D1B0187617C101E6E7015281750> |
10909 <0C1C60D8A8C9B5EE31C465F4611F17F28A9AB9F179E3E0A5C6EDAF4F9
A70917B2F409E024205F1D2ACF135A104BADAAACC6C3D8B00A667E7D7841AC5E
5721B85F3FC2BED09D8CF16AF3D0F1D57E57F72BAE9E0C668CFEE9F6FA9A685A
F851F2B3D2E3C8E4FE9AB0CD34A5C37> |
17998 <0C1C60D8A8C9B5EE3176DF8EC042671A49CD2C43C0BB56DA7191637C1
B15EAA16F6DABB8310AD66826B4E657D1ABFF87A21FE94D9D8F8A96898AB7FD2
DBDA49E589459F5D1FBB25484097453CA71C8F8A744FE7F17D6593C190D86071
B7D2EE660464B38773309EDCCEC02D60F837A7492EE005B4F9F1662D5E6B8967
870ED5C4841225790F3A7D45D14BA94374CBC50C71E8068E3DF9E60953607844
0878EBCD8787526052887EFCE4B49BA62A1B117557B0C68683565F6C94E9FC40
786826A9125AEC18C549C23BD1794D2626A64967442C5B33A4CBCBFDDF20A1D4
266DBF2BB5A459554ED365E89707B981FB28B83DD3CD04FB4B0061E09DF39330
37A671EF160ED778D7ED9D7099D222FA02D8D625C6B50E6C9C3426EE91ADD806
5C999A9A78CCA2AC95E8ED0257D415AAA6F3B1797DCB025ECD391D41D33F0CB2
6F1E970FB7A1C4C6805AB0F8B3268DFF37AC945FF187CE031317FB26AA157373
E98C8D4E134B71BC5D54C5E4882A24033> |
10365 <0C1C60D8A8C9B5EE3176D203BCC1CAC8E3018EEF296B497CF9D7B36C6
643DFEEAFB5BFE3C13037A73BD6DEE13D95677320B7667CA9A314905B9646C31
38F3BB8B1DFE4624DD35AC90BAB1707FEC3F49A1A2BD56726A13550BDD7E9678
A58E841A2CBA2CA54763681A2A7C4A75E1A1D09566B8F702FC523D527C3FB8A0
58572DD8A6B483A7C669EAC60572AA667A81AE2FB925904422924CF3D2EDAADC
D90844039ABAFDA74C8C402894601C44EDDF7E778E8184191FA25E8E07765F4A
27ABA991F4115C5F02311EC691D96ACB55C1E33196B967A7024DAAA860F94B63
545CE27418267256DB3C72D48C8C3C7A1F69508396568AD083E3C1116B04AAF6
698CD12937F53B401F4D9B7950C7963FD4AFE734A9D393E67EABE10510C4BD5A
01F0D3A5650E779EB642F0A719FC630CFA9EBA49AF771D4AE1899DF2F690340D
2B77ADF259C2BB085D27961484C7517E44F219234CCFFD5FDFAA84FDB1305BC8
9B65CB15E08A035E7027792120FE9997DDA2FBBC5876D620EF1DF36D4A1D5A06
564A480DFE3A6146D56D949F87C0985F3DC66033A1D7B55A753243C8762BC03A
86A1B52D9F457F4C2C4> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 219.404 mo
(s\230\177\013\177\261\177\030n\270>\202O\332)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08727 237.924 mo
(\014\360)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
.703728 239.807 mo
(\022L)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 237.924 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 237.924 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
101.584 237.924 mo
(>\202s\230\177\013*gn\270%WO\332)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08727 256.445 mo
(\015\003)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
-3.69827 258.328 mo
(\022L)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-.893272 256.445 mo
(\004\(\007\222\004\))sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 256.445 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 256.445 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
101.584 256.445 mo
(>\202s\230\177\013*gn\270a\311][+\207O\332)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08727 274.965 mo
(\0154)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
2.74873 271.737 mo
(\021\267\022L\021\270)
[2.73177 2.30143 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
13.5087 274.965 mo
(\006]\004\324)
[8.76911 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
28.8207 271.737 mo
(\0220)sh
TVZNDR+STIXTwoMath-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
35.3487 273.418 mo
(\022L)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
37.7697 271.737 mo
(\004\260\0220)
[3.91532 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
48.2127 273.418 mo
(\022L\021\265\021\253)
[1.91785 3.78082 0 ]xsh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 274.965 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 274.965 mo
(\015\013\004\255\004r)
[4.66257 8.44637 0 ]xsh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
116.464 274.965 mo
(>\202+\322wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
143.692 274.965 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
147.709 274.965 mo
(>\202n\270R\366\244\350q\030\253\224)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08728 293.486 mo
(\0159)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
-1.90528 290.258 mo
(\021\267\022L\021\270)
[2.73177 2.30736 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
8.85472 293.486 mo
(\006]\004\324)
[8.76911 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
24.1677 290.258 mo
(\0220)sh
TVZNDR+STIXTwoMath-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
30.6947 291.938 mo
(\022L)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 293.486 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 293.486 mo
(\015\013\004\255\004r)
[4.66257 8.44636 0 ]xsh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
116.464 293.486 mo
(>\202+\322wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
143.692 293.486 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
147.708 293.486 mo
(>\202n\270\(\237\177\336)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08728 312.007 mo
(\015S)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
-2.64028 308.778 mo
(\021\267\022L\021\270)
[2.73177 2.30143 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
8.11972 312.007 mo
(\006]\004\324)
[8.76911 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
23.4327 308.778 mo
(\0220)sh
TVZNDR+STIXTwoMath-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
29.9597 310.459 mo
(\022L)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 312.007 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 312.007 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
101.584 312.007 mo
(>\202s\230\177\013*gn\270+%\240\002*\235)sh
true set_gvm
%ADOBeginSubsetFont: TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H 2 GetGlyphDirectory
8014 <001C60D8A8C9B5EE310258A4F571A0BE7D132AD9CA52A35FFFCB8E1A56
9B683874FA93EE08ACD208A19CC7D1A092A7E02EA88FA5CB5F47DF9C31711385
1969D3> |
8015 <001C60D8A8C9B5EE310296A6F8AD055B3F5C7195D323970DDB7F7FB993
44304821144FE23B11BF6D893104758235DEF1DFDB00E83EBCD59BFD2414FED8
42C710> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [8.6276 0 0 -8.6276 0 0 ]msf
169.021 312.007 mo
(\037N)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
177.649 312.007 mo
(+%][FN\(})sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [8.6276 0 0 -8.6276 0 0 ]msf
212.159 312.007 mo
(\037O)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
-7.08827 330.527 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
-1.63627 327.299 mo
(\021\267\022L\021\270)
[2.73177 2.30736 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
9.12373 330.527 mo
(\006]\004\324)
[8.76911 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [5.9776 0 0 -5.9776 0 0 ]msf
24.4367 327.299 mo
(\0220)sh
TVZNDR+STIXTwoMath-Identity-H [4.9813 0 0 -4.9813 0 0 ]msf
30.9637 328.98 mo
(\022L)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
87.5947 330.527 mo
(wX)sh
TVZNDR+STIXTwoMath-Identity-H [8.9664 0 0 -8.9664 0 0 ]msf
97.5667 330.527 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
101.584 330.527 mo
(>\202s\230\177\013*gn\270\240\002+\203)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [8.6276 0 0 -8.6276 0 0 ]msf
160.394 330.527 mo
(\037N)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [8.6276 0 0 -8.6276 0 0 ]msf
169.021 330.527 mo
(][FN\(})sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [8.6276 0 0 -8.6276 0 0 ]msf
194.904 330.527 mo
(\037O)sh
.797 lw
-13.0653 338.367 mo
222.821 338.367 li
@
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 21 GetGlyphDirectory
9829 <0C1C60D8A8C9B5EE310DD9532103FBC8DD5A1667DB9E037563C9BB858E
9B1293590D3801F0790C18C856E1A78FD31D9F758AFB080530046115467290EB
8F7EC955E6CB0EDD9E795D265E2A4717DE7C6E275DCE49524AE4A24964536A99
2D5C6BEAD801AF4D769A555F56FBA9E9E0AF7A50E7C1AB1A5CFB40924F0CF55C
751C6D6F793C62464176CCF3D1A4EF78F842F0A9A1031E40BAB986A6D75C9D47
7A4601F9E19F17B50C0D7B927CD21006C9D0> |
41277 <0C1C60D8A8C9B5EE3176E4EF84DE4D150787087028A4453D8A9BF5100
C1CD18C4C0807F74E341470FC4D2F91C36212D4369A4541DD1FD019AB319D7E5
1528ACF285AE7096DB6E8B6A21F77B988B83979616ECB49285CF5C76CF92AB8F
E541D5D4A64ECA280302D64CC100B6B983A076E0713381919A9B554A10D0AB35
C231E1A38D084DE2E02DA090B0F90275C5F0A631306691E8D8DE158E5BB367EC
1CB6AC6B74ED92940AF0F351856E484F2E82163D6990093D4BE3AD894896E045
B8247F62129877CC143179F1864051A10ED876D9A86EF83A7BE5711EC7EDEA09
05FCDAB1C4106394AF7BB42BE05263A7EC9FC0B64E70460462F53281C4DA9110
494FB7F4237D30CBA006EE806B0E5C7ACED5353D7638CF2D68D2403FBBCC6BD8
DD495FAFD2F6A2AEF0995AB13592347F71662F8EE791253E8B26AF3C63D668F2
F979338B09E783461372B445E9742B9411F80BACBB786B7E1E1FD8547ECB9B94
61EB0919635E6F757B5413D4C8F2369B6BBFC097EF77FBDAF6059B1B3864FFA5
B02D10927D7500F2D7E37E21113E2D023FAE2DA8F718D1078297DBF42FA10170
5B3540D0ACFCBD47B8D5B12C7AF3BAE3BE7D8BCB7180D2D9DB26B3C674C71FED
4E0DB5393CE5C9FCA5F9258F626F8A2644C66CA46F4B87A0B6CDBC3637C38571
4A7860337A1B2AB11390926EFAC160F2C2F9E1D043C94> |
41065 <0C1C60D8A8C9B5EE3176E75878CE010CE339CDCE55EE0CA11E95B4BD7
4EB45F8789527CCDABD3E03C7576F56DB0212BE67D2E842136ADB0E19006CD50
A604963A1B0124AAB0F6C6B0AD202CB604E1984A4862FE781755647671A9EE0C
86D56DA87B1DD50C8D668C777DF4634A308A15EC47D01733979FFBC4A2B9B4D5
B52550B323BBB3C87FDFC4F0E5B6EB421931F2D4EF59A15DDED7A3F54BADCA93
95FD6A7282017513C6ECB7C5616229C7F476248797A0F4B30BA1B4E5F779EE2F
B4ACCCB2F805D9AEF5337DD54D8E04DFB3BF701F1469E9BF8AE8F33F85AF6C97
8F7DE9CDD18C9225CF50A99480FBDB626029F4611718E9B96793D422BD1027A8
B6F7CB983C9AE6C3B6537233347825548347865773B6A172F2FCF771F7E62E96
FCEAD76BEF7771C353BFFA2A3BFAD2BF8C3CAB822C630D49A6BB48415CF0870C
245F5606A44E0D9EAABCF2E49EE11FBD29DA284F6A57095593D2D7300A04160B
408D658DD50B82342395F01ADC3BA32A5C62BC755D0473FC85F12BC7BFF0214C
0950A5644EBDB177F27C86B80D97C452C6C77212AD4E2501EAFAD9DA6AA967C1
76E9DA076F585030F3040BE57EEEAC9764A8C> |
9519 <0C1C60D8A8C9B5EE31039A8CB6BBC668C55B6157D9C787C19E3C7E9B6F
059C9280DC26427ED5D800DA572DAAD451B4631962C16132C55917C69FE25822
19540054CF7D07908E618D4BFE4CB72616B561DA53A601ED31B861E7241017E6
43F8FDDF45096AE58CA553647E97ED2716883252DE764712B4A9C33B7988D5BC
484DF213F2027D3C0649> |
20547 <0C1C60D8A8C9B5EE31762583D1AE5A20926A304DFDE96AF89B58393F8
D75AF232BD261F179B48FA04F8902260A2D74D4802DF7EEF9EA2344F03208DAC
D5AE88C9DCEBAD786FEB19560FB2644643D7593A0C76189BCE1689A3C552AEE7
BDD24F10EC9AF2D7C2A4015617AE7724637898174F7141F05A7FE95CE8658A97
7E45312717BA42C2CE6987EC247F7CD60345D4D04E36EB877B00FC24330D3326
D6C626F5F3D478E989EB8A11AA11FC6CA8F894FCC845D6C5A1E88338812AB18B
CD294DD7182A78DCD30F89249BC6F6FFA768B92AA6E23BE1CA6E11A64D47C82C
3F2EAB7FB6A61BAD18111EB5FDCAE09448D50461569FD75D09308B377D4CC01B
046ACF17843E855DFA2319F24DCC817BA1A36DF8F68DD2EBB9E29241A8593944
7263FC09D658F60826D41DB252004C516CCF831F44C2E5DCE5D8506EEF38CF34
EB01312A6BB10D166D292A934602AD6252373E0BC15E6211DEB32AB992D1CC4C
F69AFD9A1C570E5D920FF6A37718E1704997738F7871449DFDA6D5944B205DAF
DD6EF5F725D17355911C2A24F5F8D383F4C3488179F8184E1FFE793C6AFE6398
6F969A712C0CC8D788811682999AF43A4F84DFC5336033B909A1B1D50E91BA8B
C72B160BA2CEFD75578EBB4038BB0D2B684D8268371EFAE8CD0C5677CF48659B
97E481974FD5B973167BFC236FC09AB4F235731C9EE1950678770F1F66F915F3
F8C0587FFDE4131288D70DD823F619890BEDC3C62C6BA16E3D1> |
41158 <0C1C60D8A8C9B5EE3176D8437D2F7993DA06FAD63B4D16E44E8C2ECF1
169E6DEB7303C9600D1CDC8176A26F28F96D8076AE8D5FEACE92A661F4C6EFF0
43F9D740309A82EBBE4B9315D65D7F08A9F6C9A413136754E3BA4C7AD60E227A
643904A802A35824D500869A1AACDD5608079D2AD7CDFC164366195A9A3B7D42
55C0CAA07DAF5804FD6F6DF656C86A319077514F39CCC362131556AE9B05CE73
E2B11DA0CE1810FBDAE2868A0A0894AA8FDE11293EDB788CC880A45D95D29967
9A6777C798F01EEA73D3F1CC0D5AB875E9A93D4898FC1DA67AD4F02EBCD0187D
6FD65D7ED8A6DD4CBE09BB50C1E2EF4E3F1F4CBA10DB5417E0DF0AACD4A5746B
E38ABEEB653528B59016D1E8C94F32DF96F24B5974F5DB61FE291C11FEE30103
F1A5264BE01F11FAA6921BC006E08CBD77A77A7C0B292E814A005B1290B17B22
1F065CA03ACD507615933F1C05C02EA7EBE81CA78AF0937DE9085BF15951B14A
90486F8E868AD8B285C8D33CD21835D148A3190617547492162FBF48B5F1C978
C9DDF7078F183E5B34A9228FA08449488DEECA25BA8153F135958791265B0127
FC99037FCB9F68F551C919DDA0D98B38EC6EB695FF117E92F2A143E95745537D
401FF66C62C4847B13D39172393F537CFA07D751172876CB8790EA547B6C82E2
2449401764C7350309845AB6C89D171B14C802E594B701556030026423E50915
508D014EEF06A2028E09850CF11B389BBA328B855C92179B17C9236858AD5E96
AD558FDA059CE4F1D475DD069C5AB6B41735C> |
9827 <0C1C60D8A8C9B5EE31BBBBBC0CEE07157CDE053B6AF55E78950571131F
91BFD8617C86DE2F82E356EB28A1E9A7A766E5B2F7E7513612E52319395F810D
57C85F8E40AB4E82189333617BD1096EBF2E22DB9C24C4FB4A23EE94462E5496
6B3C02D8140812D721C3AC4AC55B51212C44824B880407970D7EBCE1F2EE4805
31ADDEDA90950746F3F16F1BE41F593FBF765BA62A8935BA156DC4BF9C7FA48F
092AC822DB62470E73709EFC83AB7ABDEDB4494F218F60FD15CCFC6A92045E8C
214AF4A21F4257AC4AE0C5E6225CA3EAA9F1ADA1A96AD91A1B8B2EC86453D600
E6DECE9B0A796670F12323> |
9516 <0C1C60D8A8C9B5EE31039D399841575836BEB37C62B26A8B473B7A4E16
07BFE227A8810E3C9C4D2D17EFAF22B151686BC436CA13DE753D212DA1B5FC9E
3E99F9029C33193D0700F1102E0DEE0C1A9915F8C4B4D0C6> |
44566 <0C1C60D8A8C9B5EE31762A9A4F1CAA6930078245605093C8D0BB8364A
28E54E126B9CD58CAC63E3664E52DE1822AA2F72682711A82CBAEA56098E9EA7
2F7CD607315BD97601E0E2E2654565E595C6E64A77FBD45401CF830BAAEA74C9
34D3E73017690B09F6A52DD5C928001B03D1B3EDDBE0E377A679E6DDB83770D5
F5845B4F54126551DFE8D6815875DF29244D2BA829970A0D6461871C0FFF6AE5
5C5D20DF159E84E6D504BCE2ECF23246C5DD887CA6BC1AFA5FDD7AC7DB348982
F2D2A8B9C0AE27458B91395CE209D6C6427111AFB398888B7C496B3803D32018
896CF7B1DA00DEC5AB4AA52CEC3DD1E09A17717AA78913C10> |
10923 <0C1C60D8A8C9B5EE31BD002412E151D5C2CC4893556B170AFBA929637
28270FD235BFDFC12C02F2E36E5C38FED9429A14E3BF60106A5B6392EFB9E006
DC9384C22E43CC5A09C8B8C7B334EE9984783E0E9FA244E0E41279E1784956F0
E9B817C674B0CBEF3700C67DB10EFEA2C2B43227ABC9BBFCB57CA5B4E723EF18
2A17DFA759A7E85B695B7C061760A0387AD24067A11F7FCE1FE9E92EBECCEBDC
9C320E6C1A5A7BADCA4A13E75D4E04DA5CC6933EB51CD2834270756392D4521A
AC0684716DAF54865540C68BF> |
17489 <0C1C60D8A8C9B5EE31764299C33ABA083EC295BECFF078B80ADC8A5F1
226942C385871BA60E9242C1E618060AFEBD934F878B9BADC3B1D2E68D862D13
48ACEE0DB985C4E64F2EEFCFC1A3A1DDDCA902B25A50F9B3EEEDEE6698C578C2
D3A3F03C711B1C054E6CE2BF0C4E0BF4A9CF67EF42DFA2565F81DFA52298CAC6
0572F12589569334242DCB8389026A730638D2BD81569C473304F2E9841ED0AF
3191ADC5AEE3BE1508419039A00FB2C9E7AAD5D4D0C8CD05E08850F0C3A38874
15F63AF776EC47FAFB4E388EDF87595F1030BAD2353FAF937A5694080F3ABAEF
832BE301163EED2F6867B9BF842E71262E226BE2BE1EDD8CB9064B8A2D6F4889
5824B010279> |
41115 <0C1C60D8A8C9B5EE3176D840EEB920DCA629304514F03552A15237B86
EF8A3C059DF2C4F74D3305C4B57C5424B9317383B144B9D4834509D680A58014
B89279E5F38B6713B5F01A7EAA3FDF265B7EAD904AC7E086B0031FADD89A8EF4
911A0FBD746DFB74F9F3C72AC04FBFDF3BF49A34D8D012A42781871979580DC2
A296B00119ACEE20669224E091E5241C7AD01D9139F079AAF54058914E0D105D
7BCF54DC6C7B7A43D39F3A15BBE4310DD8EFE796A4ACCB17B806835DB146E901
BCAA673B384F0563E713CE9B40BCED396F09F96FBED6FEF67C08421AF6B95A92
0BF60EF7DF3B5A91FFF1593F81275D17DAB2D12A61B82DC868668EA0C69B8BF7
C9849B51E8DCCB9A612427226E93C58AF58AB7C37045760C026631E83F081A76
2402463655658A2C1CDB3B7ECD631DB21996A492D61391AF19B2AB7714547CF9
63D78CB40D1B127BBAC72CB6A18627D4D40785E601DBE5DDACD724AA37DCDDFC
20A72D5FE208BF380134158511573112F3FAD7EA0D475751700938AB1480EFE6
4A035A743C3D08606A1600EB1D71B1640FEA29C90A51235FCF4D2825870C7056
B1E6BE05ADD04032D233BE5AE68332E97380BD3A8013A218BA556C16C59E7410
08BB15CC96DFED39DEDBB0936BA604FDF95447204511EA60F7088087B559BDF2
FC90C451FF05F478EE7C54E8E34CA286FF94244A22AE618CB6A52BE565FF9> |
37503 <0C1C60D8A8C9B5EE3176F9CE7904BB7F690F6FFFBF38058C66AC20F85
DAF39B8F3CF63C646E6681EDA36E5A0B32B1CF4549812441603D686F263D0872
0E8F7901B45BB33590656571C67BD34E148831FCDF214C640B9A40A8823982A8
E3BBE352CE084E9F10D51E8F49975DC7D9A736F509A0565B05652B979CC497D7
9E08A941A06E0370C0A65DA8943039242C1E239790376391B40969E50502AAEE
7B30C6BF8A6F77E66746E1074A637183B6D47F57FD8E97AC3589DF7AC9E2B098
E429FACB4B6C7780C5453B35A1B7C7A2E2A7AE82684E8257C10CB65DAE494A5B
AA9EA67DA3839FEBD137A6549E8B6B509B6F5067F7BF7D7D41C74E7B8EB6D6A4
EBB025257402B09607C9ADF3F9B1C34FBD185FFE1213077CA33E793E1249A23F
D4EB9> |
10213 <0C1C60D8A8C9B5EE317630A0DA1BDAAB652D1D6F0F2EE2682CDB6D161
BC3FDCF51BD26E944CE4C43CBABA2C67872D1B1C173147F7EC25FAED431383CE
417FE80D84C21477E664BB9267EB986526D1652BC59CB28D1C3701E8D220D17E
BFC6DB565F02D09B6168FC60413F8A2BA0D8150002AD710C437E4915F34E1C37
B43CB9FD9FF16FC8D34BBC59174CBF5A6C64F5A9925AC3F74CBD5D1629CE63F9
7C78F9A2A91B627A519A075C67E10A7B384999FC40E3A878503E20F736153CA2
3E279D425BBE112366F3B803E5F1CD2F14317A04C95667978B0A09F6C3BF5C2F
0A0B052410AC4660AFD8FC26A577974C8372145183DD0463A9415C71A7B5A673
DE299BBD826C8E7A07784A7A5257A06A966B0E7696717F7A70900DF6C249E6B6
C06B4B991A90218DA4F97E6A23CAB96710E11> |
18121 <0C1C60D8A8C9B5EE3176E493B3087448EC35CB9314049E9F6C756A10C
62B65783E0B58E0CA7EC9AF3CB9CCE25CCF36259964BB8C40788C26A3CE5EA29
B2A151B919B5D3897E0C275C403B930D3B324BB052EFB2F3085DAA325359AF7A
CFAA98AB836DF59602FE61E336E04C6491D21713C066A827250D6F003335DBF7
CA61CDDF9B500123066505E6104C186ABC61A481B198EEB6DCD97EFDDB845F7D
B466EB37561B1890D330D7ACF5703E438050EAA7A3BAE8C0A1C544F9DEC56E1D
416EC91FBC5AC9ABB20F15D3B632836666FB69F395FAF369F844EB0C82CEBE62
2EE6FAB8C9A9ABEBFA24ADBE5DC198692937FA19D8702C3A30F3DAF5D5A095B1
77CE1A73B4D7CE2AFDCADC6AC83490FF53E82FD259B953B56C5B1C16D84BCB06
D3342A6431928019242ADE30F7A4AFC7973546E4DC9C9EB3AA4AA454EA3FFA10
7FDD80563CC2A5DE6FC0EAA5809D6BFC422B3CAD9F15D635E3E46147A00081E5
15AD70AB47E4B49A47E45F174D1812FA8BDF219E68D86FC5B066F7A31FD12335
6D59D> |
9919 <0C1C60D8A8C9B5EE31764DF084E242792F5EC7AECD3B4587F65631182E
F83EF5D58941C85A3D50BE560850B7B1EC839D60F4638A75A8070ADDB8BEE74F
A5AFC1175C8BE90BAB6CFB387CF4DE6B37B5C984EEE98DD224D74D0414E7A536
E18FB17ECA60C0F21D79BB0083B38FB71A908482C3940B7512C84E83681DAF12
A2685765256E4787CD7552EF8C890731DC15C38CA05BE012287A198F8AFB4987
18134812D4D1A05082FD07CDBF0CCC51C79C066002099F53C5F586B9166DF4B0
F73325FA15842AA1842843B1E5130689F410AEAD492A7630A7E4F10A710E63A2
50FB7E562C4EE96DD5B2F7189628754A5102BC4A2652AE8B62ED69045EAA6C97
2053D155A1662112348612C7196AA16AFA1140C24DE1801626C7CC8CBBA2A6FA
7E3B9E4E1B745887E12E1B8A2C> |
20072 <0C1C60D8A8C9B5EE3152447AB8218016935002BE8463D9EF380920EC1
A4CCC4775E053C3BC92770B7AA4C7CF321BDCD755636541466ED297807C0BBBE
B5FF31D5B4E3EEF83C7175AAD5F2FBABAE6BB6DEE5DCD5A60AE42D628B50450C
5F379BAB8DFDB0B8D31EDF8450211C5234B8E3DEC2BD9D3E5FF046CEC7108674
AB7639A6627D0C42EF1F9396D21B4333160DFFD16018BFBB11D6D8C5BAC3E3E4
93F63CA54E6193278706178FF3F1F8DE30216CBA492E85DFBE2B9B3CD481617F
5EB508FFEEC13556D84514C31EB4A4953B19F78279E336F7DF47251AB9B0D3FA
9EAB4D813E506F4F90C7EB04912ABEC7281D23BA1DEFAB691B7A9D8C4AB5E989
F5009AA7AA05A2CBD809B3DC1C709FCF54BE53E0F9EAB95F30635448CE750D6B
736C40FA21C6DEFF62A245A71E9A2525C13A253F4BF64833F6D4C3A4E3C7163B
515AEE5B70110A60DC69A957C787C99E618B5DE56CCAA071E2EEEC041C72D397
2A70086E924BDAAE63A2770ADD779B5BF5E9B0DCC198827B53280AFD0DA83A4B
81718C4FD395BB6DBE55938137AFFAB025B09E26C85C06B7ABF3AC8ACF07559C
879347491A34D04BC1F399B72A260864AD92623EDAF56AAE00B21416D118E538
62F566B7EC1E94B1D5A531FF265F6C9BE82F5219F9946A94A7A0B031600FD66F
560DB320DCF851D97496450000697E0E9512F7C2E90BA4197361FD0A930622C0
FFEFB173D012BE4AA4B3CA0E9037FAA185BD4A9F6FE6B2F6102C85B6705AAAC4
CA3DCF9D190D682B2321FBF42817F15F3C2D063DDB1A1570F0BD1E79183F7F36
2A16D18B4CCE0BC46C22BEE93980C2C8A3805300BFCB6D71F2AC912383236750
FD51602B5E843364856CF3B484A649DC9B5210973BA6C52CBE9DE6E85B97CE45
A5E10EF89BB7BDF15E7EF9102C7BF> |
45602 <0C1C60D8A8C9B5EE31763D2DBDBAF1F44B6A28014D230C563F20F38D8
43CCF9336BAA7D8E7EBE2CC3DA293BFCF4544476CB4649A1D1D3ADA4CFF1854B
33793293BE2C386347666373550E1673A9C7C449DDC156746B6BD76BA6C4E849
A94B56583E62D36184883D57A4D1922979EEBB4F94D3D45A36D82F6C1F92419B
0E6FB79DC382DD1BB8B2ABE4505BFE09AD82A8BA62ADFAED1ECAEDCF8E64AF73
DD7A93BF6C99E85257B927FB53A95CC934861EEEC1F69B81D414407B54295270
469B0BDFB2A9D741018AA89A144BB11874E37E7F95DA4245AAF6716731D25C37
B0B4F1C07C7FC29ED89227080E16269C27E80C611AA3F96F1955D6B958325EA> |
10864 <0C1C60D8A8C9B5EE3176EE839DBFFB5514BD7AAC83934171791C8E67C
A91C83704B47655DE11E7713F7E7FB0C4E4242B55CA47AD298D825C8E3FAFDDA
C38A53AE73B3504295B59A0DB83A2107BAB7B393D9D81D1850CA5C55A95B56CD
4AED305A28343C104908589BB47BC0C91DD8EEA8B5C34AC7A3240540AC08E6CB
DDD98BEED6FE29164337BF84D31C1AB2AC2448988ACC6BDB2940F86913605385
F516F50D7709E895946ACAC14F282EA1C5B46FD8C9DF5C4C5045300A44B22ADC
D0AD94070F93AB9FABFCFA78F709106A61DC38070748959E68F045E65F7BA139
A38262F78C2D88159FFA2ADD64A14E267BE5DD6FAADE33C5F023F7CAFFD1E2B5
3E1E6AEE8EB3FD814E83962BFAC> |
21608 <0C1C60D8A8C9B5EE31764299CD2AD2D199C6C453FACC820718F3AE504
2521B8BE18305D3FD1276BD7246B7764E9D0D1A7197DDA48C79B46F9BBC9B041
FE1E20D2E2FEB19F651B95A5D78EC43275069945D794C2DA59B5003F6D962642
4DEA18594D2E459BBBFE6C57ED12C93DDB124E82BBC4F9422B78B680F943F412
05237D3D40D60F323CF45D60302D120964A6455E9A12438C01C3FEDEF40BC26D
D64B1E164E17734324F29A1A7C123C5F635C55AB13BF344AF79E1E5E85BC3E67
531E4D4691840BAF6633E5762E97AA3D3B3996C606D85AE6E95AA71C35C19B4C
2345A397436D69E6116EB0F28BD89F63A978E0ED0DF3AAF6D8B771BD756A717F
465783FDE67D566867236D4D69CD7814E4767C15655A16D457C7CA813B9DE3A5
08061BDA128D7584D0E166144A53814A37555D0A664E410AE188CDB57FBBF009
5266D487D3DEED6F0AEC5F5BC2A58E4A9335A048675A06739D0BD976E3AEF0D8
B87012C32D899FBE57250> |
19477 <0C1C60D8A8C9B5EE31949450E2EDD2C6FFACABAD8E2063662F9CE9D8A
942FBE0598347DAC39E5098DC2CF85B38F60EC99F3E0C2E5152B8531808A429D
F09AD054A1172649CC9E0AEE03294C2581C72833FAC76C6B417359EB1D3D9DBC
D6D1CBD9760F86FD9E3056DE3E1223B26BEABE154BB96C718445B1155B8416F2
B15BD72E60AFFE88B6E13E9BAC25DDB9835A2EA3F6150BBA30838A50CB09960A
80A0A0CA34DCA849C2FFE65042726578D53C073CBD77C4D163F5B24C039107C8
6F052565BFCD81DDCEEFC019789B679E2C10A4BF5F07EEC315092EA1C880EA5C
E181A4058B1434C1FA16E9FD82419C81D7D16C897B45AA58528058496B70BA96
1E2ECFD80598E82744F20AAAEA5207B697BF19B250115C365498977F31B7B1E9
534327870A4108F17B38BD8FF5AE457D3479DE2944146D25865D5FB5483A2B4E
CDAECD4CB1703AEEEBD083371BB6510113112B2535301E5E3435B3CDBB0E15F3
59FFF4E782C94684C34AD6772C3D87228FFC018F0C48486186AEF1604FA2A035
430AD8A3E410B157ED2DC40DF28B1F7F25018D6E7E61AD7EFA5A68E524663CE4
512930341830CCE7BF21616A3A8F5DB46A52BC4E85DEF394BF7E4FDF7A9CF1F2
56E3AB0B6B5E9B44A56F3310B492E2B0219B4166ADF87F5E66AE21FEE119F669
14C4ABFBE1D88315DE205343AF4099B3626428C59765875525A1AC0526F6ABDD
05F4B2AE201A8D75947486E65A8556971F788E5E6E964B7FCB4045E4BC825C9E
0322F1FABBA79A3D76F1C0EC8558C1FB03FBECD9A4200FA0C85EB198FB7B40D6
0D5213F9D3DA8A00AA4BEFEB9585D014AA2904E9EE9886C57132FF64955CA2B4
B8D922088CB5A880CD64F7C62B4D108E18977499F1550E93699AF2DBF53D4380
95DDED25B3B825CFBDA6F02190078C862884485C3D1156E6240D86A6C4631498
56FB865C6600D953BFBFB4BA51F0ED45616F92AC002877B7712E07A55EBD5F75
EA60C165757DF80B1356D7556E559DBF467264F0106D4267A3AA823F4AEF0141
DFA4531D67B8CC71DE14CB5CE6D78D611E44BA85BC250087E85166AC2FEAB1F2
0E5F92EFFC73B511C596C93842AC4E95CD907D64298E567868D7D6B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-39.6063 362.824 mo
(&e)sh
true set_gvm
%ADOBeginSubsetFont: ELRBAA+STIXTwoMath-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/ELRBAA+STIXTwoMath-Identity-H 11 GetGlyphDirectory
4286 <001C60D8A8C9B71A7336C7D4D6E7AA87D22F4C29831E7D35DB013A12A4
15910533CE2B08C7747DE63B82EA42254A3074232F2E64EAAFC8AF709F381DA4
954623426715679423B5> |
4273 <001C60D8A8C9B7F7BF1C5985F819C5155675EB746ECD0926313579885C
CF20EA7370E18734D0BBD31B71638584D084160C939E2C478B1B7F9349A80FB2
14C1507AE65BF1FB5FAB486FAAD34FF29B756879B788FA4CC749C9B3F9> |
4287 <001C60D8A8C9B71A7336C7D4D6E79A149D0050BEC9E27097931AA32818
93A4F65165C19A0556309A26AF4D3CB5AB6EB24CBF7D21E71CF3293DF42C979E
80BE768AF03712D30A422AED> |
1202 <001C60D8A8C9B605F8D3F1DA494451BD67B79A920EC237A8D4D11DB256
D4759CAFC32CFF0B40519E547448465E567635> |
3409 <001C60D8A8C9B7DF55EF85374DDCBE9DF635D771375612BA488792A12B
96693693C7F1CFECFC79071173E6D31F3D24F677EF3D5AE7013F486E48EB378B
FD0153C31CCB8DC9F78829E97FE33935C8A2DD4911AD0A618B02E8E25E9C31D9
55152F6A1BF2733DF8E4DEBC11A88C16B80F70618376F7C527326CAC851BDEAA
D1FF47DA4AB14E8531ECA77FA62CB88CDB968AFCA6AA906885CC66CCC48B1E3D
7E007329D1D51706D6CEDAF3C8AEA140B9AB4674A6C35FA46A82360EAF7FFE3C
AA7D70A3259A0FA38F31E17AA0B6BC6A6271A390F8A6DD2029C29ED939B65E92
FB1496EDE7EC0BA02316> |
4435 <001C60D8A8C9B82D66868559A75AADDD257C0F30D646EB786C9DCDB334
6CDCBE7D6CB45A48EE683328BC358BC3EAD988A0AC08EC9471F447A396BA0CF9
7DE7282AC10E1F969C66B90E8D66680C941D389396F66B0A8FC432DAAF388282
C73124B9F75E930E96491220> |
4284 <001C60D8A8C9B6AD61404F84D3B67BDC694536E7C521CA26B3F7645401
F24A> |
4274 <001C60D8A8C9B7BEB13D3AD119696FB355784086E9BA2D3D596EF297CB
3AA1F087A53704C83FFECA0D0B4A9054B0EEBBFE2B8B866FBDD3F85DC0CAD47F
B655D8B269FEBE5B> |
1196 <001C60D8A8C9B605F8D38B1BBF82117155A8719C76088F1CCE2A578CEB
51F5D21D065AEEBC16593B67BA32B3ADA2FF612E2DFA8796> |
1048 <001C60D8A8C9B8771BBF60D399540E5746E9F637606F36B2C33F76F317
5441582DAD2AAA628D46E539B236F35AA7B008D51C808C5848884077DBA94C> |
1052 <001C60D8A8C9B8771BAF4709D6D4A9E016D93C007021FA8AD04A823FA8
7388D4C55B9AF819BC029E9C52BF> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-28.5253 362.824 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
-22.4683 359.237 mo
(\020\276\020\261\020\277)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-9.34127 362.824 mo
(\004\262\015Q)
[9.93265 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H 2 GetGlyphDirectory
8018 <001C60D8A8C9B5EE310DD7FB7717A8768FFFE64AE53D7C08B7BDDD583A
AE6DAAC8D1BE57F186FB120E2844BB3A64C7047E94EAEDC6> |
8032 <001C60D8A8C9B5EE310DDF52E50848A87A2C536DB380BD1E44C9CBBB54
04535AA5488094C7293B2E48BFC8085E4F07948927E2CD336065ECC569B2B446
DDD61D818BF39C69B24E22287F14> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
6.61673 362.824 mo
(\037R)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
11.4097 362.824 mo
(+\374\262\024s\230\177\013\177\261\177\030\241=\240i%/PC\240\306&c%,\256\026*\253DQ\240\233\222\177'\345F\311&\277Nh)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
222.307 362.824 mo
(\037`)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
56.0727 385.653 mo
(\015S)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
61.0147 382.066 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
72.5307 385.653 mo
(\004\262\0154)
[9.93266 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
93.3997 382.066 mo
(\020\276\021S\020\277)
[2.90813 2.43385 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
102.149 385.653 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
108.206 382.066 mo
(\020\276\021S\020\274\020\262\020\277)
[2.90813 2.42693 5.74646 3.54968 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
128.464 385.653 mo
(\004\254\0159)
[9.38478 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
143.61 382.066 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
152.358 385.653 mo
(\004\030)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 2 GetGlyphDirectory
1841 <001C60D8A8C9B8151C27307C4B22D40929A14368B0F01F1BCB241325F4
CA40E6217661D31B4E7E53CD1BBC10AACC3CA760599FC9C332FEA05F33338CF5
ECDCC31B3B0B72> |
1842 <001C60D8A8C9B8151C27307C4B7CE778CC10BD067CA058CDF9B0FD24CA
73217EE3AF91ACBB994B1291E390EBBAB8C084F27E954D3D671CB10812FF95EE
716E1E5A903C77533A> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
245.218 385.653 mo
(\0071\007\212\007%\007\211\007\210\0072)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
54.9567 404.184 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
61.0147 400.597 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
72.5307 404.184 mo
(\004\262\015\003)
[9.93266 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
86.2367 406.276 mo
(\021S)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
89.1687 404.184 mo
(\004\(\015S)
[3.55659 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
97.6667 400.597 mo
(\020\276\021S\020\277)
[2.90813 2.43385 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
106.416 404.184 mo
(\004\)\004\034)
[3.55659 0 ]xsh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
245.218 404.184 mo
(\0071\007\212\007%\007\211\007\211\0072)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-59.5313 427.013 mo
(\262"*pThL\025wX)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-10.4733 427.013 mo
(\015\013\004\255\004r)
[3.54671 7.76093 0 ]xsh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
6.89375 427.013 mo
(>\202s\230\177\013*gn\270)sh
0 .745 .745 .208 cmyk
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
54.8247 427.013 mo
(][FN\(})sh
0 0 0 1 cmyk
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
81.8237 427.013 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 8 GetGlyphDirectory
3 <001C60D8A8C9B603550B47B9CBB446C62D1F0E3D2ECBBC41E916F5A703DF8
C642317589A679D02C990DB798DE097865044F880AFD92112341A4D927B8FE95
24A632040656E7F644330D5EEDF9CDB3ED3E09DC6ACA5B1CD302B1DD8AB2FFB2
FB35376224FAE3DD4F53065ADDB9595CB8F6D47C3C0EFF73D1EC501A92AA5C7B
55D0C8B4E24F2AECF4C88C6C3D1A423ACD292E55363F843E5267F2B787638A32
B61A5873336257F> |
257 <001C60D8A8C9B77D5FE21766EBD428C0C31D05A29243AA6B41AA99E95EA
18883D5B58E27EC273978E6D63A48FA6A118233C832BED952E2FD20445D8F929
23E5040E9A65F6ACA8D20D71FD78FF9D1AB362290CC93> |
275 <001C60D8A8C9B831A9F5E9CF722B4827721AC81540C52538830F92850FD
224EA54A97B931B1DC60C0477FC125011532D8AF0687BFB5F38CA3AF53467A9D
FDFAB357FCE46A448480452288735E07092CF> |
263 <001C60D8A8C9B84FD8F978225871D27C16F3FA6F5211B9BE643EAB270B4
3C5BBE0139AD36F78556A71DCB0743503BFE948344EF720107F747F912C2C3E5
8E4EC26F9FAC97291CE598FB442B014E659D18375A2856C9ECD781BDA7D76A6B
BCB6655FD08FFC0434C47A88C6CBC75861C3CD523> |
277 <001C60D8A8C9B75A17A21AC7372627F40AA77D8C4780B1A276DBD7CA296
96F31D30502AEF306C5FAF6094540B4CCB260F8422CC4847EE90E4801F8C8FE0
E6EE29746FF673244656BE620DAD953E7B518E9F98467908ED0B9DD9C9B1DE81
25870EF8F11E9372BDBE30EECA0950EB5FA275EB94A620F9EB56C5B96DF18992
2CBEB315BAD3C1B34F69096E8> |
255 <001C60D8A8C9B75BE56A03CD7ED428F96C87303E484B7F97BDF1875802B
7509FD137B0526C3B08CB69C6CE263C92F23F78B025BD396889B7C2771EF6E63
37BA1F0CED1376001A6F2EFC4F725DAEFB15ED85827A6E06C6ADCF1810E11195
21C2008749A7666F2C22C57992D918D4D911FC05A901F0B509EF8E18F3A71F13
355D9034A09BA7AD36464914718D268C9D17A9385C2D2DC63917AD3692FA64B7
588B2C34766EABBB3D217942167A55C7420D1AB122BDD59C5767BBFF6F14BE2E
FF4FA713E64A51CC9C3BDD5D69CD2C1B39D0F5A19F66763A1F5CFA8ABB9> |
270 <001C60D8A8C9B7B9B9A70203C94C72F8650FF01434C78C5592F4905F0DF
14AC37EDC670DCA2AD973A18FE0903A7595F4198E482738E2C9D85D1640B65EE
6C5F1396282E87E6ECF5088264784500BD9110F04364E01F42489> |
269 <001C60D8A8C9B7FBE1BD91D581BFF942B230730BE81C8E78958BB1CB848
58FD884AF382499F21A5AE7A2C6BE016ABC80B64A50DFC4F6525653D4BF53D29
01B113BF5F51E55C957BE4F347A677E6515DCD4738F25D47150EBCDDE4FEB010
7B0ED59CD9B88CA980392F0F7E72C38709BB1162D34DCDC43E8B14285D9A726B
E594E60D89CAEFA039D24AEE9657A1DB4A02F98F4223650511C7BAE903F37135
3B8DA823882F3207CF433ADB08439117F819AFCF2AB4BD254F08C3242405A157
7519D47F1> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
91.4097 427.013 mo
(\000\003\001\001\001\023\001\007\001\025\000\377\001\023\001\007\001\016\001\015)
[7.06348 4.44331 3.13824 2.83937 4.64261 4.78201 3.13824 2.83937 5.12085 0 ]xsh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
135.146 427.013 mo
(\037O)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
142.973 427.013 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
149.03 423.426 mo
(\020\276\021S\020\274\020\262\020\277)
[2.90813 2.42693 5.75348 3.54968 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 2 GetGlyphDirectory
39369 <0C1C60D8A8C9B5EE31713EB8AE9D8FCD38437C4392FC98678D8D3538F
B87DAA539516F90BB0D1EBC23B37AD43E82E3F4E5CDA8DF4CEE230A3491DC9A4
70E2BF558F32FDAFCCBC321E0552CCE34F8183441229B4A61C56DE2AD830AE7B
65ED60925F42B305FB0E9D6381619DA0555C56F20A56B271384A11418A36EA05
77DF3EB9C4344E9002E6EDD07316410585E7ACD91BFC1E5F60D2BCEB0C27BD9B
D586E614D4ED056F8C4EB7115649FC61CC4E60684428AC26CF25AECFD27CC84A
3373BE7272AAF9B42E0AB13A390B6C712877A4C22A76E8D0A9F385CA46B2D750
DE0EEA8CE0A80F45C322531C582> |
30767 <0C1C60D8A8C9B5EE31536CE65A83CD4CD4D3A44AEC8FF507F1A704EFD
01544E25303581872F7AD8A9A83C6C9683D3EC459B94D487F2E21DF6159304B8
2418938DDE0BC13E58917AD2A2891D748546CA9D789A049A5ADC8943703EEE87
F5CBCE3196C1BCCDEEFE487F71CB4ACB83DF49E0713C3C865C5345CF166994EC
F91F53B95A457F6B6165834E5B9AB67F751EFE67E8F1FE644E700B83E9D8A1B2
406091CB60084124495DDEDA5FBC4030153D611421C7BD3C5382243305CCC9B7
3C69F264A8C1346FDACE9256179261AD5F59FCE709F97FB0478DA459E5C99595
12E1E2F0A37FB6E4ADF0B73C6D518603C40B4E5BAD94F0C1D055EABF5A1CE893
3F8CE495EA306F0FAEF10AFC96BD6D3CF6A2F163F9CC5B60126C595B66BB479C
A775258142D1C52952B8A5D3FA9F7979B743EA36AFA2FD37054DD1E651D786D2
26153F0D890968FD6655C12635EA2BE399F3169DD746FBE54D2F928DA5BEFB7B
F8A33852B5B5E6D6C060F56EA9E70FFF97E06BC560FCE6A6FB10F4CF0B2058F3
049E834B734416DE22051F2611FC7972E739372BD7FA69C6B6ED75379CA4AC87
07006AAA775171107A1C2CFED10B270552758B67EEB9C130AA9DA6A68661ED7E
7BB85C561AD0CE2749CAFEA763900E7F4EF1A4AB7AE654E4D6D12508344B2E42
4D96D26F27EBB22A2BA5114A8F4CE10622A0ED3965B6E9DCAA6A37A400C328D6
FA9E9E07E9AB59DD83C3B1B9A63639ED0AB707F5AEA7B3E19096AB11F315893C
C59A69D000576619F80D20A85008694EB5D0F341C618E9AD1D87A6F30CD47FF6
D7FD01560969317FA70EB439749D76F99FD270AA21914663BDE6D05F936C5CD1
A60B10FB464067A6B333B6F9FBB8CDAF238798E4F4952A3060E067CC8CA7F6FE
4D0574AB699B82564CEB68D307EC9F8527907E11CC11C259D68441587> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
168.202 427.013 mo
(\231\311x/+\203wX)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
207.674 427.013 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
211.77 427.013 mo
(>\202s\230\177\013*gn\270)sh
0 .745 .745 .208 cmyk
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
259.701 427.013 mo
(+%)sh
-59.5313 442.555 mo
(][FN\(})
[9.72048 9.72048 0 ]xsh
0 0 0 1 cmyk
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-31.5223 442.555 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 2 GetGlyphDirectory
16 <001C60D8A8C9B61BBFF803E22704046805A4C4DF005A3E57A9D272D3EBD0
292688676B8B3C8E12627B66000FAD29EFABA9E507D2A1A21A65D79FFD7E0930
B45C4072FC95184DD9D6C3F306DDB0549EA75E29D4D10DC670CF5DDB89953654
BAA54E0938902FABCD95EABE2383E13318D3213660E927D080EE5EB2D28E02BC
2B52B94BBE09D9E821F752D4> |
259 <001C60D8A8C9B74B0CCCCE33390A940EA71397B5EC95AADDF64A4A67047
AAE2AB0D811D5D357C314EFF5018E68AE38D74CB5B424A0A8A7639D4FC59B559
2591AD26FBAEDAC0BE25BD58119EBB11F8A90A19E8F27FF6295FA96BF92B0FE6
5BF740BEE39B4C34F64BDE9743CF5E66F9FE98279716B49C6EDB3> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-21.9363 442.555 mo
(\000\020\001\003\001\023\000\003\001\001\001\023\001\007\001\025\000\377\001\023\001\007\001\016\001\015)
[7.29272 4.62269 5.96759 7.06348 4.44331 3.13824 2.83938 4.6426 4.78201 3.13824 2.83937 5.12085 
0 ]xsh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
39.6857 442.555 mo
(\037O)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
48.2507 442.555 mo
(\015S)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
53.1927 438.968 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
61.9407 442.555 mo
(\037R)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 4 GetGlyphDirectory
25772 <0C1C60D8A8C9B5EE31B0E7945AB56FB92196A7F6A5C6ABCCA3493F2BA
9C5044B2A13F17B7D1E87F4976E0069F153E21EA5C2A22965C4F79EA96FACE0D
E427B3C73049A5C1ACDAE8D51B76FAD1E1212F3BDFB3D557428DF0AE1FCB6538
929ED2D17AC6BE482AF45AE8B4685FEDA4318972AEAAA7C7176FF94D5A5442AF
EB76884E2803CD016E91B64222C3AE5E805B282AD568C7C074A6C2CED076D9FE
567D5E337413078D1CFF9CA4E4A3A099A40A6683B9730B0B5F7ACF8519B0355F
21E85D946F8E05612E70BCCBED1ED6D2566A250821A6B07A399C999C1A1E1A2F
F1C29EA24B75208BEEEF5CD1C144F09E7B1C1150933A25EFB346961A365A035B
DC97843E8E9D9EC108AC3AAEDBF4A808B4D90DDC77553808A40DFC390C85EBB6
10F50F5CD87336285373B2BDC1D8E828CDD80394E276DD0352865A2F7A4225B4
4C2D4E5F37924B783F6CA4F94CCAF4CFF8023AD05A1795DD4D1E33B04BBB8238
D84B88F9DEB21D97BB2BC5648D79C624246F82858AAB53517EE7B76F9ED5B88D
C1BA79D81FA472BC8DCA84DCAC8FF3D3221E5BC612493353ADDE54A4E4B862D3
45EFBDD60098C8F64575AFF651053AADC61E3B36870BECC810638AB37> |
11985 <0C1C60D8A8C9B5EE31762A9A4F86D49CEBA1CBE9CC89516FD37C7784A
43C8483C0D1554C1CC6351C13FF110E08A3060485A72231DCF44B694B24A2A8F
D2021BE9C6A90C9819EFB8BE1CCD25E4D68A19AB757D600835551AD51A6B31D8
1BE9251F54946005E832C0E14A6E9B2796AD91851E94B5557D038E5B438C71A9
ACD26E63B90F83ED8B8E2B90D517247EBC80803F5913AD3D2EB448C2BB914ADA
2EA36B39EE128A982E910D7B5595B78793D56220226A33A1F6705BE53BB8DE87
AD84C00B155A31F43E549C70459874ABEB3> |
9502 <0C1C60D8A8C9B5EE3102124DA7D1D9A8C5F11C54EA24D0F15F4240FD9A
03B88B72944D811D1D315AE42D9C3D885F> |
17746 <0C1C60D8A8C9B5EE317687E1E6AF367E6B25FEAF2477DB7708658F9BE
377080EC5DFCF3177E870C2C638DA4E5BC19A745E94E2301BA012181DCC5E0A9
5D54CBF4445A4595126039BBA375356AD6F8D640D404CC97F6EEE8A98D77F099
A9FE68271ED63232EA45EB69CAF2C69C8FDED3BA3DE06CB724E17AA342486904
81580CEDB46D57D0FF597FEC6E1347A76834C4B0FCF2E2D94480034083EA6376
57A394CC67A9A8F97BD9B089DE01BDEAC2A6A798A7B7C0D870346ECC178BE627
5F30ACD8F2A2ABC9D17DCD389A9E213FB15C38AAE391E4E41FCE227AC3AEFFDA
73F34532A7720D587237F90ED20CE909EC488EDFA1151F03FEC4699F342BDB3C
71494C7FD8E1E42141BBB767765EC522DBC989FE45E7511DC57C1B958F123572
FA615ABAB8FEA02690A1936B4A9A985170A6E7024E680F4F54D51599B7633257
B039FA5CCE924B6042B7A6BD06BC3ACF948D4061CC0ED4170672A1DA910A67B4
E5C1E6E825065D8799F0997A7A3933167893EB8601806D2B8D1674456EE2B3E4
8FE1C363539A5DFED795804DE4228657A84EE5B> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
68.8817 442.555 mo
(d\254.\321\177\013\240i%\036%Wa\311][+\207O\332ER+\322wX)
[9.72048 9.72047 9.72048 9.72048 9.72047 9.72049 9.72046 9.73 9.72047 9.72049 9.72047 9.72047 
0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
196.834 442.555 mo
(\015\013)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
201.506 442.555 mo
(>\202s\230\177\013*gn\270)
[9.72047 9.72049 9.72047 9.72049 0 ]xsh
0 .745 .745 .208 cmyk
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
249.98 442.555 mo
(][FN)
[9.72049 0 ]xsh
-59.5313 458.097 mo
(\(})sh
0 0 0 1 cmyk
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-49.9453 458.097 mo
(\037T)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 11 GetGlyphDirectory
13196 <0C1C60D8A8C9B5EE317639E22B746EC8ABFD29D469E25EEF7003C0093
66858E994272B0D15768BE31287F9464F877732693547A12E0472D7CA1397551
42DE65CE7097C8A3151F78E4414AF7FAE7664097479930F4A137101A33C82005
97733B9C8A4FC3D0FE95D79B9C8AB53F71DC4C8F84B76928FB32CF5EA9C740E0
38B17D9F84C939832834487A51A6A6C487877DC0D82546D2D79A6E9CAB3F61AB
97D7873762ED8BB8C4B22891746498B65EE7128620E2D67DD579631537F5573B
D91F1A757801A7CF84F257E89C83734C76D6150888B4D9FBC6B554E954C93434
B723EEA383B196FE78A5B36DD2358D1471DCA529B2AA129C507BD85409E4FE8A
3018AE6D4AC00B0A5C5AC8C069BE7B0D906> |
23135 <0C1C60D8A8C9B5EE31713EB8D52AB594B91256960AD0697B4798700A0
6FBF02A484106D016FBADAB860C7244F4AD098CDC64DDA03D5C408CD8FF44DD7
E13A6A9ADBA3F6DD7802497E1BFBD4107DA20968D57F09985C7C51C88DAF7A02
0FB0970A294EB72DD6E6CDD146B8157EF997A1D9E0EB0A4BFF8200D0F9F8647F
75C1B188836F3CFAB60E82D4B1C579532DBF3A6761FFF4E7E10F9965F9A9D038
0AEE7C50CCF9FCE1A8E5DA29F9C8726EDFE23D0FCAD46F11322A504BB3BBB73F
40F108901681BA6FBAE8999E39C22B7032580639DD9236DDE230C1220E53BCA2
46AC854C7EEA511DE86EDDD26913BB00F1503E5170BAD3CD318067AE2FD3B565
AABDDADBD98B21651B9D5AEF92F35D69C486FBB84BED3E7C4D935FBFB8B01125
9A64AAC560BBE9274707DA063A2865E> |
18928 <0C1C60D8A8C9B5EE3176FA390E0D9E8C7298C0682E90C12E98B39429E
D77C53AF7E5760D01C9AF2AAA514FCD3C53E60E747A60061748A8857ACB8C187
14843F5EA96539EA7AF5680E0E8B5EBB72FFE301BDDD7A7CD1AEF716B789311A
FAAAF729B0F4B0D6D23720C62676DE51336E964ED1EE666FD4FA680C672809F5
089ADF886390F0AF674698D09807B94D30DF6E1C619D5EE7146A6B3358C028F3
99FD42C7DF517D46FDBC1FCEFC3C8BD898D7E0C5F699162E75CDFF5B2476B4D5
D2812D517BDD18E9DAC773740A7CD3D7CBCB6F38F5B7C2F0907F58F28B3304A1
F643DB54872BBC2E0EE63C908C92B1AAC4935D13DAECF5848AB87BAA17EC39E5
4A57300993037C99C027E192725E554E5FF84E290D524389BEA367C0885C7044
C1EECBEE0510C87690EB19DB2C3F1A79296779A823D1AE2B71C1907AB5864A6C
E9F042E3852B718B042DC881AF156CF4218200F06A015E0C1ACFB5390F3FC236
1C5199EF2335B72541358E389A873CEB6AD3928521495F0C302CF0CBE6C4AF97
B83E0D86FF78F33719CB243378A4DD5B2DC65B5DC1CB9617AC8B2C7E28C8621F
F4F42C5F8D5731BF6CBD0CA91AA87A8787037885FCAB499C34C79B2FD5CB14D7
F1339659B9428AF350DD0CD5C0CFE8C6FF21B41999BBB8DBDE04267ABE228B95
60A5E2B24CA622D1BE137DEA1370C3199F6C491AE76A6F3E0198D0E0F27486CD
4DFBEDCCD4A2444> |
9840 <0C1C60D8A8C9B5EE3176FA390F10948E5A80E9945FC403488E2323B31D
4468C2127EF97475615D0EBD6707C84381AE7EAD6B4E21F7B6A8FC6E2519114D
21DE128BA02307FD3736ED7FBC0C3C79692654BF9671C2C620FCE93F5920A765
9607CD8805E5309E67AA9FDF01E657CDA1F2C0B0A811B4CA3AACFB0FDB1C69E9
FECA2D8AB4CAE3C69C8FBE1E71DD11A85CB45DA981220406DE47C25D151BE8EC
63B3DC04EFAC9FEAF83D260412A0A145258F7B202F079A1E37201F0F1D669895
671036B4177A149F657849BE2975461674068F4B0E32C3D627ECFF3BBC2194F5
DAABC422955A200CA48E34D99CFFC17C777D258815F03875EB65B1A6D6B4A2E8
89DAF9047E3FBFCBC14D04CEE62BE0A064C8430F73C17065C68F2CD2545DEC30
82AC044BCF87D9C59EBA9F0734B37985743EE9449112D37FD7ED4977E08F2BDD
6D4A4BC90423444903338E604E6E2C96F4A4> |
9633 <0C1C60D8A8C9B5EE3176E049D876141A8F689FB3F5C337D752A6B20366
95368294A5FD8B77142FA1630B7D9E041BB22C1D40949CBB09AB8D10D4B9A567
E6D5B9C9E270C95EC9F3B073A4DD7B005DD2A748BDB07058DC88638A7FC37B4F
E907CA1ED578D4D3CBD7A95523F74F28A9260D347B74C14E7AF283E648D8E26F
C01C45B5B038BC1021E0CC62E168BD3AC9415BE90B5C037CFFE7EC55E7C978C2
24A5D86F251B199EF624F64B9B39FB3C9447BBE342AF4AFC6AB3E8C825D786E4
6513587D857FC650DE8611B5C7E94FC7DD7ACD84C8F956D58BEF6C9C717A7133
7002FC2EAD88EEBF6E9250CDA37EA6040103323E0A0758F086BA927F2567F027
1B55E17240C227828A5ECAEBA44B7E9188ACE77B2BB19739458FDED579EDE1CA
B34A1B2DEA2FB1E4B8F4F349741FECABA9802F7AD51283C5E2F606FBF8D37927
D7F019328B06> |
11946 <0C1C60D8A8C9B5EE31764D16CD82CA0973715030F98899E4F7BD0AE5D
82CABB20D9ED2C9C1C1E4BDE4556EC80E434C0E048195AC272D3461041CE5FDF
9419FBCC3C385321189BC0D2B339F1424936088962D52BBAB7136E42419DA7AF
A5AA6A387AEE1826CE29C7513029EDFEA99621BB32C42C693887B6FD76E1C963
3ACA7483175B1B497816D6039700AB7F8BABA6079157AAB9FC2657DDAD6F8C36
ED8BF617B939CF3ED42B5C4C456A84FD22F08AFEEED874FDDC6E121586DEB26A
6F59EDDC421C4460D13E62B9DF050E811FC1DC81B585D9698F6B233A2161A25D
9DEE636E62871243134A2C824EF87D98B49FE4A69256DCB30F5F352999158297
74A5545> |
9832 <0C1C60D8A8C9B5EE31713EB8898C892F2E39CE9E0AD23094CE819AF4E1
0764742056419BF302001232C83C7FBDE3754192118A8FD3A5DDBD1778ED395A
330D3F0ACD88FAD1DA849E27C9127ADA0B3AE82E854F10B0F09FAC38F41BD8A7
5EE257105C9B2E67EB3DBF58D6C5FDB311CD45695EFB36B27B1EEB10F362FF80
C24362FBF101DC7BF67F0CD640E030B2C987A113F6DA9363CA2751462D37091C
CDAC3514DF51FBF3428198C560DFC4A2E90C4BEDB1EC82B9308BD86DD62567E7
6DA84E1C3868A064336BDC66E6943E959D92759041972D3CB0E9F9> |
19131 <0C1C60D8A8C9B5EE31449115179F871239953660901B72D8C67A4D73C
6ABAF375206A3C344BF3ACF0C5098BAA491A7A2A2CC393DD12C0067435C9F5BF
820C4E4A384028F00C1EC4E915B99E45727FFB7CBB7AAF81391CF666DE3A9D89
32EAB6EFA44C6D296A2E5AB13B32C4681967E346FD56AA7BB2885535C19F5429
6B42C2EFAF616EBA632624E91D21FD0857F4E2A3829F2341D0D324917ECBD3D1
96FF56E8B747761FEA70F4051FA06206BACDEB8CE35E5659038BA068154512CC
EDB0774DE828AA82854150ECC4F85830272A5C1F22D0E2AEF7AE410F6957D8F2
CBDC4B595EE0FBAF0B7E337E6AF5E744E4B38A450028B0350DE372D28E3F2FAE
DD2906BCFE19A0C8D522A63419C62EE403D15A734A121132202CC4477E054739
C0182BE23A7490427940048D30FEB869231C88A4F51A08FC63B29C6424C9C274
14277388CB25301B294E8E0665BCC5940BB87A325F7521325381820AFEE2487E
E798860BAAA3B8E4637FC28CD0472636D48E36C38BD7B0A1CA8B2F9F66F2D00F
84AE61585983C34F1C9D5888790482D17F5A4B849E6BFE8FEEDC0E0748AB707A
A23CCE30640DDABB5DAF925DAFEC4235C4CB706C1ECBF3D881130FEC4A07A670
661C806BE714752779A6C70A9C5317CBF43CDE288F08175DF55AEEF5A2DA8FE0
D04D0905117FB76DCE17786D6854E2BB1FA4A82D3F0B371186F6318E4AE2279F
D6E44DA7037E4E8E5DAB8BF1EDF51426F56453892412694DB5B14882D64EDB9D
F91B3BFCB908B085748BBD2A5CA0CEC44> |
23315 <0C1C60D8A8C9B5EE3176854748A548EE3410F4412F12DFF66E8F5FB78
982DEB06A487714E95BFB1963DA033BE5EDD0D3095C5B52E84BF3BB558E14C08
BF9C4C309D5BD28A736A01157D2EA0278D999893C3B3F7A21695D54FB9B43AA1
71E504A6017FE04D32E5CB2B46BCA8C03238318B7507ABDEF83A28ACCD10C806
3BFCE8BE5FD8BF4A01B744F334BA6D6F48D9E19017DF619493791BEC992DC8F0
D246CD15AF09FB10650953FB930A9CEDB858243DCD9F24C5B273A92B0B658C9C
659DE92E7195190A8EDB047D3C7592488CE2307B3C6B88F34F85EA6A676938E3
750A6A42E391E5823225221F24A53A48A75A5E920740013DCA2D842B27E907FD
422E441C3852FDE49706FE0AE863492A14989A73DF1BAB4D28DC492B837C4130
D639CD635081BA6CB08CF6C12C26602A6444E928E28E24E06B26B5422C712EC3
377E1BD10DE9245CF8E19D2D78B25E8960772B98BD2CAC758BB5F55913DC8123
FA1CFB20FEFB98D9B5931407FDA6671825AE8D24BC6FC2F046C20945FEA09530
FD26A01DCCEC4E6DCC2C95C1075A87CB32FF23D6DDFADE7B15F09E866D8A758D
502590B6C042F> |
28570 <0C1C60D8A8C9B5EE31763B41DDAF6F28563EA721B4D7D5E800461B125
C3EA442401FDCE4D9AD16731B8CCD046AAA18761A6B5E0C03D7D4210C7F51853
0A59418709F0305C4201A9E3943D9E4A5B373FBDAFF2C091B293FF314748798D
8FEF20D0E4AA3258EE7C0375B0BB9D27EDEC3197738609CD04B5CBA0C596D3A0
506580093FF92D68C48B683C97AB05F0AD7C0CCDAEBA75FE3A5B813A3210A8B2
68AE16140AB756C4D675D00E10A57B695BFB477D8BA7216AFE071AD92D1DC459
284388EFD9A1563F05D889705BF2D418BFBB4FD38CE70F38CD741C3D3304EC08
C413E0E40A4FA4A59A5BD947B040ABAF5B5EFF21ECEEDB5E6052F6F8C484BBA2
7165440AC8D4274F80EC8C52BA152DBF13BC187027ED8C77D25FFA0865DEA2C2
BE0FFD65A99007305428D510EA950ACFA410BC8881D3F1F2B0C50EC2A91322FF
1EFE6EE78> |
10001 <0C1C60D8A8C9B5EE31764D3B92C4F028495F1975AA59EFC4A6A978296
BD000653776B59C31C097B8DE6207AE5B56206B768AEE0AFDD590AC16EE08804
567E2A87FA580927AA3F199C94A813A1893DE320A902CA558CC7BE27EF92A1FB
3661AB57E29A63D1B4C1A05FF04F2E7F1C4AE2ECD95C827C5493068158B916D8
350DD0E892FC156BC1408DAE30A4F275E9A8E671F12E54CCA91A8E5F77DF9562
77548EC4D3E5345406258F10239CCEE5E1EEC24FF37FD7C69508B27814E730A9
952FA658267E7A42DC7D45AE0EC99028353E2245BD597435680B76E672EB4A71
32AA6677A5C5389CADBBD69D286E6BD0A422E66ED26FCD202> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-44.6793 458.097 mo
(3\214Z_)
[9.60536 0 ]xsh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
-25.4793 458.097 mo
(\037R)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-20.2473 458.097 mo
(I\360&p%\241.\252&hJ\273[\023%Ws\230\177\013>\202o\232'\021%\036%W)
[9.60536 9.61502 9.61502 9.61501 9.61502 9.61501 9.61502 9.61501 9.61502 9.60536 9.61501 9.61501 
9.61502 9.61501 0 ]xsh
0 .745 .745 .208 cmyk
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 4 GetGlyphDirectory
9873 <0C1C60D8A8C9B5EE3176FA3DC8D683628B60470132A5CD119C2751F664
47B08CDB2988AB6C9AF2594A0B237BF55CDCF31D174DE4BEF5B5A9A225764FD3
09D3D98F0CC5D64B7FACFDFFAA022D0C0274B56A908D1602003A5E5DCBF7AF64
60B97C8542F9686CF3B2DE743E437609E48A8DBA9939578443C60AD617354E4D
213D40118B875911CD79CDA1FD01C4750FFDB2C804744ECC52D7BB0B8CB9464A
35AAA108D72DD806D5956AA9FA0677FFBCD57A4DF1B3951866393801AA980D78
FE30F47B54BC29576AE17770D045EB156BA1E3EA0AF84498EE9A7B8B7BC43E0B
B699069AD79E0D42D5459FE0E244E74F0F7999DB3834F8679EEC2C6CA36258B1
EBFC146EAA30BF42617D173D1D8410421DEBF5194DA720E330> |
15899 <0C1C60D8A8C9B5EE312A8510E6791C3C31E3FFBB2FBFDACCBB85CDAF4
D2ADF78EC58B16D9F68C2FD1F1C061A6583EF510FCBF194C717494441F0A293D
B3463DFA18857EFAE40E89E1A49774B8E6B66964C49557FD1FACD8DE0FB719FB
FE486E5503DADECB53A4E31A1C6966E450C34E7E0F96614F20DD1722414B3C07
2AD350368E336EE5533FB206433098F7221AD62B1282C978C01DED803EB2C10F
792CBEA450860F0F66E53E126E58BE29AAA56C2F9C122533E64410040BB3969C
FB79DA4A9A52FB4D00F16DEB24D75084C2BF4FE219379A3CE487440002C4BBA8
48C7E795F08512432C1382A2D7B33AC787AFAB3C6FAC16A673D7D0ACC914E29F
6E2BED74BF561B83C291655C67992EDFB78542CBA6B76F42C8B5A536B388B011
8CBFB1A1B6FBD04BF7E198F44920C15156A2648183AB6E3C9FA03EA50F757836
08883285D6398E50A6F90A69C12C603FC1FB38077F58CF10AAA7F409E24BE7B7
8F305F961F2A919D756FD37A0BF3A97043D1F96AAE96031020B73246CAF18F65
34A33D57D6B39675FD17396FEA56220AFE592C55AEADCA5F8500BFCDB1077EB3
17DAE705A7168219480CE58AA17E4D0B18ADAAD8474A47F0487BF19CB940243D
79851702449F2D0753CAF8806814015A65D5E6896B702FF1CBF> |
11912 <0C1C60D8A8C9B5EE31764DD7ADE800EAD3CD4DE4808BD8B8F3C4EE74E
537DF013B8271EA10492075F02BE7D1F858531743D749F8A822488A05568D20B
6EF61CACFEBD182E45FD06509A20BA8417E719AE5FC3A3353C28863D9CBAF034
D9921824A15DD80A3342008E2CA4B9815D9E3C33C77451C218727CF72E673515
091EA25F0E9E75D5348274EEA4CADB24E8447ADA4E3E8D05E6DE9DB5791F6D05
04A14E703FE626AC0194F94869630C4AC308A22C291BC0BEC4F2C510E2559357
241140337B3F3A70917B876D2E8022D756A2006E2150FED08041B0AC9B7BB287
13E6D8E9B129FD34A5D25B74B5125C6A674723BE2F55BD8DC1583B11B01DD6B8
4FFB706BED8EAD1EA4C218BBBB8143CCFDCD51CF4424A6CB853D0A4E43A84C0E
BA0F4> |
19460 <0C1C60D8A8C9B5EE31777EF9934EFBC3D0B14BAFF4913133C31404D67
6E444B3D841019DFBD5362DC42D2C387C31C06729385CC5E609978C4685EDA5A
C6F5FA0A6CC42CF1858B5FF4428EC185B14608449CFB90CA65E565A1051CA01B
C207B943E9F0EBCADFB6D5C8BA6E3AE5FFCAA996006152F4FC8950B57CEAD3A1
2010FC1FA343DB9CFB6802E6C4D1EEBAD3A15816D11AA16490302E4D461C6F18
5AEE230FF0789903F4B74A749556F729B217F04EE3284789725B69AC0F3EA1ED
7C1B81DDBA724CF1AE868881524EB281F7BDE70D482470079EDFB90165AD64CA
38069F51F31454DA8327A05903BE20B4E464AE9679621080166DE158A498B8D7
8A3BB9EF1B9F3CEE3406D0E10FA951745DD6FC5ABF72E84538D2D89F898B0658
B43FE8FEE224127C88AE8F777B105FC92FDF34211EC4B1356B93E986B54B85A7
A50945B7F157535F70710D34BE7D812AEB393A8F03A959A0E970DDC0E6787695
DA0C7DD15F97064753A88EAD103654D5B9DD44D2CB649F0B3B5BA31332822AF0
8F8704763CF5B14DD60E993D446DA33CB27D7F18A86D4D3056A123CBB4CA5121
C238187C3B9E09B527AE832B16AC8A34D4AA138F615930BB52404300939FB427
5542BFF3602653BB54598C12406986E5D3739791672107BD1D26B14EFBAE105D
F684705D0F51BC39A37002CFC6A4426D9BA4571B50C4B6FD0EB1C5988D434271
6C9184EFCA92C0A47AF3759E25244D3B8A400C3> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
123.934 458.097 mo
(&\221>\033.\210L\004)
[9.60536 9.61502 9.61501 0 ]xsh
0 0 0 1 cmyk
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
160.753 458.097 mo
(\037N)sh
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 6 GetGlyphDirectory
666 <001C60D8A8C9B58084053E4199B304900E502F01180312E13EFE47B905B
A7A9A9E496E39D73F042B0FC8AD9A38B036B836560C5DE3880A8322709071EF1
6BF3C059053666C1A32CE16AD006915AE0F9BB84E817298A1FBD771AE0A7C0A1
1EC5016787CF1DBF3B1B75ECA71C7E09332510E1D06C94959929839F2A117260
E7A3E67D59D4F1C91EE180E1B196F8A2F9E76F386ACE7B47644A63B9B2921845
6B36789EBD1D2F0AFEAA88BFDD05590ADCC73E0D1DB69C982D59CC620F05F4E5
93C372F4B30B152B8C181E3C35A25EF5754061E5289818219B643D2AD51DD919
7BCF301BB9820C8B3DC7F455B37AA98D0EBB123B9F33CAEB5E29FC08F8E161B9
1DC638BF98BDCCFBC02404D2457213209D70BAB19B2842764239732F6AB8EB7F
7CFF055A2845E1C4EA1B533038994F9E22FDF8E825C67B74CEE2D536B8BC7359
06A5881D09A1395D0D7469C612B85AB8CC111A97CD79872F479C330997AF9B40
823DE781597705D12248A6438FB395AC856419AFF811034A60AE6DBEC1C8973D
38EE30FC5CA5C810EDEA288> |
22 <001C60D8A8C9B7C054659E829A073577B2789295892137D1A274C221291F
5DC2C62BA5E89A9FDD74811C171BBA9BAFB89EB581A0C00D753A8F311BC17EC3
492F2218C4C90A954208EF7A703650828E1DE810ADBEDC5EBE8B6EB1E9E60DBD
FD9EC03592C496EA21D539CBBB92413310455DB76CE829921594A766E1C7D7D3
D43EA85C036C6A0CB561828BB2F3> |
273 <001C60D8A8C9B73F59AC4C5EA81CA66C901E58B55EFA0A3267AD00B9FAE
D40B97AEA1F70D974B0EB3D52DC4A7A3701BADCBBF8857AB8C78F76EE6344A50
DE47D781D0A56C4AFF401F7A37B0570C6FD204D42C588F55833BD4D6130A5336
94A08F483370BA990D66A157C5EB1F20A070B0337FB1BDC600395F638281A1F5
49C5EF91CA6E2CA3B39AD8F075A1B1A905B5C63BA3FBBB73BC71371> |
274 <001C60D8A8C9B7303159BF5CCAB92857D98041E55B685C9384BE83E34A9
DDAEFAC83837B3323BB8F78733734339883C2A6B3171A62AB8B073571E15D156
602A2C9704C67EF9717E53F373BEFA2503D7AF25CAD8E1B15944A979D52E49CA
47AF5099E13B047FBAD6AA95C61D6AD67A921EE161850351DA16E69B5CA40FF6
6BF365E0C897F30BE4150F464944D26B03DA14FE1EADB56F21CB5C6AFEEC62D9
919594EB424F5D5AF005005C371E796385CA66EB6ED9081DF68869FAA2E28A5F
934EBE5664049482ECFAF13F34A3764B98CD3178F63D47EACB1650EA846253B4
18D92FF6C128E08FD6E95C414760C0EA06C> |
260 <001C60D8A8C9B839157BD862BAF5E7ED6E8B229133826DA7FCC0F69E526
A701BB76BEB113D50CFD7058CC1A76B7EF9D6086525E183F2BF2C86E9086F0FD
EC730E3CB68B91AA403811DE66DAD07C3205EA65DBEE22DEC7B3A827B24EA4C0
6D4D23FEC8A75FC6A> |
268 <001C60D8A8C9B689682ECC1668B147E613CAAB641285A43C1F494FC6814
BAE081183BAC55A86C5C18BDBF17A019FC3677582F1C54C87DD7C18D053297B9
773E67A987957D4BEEEF0B188B8A1C1D1F30A69E6FEB900B759F73D4CD21E153
7BD14EF2EFE621228D8F0FCA347D711ADE3603477BEEB739D586A47925A938BB
22AC62EAE75D7AB148729DC5488AF8FB3E40F17328DA6BCF1733874C5B64D9ED
30C711C043AC0FBA3661572F2FBDA2DB762F45778FD4252A5D26FF4911E30C56
F7D4C9343B8AF67F17D659443DC6B9BB215543F6F50C9DCABA05740E6A19E8EC
5F2EDF592DF002193BC4464D96E778411677323EBA4525E7F1900D832582BCF0
3E2> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
170.34 458.097 mo
(\000\003\002\232\001\015\001\003)sh
199.201 458.097 mo
(\000\026\001\021\000\377\001\015\001\022\001\004\001\016\001\021\001\014\000\377\001\023\001\007\001\016\001\015)
[5.71844 3.6364 4.782 5.73849 3.93527 3.05859 5.12085 3.78583 8.48819 4.78201 3.13824 2.83939 
5.12085 0 ]xsh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
265.075 458.097 mo
(\037O)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 3 GetGlyphDirectory
12181 <0C1C60D8A8C9B5EE31765C2CD64E1306CFBE29F1D6F9966A7B340B489
A362EBDDF5FE6AC0E3832935C4DC086D23D3A22F44172DCCB776F2AE70C0252E
BF633186FD6BF73D6AA678D133392CF72320F8AEC16527299FD5ED64F39A762F
CD4F57CA8719FA237024C9FB88E17B3968623F66E87E2605DB826EC354FA07EA
91A1C8A034C9B3DF4E337C89F8AC592FFECDA2A81841323AF57909400E7AEEF3
3B422B4AC188F48AA2F5B96716BF8DA9C194C418608F8C5CFA45324E984B0FD3
3EFA791820A22E1685E3D25BC3032CEA23CDA2B6832C7ECC31EAC224C731A11C
E1849767F295660628D96E9E021658E76DF359B254B8B4044AA1DB107B0F0> |
44556 <0C1C60D8A8C9B5EE31764D2E17DA59CC10C4C31BFCBF9C2068B60659B
FF3B7140193FA9E3B5D7F9DF74FF5B41C56A0CB9913EE6C017319FAA4947540A
6876880843AF8AB3F4EFC3FAAA82D6BD65B8EE190E47FC3DBB352F360925F482
449DC4114A88D0AB85B35C1650176EE58E4D171CF2D83113BBB4800D3D3E7907
133ECE0A5D2E9C55AF39EED1BA4F68F32543F4AAFF8127DC4F4E9141C10212A3
2B793A403E8E8FCAC1BBD608BEB9BC2C40ED8478FBDFBA43A1A1C48A213B3F5F
30AC834434FB8A1014C509859AE41D4CCF1C9B3521A240D308B1CEE14BDD26E8
F62021489E30AE375CEF6B45DE38A0B0D486A1253097E452DD3776A8369193AA
3F932> |
32507 <0C1C60D8A8C9B5EE31C47EFBE18ADE2D5663EAFDB6BDC1CAD391080AC
5EFE354CECFA1FD3838437763C2581BC35C6EF0F49E3ED36D6D2896FDEA53B01
4B6D7FE70F29ECCF3406CE2ED0FC953AFE0D1C124CED10B4A8C08D1A83539360
E6987566E935344BBA1A3F25B615D9FB9029C79A0D82F607DE5281DB03DE0171
72082C3C8493CD9E5921BED6DF1C03F947594EF73F2574324B189EEAFB6132EE
61169881FFB0D9ACE1706B4DEBDE67CCBD7F63DEFEBB61A03BD33E74EFEC2B62
537740E49B8823F4E70DE5BC7B413AAC1D9A3ED449CFEF2776CDD7C15F08B621
2DBE332B3A42955DFE473E1C9E25FF2840BCE2157F880ED0864FC31A9D2147C0
04BC5F8014AC0D4F9697814D44351D596369E84CF9E3AD7607845AB7CAB6172A
2CE1DF0D37907661A1FBEAF6871BE0DCDFF5C3A7DEF9A4E8417E8E1A5BCAF7BB
809F94169624289140C5B3895DDE4EAED2B0046B44275F92BCBE6EBD83130D25
8BE9B97163D014BBAFB6ABEDF11956BC353BBF631547E339D99E2B84F5986A82
2DD9EB240BCF8391AC06C3E7C7782483832FD29736DE52C83681A8405F7C1A37
E8DF19BAB3F1752F930B2F8CABB36603E42F59990243AD4DE7A1D6E70F243BAD
D540B3437BD7C127995E0679351008E370E1E3909DE21CB7E29ECC3A8D653768
97259073BC4C65D88C82157E15FCB69A2C82B692EAB3115E60456D441381F498
B1A52802E57> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-59.5313 473.638 mo
(/\225%\036%W\256\014~\373FN.\210L\004)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
17.1588 473.638 mo
(\037T)sh
true set_gvm
%ADOBeginSubsetFont: TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H 7 GetGlyphDirectory
852 <001C60D8A8C9B5EE310DCA1B66E73C583CFE94720254D09A3FC51B6BB0E
80BB5B012F0B446208D36F0EE4D76808FCB6707AC292EF53354126037309C1B6
F94AA0A48E1D652A06C1A77A78DB144621C5C089FD6FA5F36BFF76975F39D363
78609CC4F2B6E26801A9B76238AD1975BB3A9406A0EF71EFF441EC2968630A8E
3B5ED14933FC90DDAF6CCAD3FAD9B20B9B81763376863579FEAE599BFA57F8D8
B6095BCBB3EDE80C3DF6D4968B0DF41B2A4969EE421D3B9EF62E3F983E992C6C
91439DF601E0ED2EA6F6372F5D4D09FED60F919CA076B9208802843945B4D0F0
CDC3E3150A3B8E3E6F1083C44D037BA32EEFFB6FA46B5E1811C094DB64155ADE
3AC29B410000DCAE08D9D5CAD76F1E627ADE5B9B7707BE8EB31D26B0C1AEC3B8
FF8484D36E0862948943D136B329737F424B7F17028A71530FB10DE0840FDC5E
5339B1A25058061E303E8958F44B5E8A85C51E9AEB4EF08546ED7F11EE83C835
313318232D7FBE2991D9A24AF5D2BA010656B5C87CC9298497F72142775DBDD0
C54> |
2105 <001C60D8A8C9B5EE310DF8007C5B184F54730290693F64CE54479BB325
1408A7918AD5C83BE7F7E640A2E681F5CEE905CDA87093A8DFE2A154FC81A6AE
30F53A4F2A5824BF688404227CB1D205F35E37633657BE847238973126ABF415
2E06226ED52FD96CF336C6721413F86BA9C039C9D11930AED577392612654B62
73E0933D1B21F87DE197ECD6977D772E956E9D3D636CAEC2F9645CBB9951FF9B
B4A146EDC504D54792C5398F05E99F1EDF70094BF75AA5E9766C807E6140FA55
6440594E1DE37E8768B02A4A4CA26340CE689D824B5C0F55AE792AD456A1FD94
1FC02CAB6DF48C4C1BD5F4718530B900759DC5D63845FC23D84F5BC47A885A9A
3EE9DBB9E677435A3E402764DA47B8FA9C6F04DCBF4DCF87A34450CBA6A19A84
37925B885E76D40B2743671AABE0EB6903955A94EAAAEAD7896ADBAE50D67A01
524C63C47CE3FB0009775F7BC4645AADB2006F929B3D33C95C3405CC4C66F21A
B030C52486E7A3994A98CC5A2E772D897EA637740C8EF17CE03F8AF9FB5950BB
7B2C796D51F10431D3375A572943F8CF9A9F930DB7C8F5EAEDC850DA93B52F1E
EF9358A03B95A07F8B47D660559E097E58654DA138DC8C527CEE264D344D057A
1EB9959DCB7A6FEC3F00B23A48B88E43A5327BF6956A2315A089369C0363D387
1A618E3C4EA3243593CA673CCD33C8C485D2C15B75D519611A14F10CAC7C168E
550D484DA350B75A7B7D539B4B0AB8D9724ED1C2CDB80F61338A71E7060C6BA8
086D84D2E73E9E8B960AF630E75DFE1A902FAED52951> |
1331 <001C60D8A8C9B5EE31020BC54A326CAA972CBCFCE816520165F18A9C7E
657E961D504C5BC2A8E2F42C8CB4146790E05A32716D22EC0430B9C42B5DE220
246FABF8B9C881E45D532B5E37963F64FD952242717F3ED89F0DFA7945BD9FDB
F7223F04902400120FD2EEBB9BBCA32562DE7BFB93D1311BCC1265768ED082E3
B2F11A94D1884FA4735A603F959CF5E79258426E65A9852D80C71D602150717D
C8345A39FAD459097376A67ED8EAF1B49C7BE45747136536E11B4D8C7509E6DF
973D1C41A7E0D4024F75CC32EB9DD0965A77852EF883EDE53FF1CC9D510CE389
99A53198C5FEB29A439773F6122952E97CEEDE1A5A0643A8B691DB978CAD4D23
81FFDB97BFFEAF5AFFD29DFC21ACE74618FF3F8AED5DE68A9ADEB6C8D1814A2D
99003A0179870E6A077262369833A682B11F79F78FC7774E616460CBFD33DB2F
8618A46B6BE868CE6D0D21E03A5FCB1D7622CCF4064BD84E39CDE19B6D963186
68215D8E37B6FFB598313B6B9B74ADC7E88FF58E59264580441BBD9F82479838
B62CFCA13A3613B9270CD8F3F00BEF455A3F69D5A98EFC7C740474402D20B713
E4B028348115993FA9AA14A475931E2EF2CEFC206E6DD5AA9CDB39B568E5FA85
F65D569E49C7DECA6D6B5B54B2B9499B8FB6B527A0F3B0F418D569AE82A9404C> |
2809 <001C60D8A8C9B5EE310D71E7CA90BF3439540850C7DB5D3617C546BD4D
353E719D2D8EACD9C5348DA146A4BBDCC0CA111656AA0E927852F74AC31D4F86
6D380193E13548F600D38B467C293DFEEFB7870A3ED815BF44DE1754E322F96D
E6DE0AF3E42973991B78E469B096C9C7EC37A195B27E3F86DF799C846B3A5EB0
4FE932FF11AD1A519625E8B13BB8E11F288E906C60CFAB39F5E9A7078E0CF6E9
87D8FA9588F770AB8898D3099844A031FFADE04B2A476DB714FE55AA8E5C688B
67A7336BF0061100364C9954D2C031833D8BA2655CFAE394452FEA41C4DFBDB7
6CB863DC5BB92DFB33330885BAB4FE39EEE0AD75749272C7BD3B82DED27A4F0C
0D39F0B4708A2FE06BA347EB257D5C46F03114E9603303F4797EE682F1685029
B2ECECD7354F98DF9A10A9CB3D4EFE0803A5B95F590524E585A47721316375BF
E1E88E52B85875C3749A15BC3C0749B814AC92E3CE1AC9B1A58035D212D91A26
4CDC46CD63649CFCF86D648AAFFCFB9DC0DB1D91856DB5E19057B86F7B42DAAF
3C85073FDC83D0CD378CB8D01957E13746A4AE7C8A684F12014A1CE2A14FC762
ED3D98D848D82634CFA4A5F8600EA9280C3AAC649BA8E365DD571E9F3ED92634
DDC088650EC741DA20DBC9BB6B7DDA9EEC36891B8F668849499F249C112262AB
F07A046E4504197091FF3B175AD2E62388A4208D9B932A8ED475365C2CA07263
963B73F0ACF40679DBF887CE9A6933E2A934B53DBA2C1952588D080023665B1F
9858DB045B016EAF43790FC963984DABAA369643EF84E5EA51486F73E7CD3E15
736C7C30BB3F40385AF1A67A81658C0313E03B33D8A23AAC4472411173FFA3EA
407E448CF23E07792F08A1E9E9F678B27499A072F7058C6A4F6721B0D83CFA64
C51AD6C3> |
1320 <001C60D8A8C9B5EE310277AB99DD521C162C3738B606F2A792F8410593
6A1AD802B1090CDABBD7177B81126E02AD21B1F99C001F8FBC7FD16DFC52494B
B854E2034A65E64085EF189337739744AEA0ABC24290E6B87649B7A9606A7B3D
3292D2C584AEA37BAE7A23D8DE8D236F9B8BD94B2ECB4B2EBC5A6CB3638F9C46
9BCAEC348630982BA5736C36C64F0F66A68BE4FCE831A2F489062F9A7B2513CB
497E35772B55AA7DFBFBD39F50D58DFD0CC5A965ACFB31F54193F689BA5F17DC
B2C4786A43A5A08A01B2EFC516E1CF06D1352DA228DC31DDF68E25784ACFE388
51ED6017417D31FF5E83DE1E1F07F4D643308245CAEE3038F04DC2B55BBB1B54
242E9E6BC1251B293D148E7C7D7222A0450D5AD4D618AA9A36F96E78E0558250
FD106440E6FCA83F35B6732CC9E379632403A0A8F2DE3AE0C234002E853E4E3D
4AB7722493D26F149D95950263C1908AE2B2D6A0E3CCCC5E50BB5C5515140701
5A36684FE5CDF8754FE89131883242A45EF502AC340B69796C7A8957AEEE2CAE
EF612EEA01A87F392DB62759657DFAAD55EC484F59B95FE7E19876D0E3BCDC04
F0CD8CEDA4ED97D8285BF8F3D000BF2F5447B9DA5C7ED01C4AA55D12488BA701
327359A4E13EA3BB0CEDB9F4090A4CA25185DB786013DA292620F69E54566235
741E543696F99D536DF7F7B8B6687D41> |
5953 <001C60D8A8C9B5EE310DD3DA1D7E8DF9CB71A2F6138AC0E148C7563F35
311E823A7C887D4C39AE1AB01B2D68AC2D929C05BCDB3EE401601F96C96D965E
DAD66DAE6998DE693EE1FA117511A800BD87EE446FF3BF343D2B44E18BDCAFEB
BF0F15FB85FA03616F7D8F18CF778D019169D5DD1C784AA00022E0A8A9D99EDC
82FF90536274BA30A8E4E24423DE92EEB0B73EB3CF58CDC3B829DF27FFDCAFB1
0ADC444F621D5C6827C3B531989207B7F93CC8F2A58E614B5C9BF79AEFBB62FB
EC4A0C1A9A9321F99C477885EFB212EE916C2E2154F202602815303B9BBBE781
42D844470E5CED8C108791B2D6884DB20AFA73919C4432212BF1E7CEA76B32EA
8E51A7D13F2D4E1C892C5D7AA5424EAB606DAD5B5C0F381710DFBAE6F6B75A9C
E31EE7C3A2A0CBBC2FE49ED1474533E13339E385C2196E1D16C44C8DCC9953DA
9A0E25DE0329DE41927FE177FEF5C53327D093B8C447B807E52AC85564EE79B0
5AB2AE> |
4748 <001C60D8A8C9B5EE3102EFEC9964A8863FB1F3DF04374C1095D693AC14
288523DAB7A9F9A1D7C27E6808341E48DA7061271E2CB3540B8635236E073DA8
E5FCEE6015D251C5DD2B7954EF4D7CCB0762C88C81CB9951E94EEB4A3367F73B
909B2DB80CE875E205B9BD10C1B1F09FCA292D411CD8650DC84D8862CC64FD91
4B255F927C3A0B0CB98A2F8806A024510D8EDA3634A14393CC17605DAAC99FD4
828979E6A3FC48BDFE757ED2A4FF40CF3D741F5F1569A32BB0E5898B517CA593
9550FB5EC6FA4DB415FD39B2AD2C181E34D14E44ADEB95FC907079652EB6C173
B6F08FA9BF0ADEC7CB08F56EE33CF6E392AE3DB56ED39FA4232AD6230B803B52
B129C7EED2FF74191D00BD2DE894C741C042063F0F07BC14B1A2805446DBDBB1
82C3247E5949C0A304F56E472D1E410609F253DF209B0CA1271FEC7F8F146ADA
22D8A7EFDE31B14B820DBE7C0335D46893F6F126959659E0276C07D6E317EF2D
24B86C6B4E308C2584E2DD8982536608982B38F144F8E0BCB3CC067ED902A205
5895049D3126123BB0EB550D676E3CCF3A910E9B8BF3460FE25E931F9D137C37
35C1D34D3347A0538F6946244A0CF5CF307214606B3241A688FEE96D8B9C83E9
AA46A5AF2EB16D8E0BF43C6F2402277BAA9EA27CB5B18D66A38E7E98E43EE93A
8CC51552EBCFAA4E778E5FFE6CDA47227CBC6BECDA13BE03CE6703C190E21B60
98FBE922A1264CD9D961F3D0B8843CE763682607CCF06E46FD706F012BA5DCBF
A5300AF0C21EFEF2F3E4319409F3210686CA83814EAA7DB21BB18B852BAD85B4
4DB99AF79A94D30091ABC5010D84E14B3476659CE2380CDF1B6475B18CA09059
CC800CC42F0BD7FEDE67694E8661F1338F1F1768E5FEFC5085F61F5B16B2EFFC
2192C8468559E1ED405190F6967019F291AA8527F33929D28B11B4769AD1> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
280.626 471.372 mo
(\003T\0109\0053\012\371\005\(\027A)
[9.58624 9.58624 9.58627 9.58624 9.58624 0 ]xsh
280.626 483.676 mo
(\022\214)sh
0 .745 .745 .208 cmyk
TVZNDO+STIXTwoText-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
288.295 483.676 mo
(\000\003\007%\007\210\007%\007\210)sh
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H 1 GetGlyphDirectory
5364 <001C60D8A8C9B5EE3102FF05302820864AE68470B4FAFD324900336903
861F041DB0950573FDD44855500574B917D656B485CC025969D85BD737E3924B
1A4DCFEE4C107880943003F44651C43019E57C2492095D85274D38A14AF0299E
D784EA293D2105B96D0A1D0DBF69F5547D05CA9782AA3409BD01DF5669EA8B18
4B92A704827A17584345649E618244A8618C0FAC723769C7695857C4A885CA1D
C30EAFE61D3869D66759D965B9284D1591FEBF95CBBFD87202897854AD351575
E87F1D869A7C51844CE3603B71427508265BF6D363B050B2862B7ADD4F4DA439
EDBCC5D708789414277F04DB159D97DF20D7EC26B83557C22C5FD51D06D0F903
8C9D2CF1DE6C78BBE10F96D8DA3F74CA7D175E934358E981734D6ABCBD921BAD
A9ECF5A8B93E622937D1D085D79E50BF483E5D06F357D1CB4611106091F63274
4A712E1AAA1FA01FE6EC3E5850E2F173CBA49BA558FAA6B3490ABAC273344CC7
8000B3745030784BF6E785DA90F5C51EC8C06EA1CF939C6E05E8CCE7D7> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
305.814 483.676 mo
(\024\364)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [7.669 0 0 -7.669 0 0 ]msf
313.483 483.676 mo
(\037T)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-39.6063 490.797 mo
(*\253DQ)
[9.5862 0 ]xsh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-18.9393 490.797 mo
(\0071)sh
0 .745 .745 .208 cmyk
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
-15.5223 490.797 mo
(\007\212\007%\007\211\007\210)sh
0 0 0 1 cmyk
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
1.71273 490.797 mo
(\0072)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
6.62473 490.797 mo
(/\225*\253DQ)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
36.8777 490.797 mo
(\0071)sh
0 .745 .745 .208 cmyk
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
40.2947 490.797 mo
(\007\212\007%\007\211\007\211)sh
0 0 0 1 cmyk
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
57.5307 490.797 mo
(\0072)sh
true set_gvm
%ADOBeginSubsetFont: UGXAAA+SourceHanSerifCN-Light-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/UGXAAA+SourceHanSerifCN-Light-Identity-H 6 GetGlyphDirectory
11977 <0C1C60D8A8C9B5EE317633DDDA4FFC365AD9FADCA1CD135A126332E32
23FF680B661BD35AD77EB8C4BF2565FD89B5CFFCBE1D4C0644BBE268803E005D
91304AA127695684D306A91FD54C8090AC8B8E300D38C26F551DC9357D7BA9EA
EB8E2FD9ADFAB46EF5EF280D5393B38310545F4C35CD559CFD7C90562E4B3A5C
254CF17BF422465EEB741DED2168C65C0A5B410BCB147B0D36ADF0BF6C9C9BF4
008B24155A357F48461DE0E678A7F6289679F057C1D284EB889AFEA2EE8A7D40
8FE27F3F617D4CB78B19D9FA252AF92CE657B06EBBBBA95A92F834290F611939
526B2F8D0B151F1C6DB91A16C> |
17172 <0C1C60D8A8C9B5EE31764DBE74F15EBA2BA88C0FE42A9483D5690B11D
C58DBA872233F892AECFF2F72C936E3C485BC46494C2FE06F14F0B629F1B3509
118ED761B5D82B368D7DF875718B52B884FAC918E6D0D62F79A0C86BCDD16BAF
4897EC013C3B2C5F20581E95100DCD103AE42A8871DB4E3ADE21668F21C5786D
506F37544D7AA7E249E3DB049C9B9077A3D2AB5E5DCB221116E177D4F80235F3
98C41B4DCC10A477ADFC20238D91DCBF59601C15FC1A208F7668D2B879D7ED1B
39D8DC3A9B9C2F59678F3FE7617AEB7FF20F44E98676227337918A0A31636C2E
257DCD2C6255FCF8CBC75B334C92DDE5B31F98A452AD5FC8836AF3ACE5EB8DEB
96AC3845F1EC1430C2A1011CD82BFC614109EF0ECFE86DCAC9B58AD67021DDB6
4599BA0A0F0956636D9582A1131A39A41702EFA51F5D3A4B5> |
10989 <0C1C60D8A8C9B5EE3177B663FADE789DB07A5FF7433B48D2C23A1BBA1
851DCF25942A240E77CD16DFCECEF8AF16C2566DC6C383F82B0AE28E0655FC7B
5E09562CD80C8408807A4C9314EA047FD2C39BD1D6A260B567A14096D4C10215
A3969D0B2C7B46D6D43D2FDF4D04408BDAB3DC2805EE83F933E4B0389C01B3AB
2CB37233ED5BDA6F1CFA95B88DB017BEE542D2E299AB7D879A5E2908869F18B6
F9C6CE85410C259D0F8EC980655C5C939D0B4514907F1C8CE6645406B15BA2EC
7AB2A89D5EA64B200C0799D94AF82DD4EDEA5D07F39A44B1D6B3D42F86B1FD4A
026F517FB0AE9CA8A8349A1E6650C32C7A13AA86493445F3B4F6A131B2A1AD81
FC7DF859A17F5D499E3567054D0A24F23CB3F6A3381F9BCF72F8A21A68D09D6B
B0DA7965F00395AC11EFA6A24A6B51524E46B609A0DD27268696896D7550EBC7
45E7053834C820B3EFB392FC83D052735F4C60F004F0D727E5F0E5DD1DD7D3EC
7C79AF561FAA286EB5A9370576E246BA9A7A62C4CF00AA2E4733F643952B04BA
8979275B135A7AA8668F7534D40C2AD72D96F7DE60833D74D49897D9D29F7500
64BD712675955799BF283BE5F8662CA5A0FAE91C83D275D17DC00CE345F35005
9192226781FEE20C5F8EDD537AB635630117E5EB1F5B6E146DF22> |
9580 <0C1C60D8A8C9B5EE3176F9C853FA79385ABA8706824D025F063A3D51DE
7236CC31DBE48D2AC396695DF0040D06EAE5A1FEEF1C78BC703F8D9B0AC07D87
61E1509032EAD8A6182D753931E1A437BD91C412C3D243E6CDBE1AEAC3BAC285
DF9C7EB09DD66D1A1212F8652A5764CC6DB5BCF111AEAF468D1E381AF913CA65
0DDADF37F53BD05CED210DB637989AAE656EAAF0E71DBF4D593F3CF977040F69
D7CC18F8457CAE3128671D926455F99EAA8A9D9F93EDC37074D004357F29E988
AA08ABADBCCC4A9DF8C68B3E5D80B414792517590FA2962B167E16C528AA70DA
A45D95CCDAA2D479> |
18934 <0C1C60D8A8C9B5EE31764DF1553D72F0E3E7354A5EA7A0F402FCCD6E7
0AB95DC658D991BC203A2E69630F172AC8B7D8AF04D82D97EE60D4554325F7DC
AEFD9A1FD14DC1FEF00C7A7574E8ACBBF5B15CC82ECDF1365BCE420E6A9B01A7
C4142EE96F951407FD6402550D58807D02E5C442FE59EED0ED601F885AC2D008
17F3E1677C13655E8B70C520B638F32638D64507AB37A39B0547D640A91C8310
E435859E01649856B5D9DB6C59464185752F21B05A495BB122D0D405EF52A719
5C30B243F62B0445B1F9718A62A64A6DB5D24BEB6414992DF74BF5EBCED08F9B
71E8FE06062AFD9A40AD19E5AC467826A755043F08629ADD6CE8DFC12EE28C67
D043E9B102A3534637258A0C572E58D5A43E1AF0152EC28A749695A3D6D63D8D
2BCAA6D4E7ABA3B8091220F794C2A670E108F27F589D7C67F538E53DD89589FC
96A2D3EBC8EBE13FB243F2E9E7D3FA9C0782BE0F4F9D05058AB5D5743C6E90CC
5A52B6251C09FF6E191D91E6B73D644E80D02A56E3239DC8A1774E886DBDD15B
B5602DF07A142B8E939CB9FE5CE5901A579BE68CEF1DE6DF71D49F082ED529B7
3050BA9D632D7A99DE5C1FCB19526480EFD63CB95B651B6> |
33058 <0C1C60D8A8C9B5EE3176C587133198AE99C7BF585FA4D36022655F744
E1F4E787A7F3A9C3A48AD307B3B2A4E23A0792C590EB68B9311976C3E86B2B7A
023C09351823F71109E86AFC63320D2ABE73F24EE27C1B762EFEAA41D297960C
4E57C98A386287746FA80220D0295780F6DFB8BD1BE03F3430BBB129C7BD781A
3D6F53A12C0EB8DE5FDAFB27F13754062BAB14CF688A78757B701AF423784E30
E47F6BBD378D432A2412505310AE81B7FD96B2537020890ADD3A882352BB6D13
A34B88910C6DD155106B93A235D44655539D0CEFA88B55BEB3E29605874E67AA
4A55DBF355D3C88D928CDABB36CD536BB311BD32B0A08994E5F1E18F97828919
8B93B03DDE3CB164FEAA433715330845E7F261E9F3EBC32CF99DE5E6EDBAE052
F5A6194B7EBAA1766525B8748D94048ABB021> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
62.4417 490.797 mo
(%\241.\252&h.\311C\024*\355%l)sh
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H findfont [9.5862 0 0 -9.5862 0 0 ]msf
129.546 490.797 mo
(\037`)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
44.5197 513.626 mo
(\015S)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
49.4607 510.04 mo
(\020\276\021S\020\277)
[2.90813 2.43385 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
60.9767 513.626 mo
(\004\262\0154)
[9.93266 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
81.8467 510.04 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
90.5947 513.626 mo
(\015\003)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
94.3607 515.719 mo
(\021S\020\274\020\262)
[2.42693 5.74644 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
106.589 513.626 mo
(\004\(\015S)
[3.55659 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
115.087 510.04 mo
(\020\276\021S\020\274\020\262\020\277)
[2.90813 2.43385 5.74644 3.54968 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
133.131 513.626 mo
(\004\)\004\254\0159)
[5.7683 9.38478 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
154.048 510.04 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
162.796 513.626 mo
(\004\030)sh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
245.218 513.626 mo
(\0071\007\212\007%\007\211\007\212\0072)sh
TVZNDQ+SourceHanSerifCN-Light-Identity-H [9.5862 0 0 -9.5862 0 0 ]msf
-59.5313 536.455 mo
(I\366\201")
[9.5862 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
48.0518 559.285 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
54.1087 555.698 mo
(\020\276\021S\020\277)
[2.90813 2.43385 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
65.6247 559.285 mo
(\004\262\015\003)
[9.93266 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
79.3317 561.377 mo
(\021S)sh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
82.2637 559.285 mo
(\004\(\0154)
[3.55659 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
96.7487 555.698 mo
(\020\276\021S\020\277)
[2.90813 2.43385 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
105.497 559.285 mo
(\0158)sh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
111.555 555.698 mo
(\020\276\021S\020\274\020\262\020\277)
[2.90813 2.42693 5.74646 3.54968 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
131.813 559.285 mo
(\004\254\0159)
[9.38478 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [6.9738 0 0 -6.9738 0 0 ]msf
146.959 555.698 mo
(\020\276\021S\020\277)
[2.90813 2.42693 0 ]xsh
TVZNDR+STIXTwoMath-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
155.707 559.285 mo
(\004\)\004\034)
[3.55659 0 ]xsh
TVZNDO+STIXTwoText-Identity-H [9.9626 0 0 -9.9626 0 0 ]msf
245.218 559.285 mo
(\0071\007\212\007%\007\211\007\213\0072)sh
1 1 0 .1 cmyk
true set_gvm
%ADOBeginSubsetFont: GFNBAA+STIXTwoText-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+STIXTwoText-Identity-H 9 GetGlyphDirectory
262 <001C60D8A8C9B7FA130B99932EE4B9F3B8252DC0F89B981E62F4E5AF6EC
E2D3F1AA373C4E9D54D3381BA6CEE265F267C8952CBEB53A7361212FDF5C0D23
F7085A945A79B1ED23FC865B8322E7ED170157EDF570C593111CC216847511F2
3EDE7C3478FAC6C1E1BA1E7243BC551A3C2F9706CF02557594003E102191A470
177CE8780753872CD02818A8970FC3A7E3674C73F1DAF7E43A1A1C6> |
271 <001C60D8A8C9B78256DE39697EAD561E19DDB17E31D07C5FF97E93FA9BC
4EC5F6FC1B83B55AF6825D9AF87A0898C8046817D865D6275F5315EC6109C5BB
5EA3FA664D8DD9B525DDEF3634DA9A3A974ACC5D7065B25BE182CDD7BDCBE7AD
2E4225CBF862423B5648A8A4A473B64CC6E42B88CF37CB92C3201A637E149550
021B3C47A91E8DF729248065213449A10B6D2B6624F6E77BDFDAF7CE2649DAD5
B3943880B58960D86344912063ED3E03A61A5BDB8E8724BD54D99BB28345D42C
2F59901709D887A2BDC2F2F3F2987AC61B8D825B3168BEBAACFA2693CACA5815
5F918CD229E80E6A8DD58B938E7FA> |
1828 <001C60D8A8C9B8771BAF4709D6EAE300A7AA34E6BA2728DE6E80EA2A9C
AE0549220640DE483B04C69A771A2D1957D2291F52A2B395C8FBF9A531C4B29B
97D9436527D5A15215DADD> |
1837 <001C60D8A8C9B738A232BA25867880CC2E500361680234C9E9FF118FD3
E7612276> |
258 <001C60D8A8C9B780B37307F7E8335F72A2EB6962852EA00E39267BFFF39
37D6DA77BCC980C31AB48139A1559C96384B625F8C5019614EB5F41F3BDCE26A
7AD444ABD0E99FAF26A44934010E9FCF656DD7B0173C784760314E6E34B8D325
AE444F6A84A3AF9548A5F8D388630A7E6D21DD63346D7153C7B3DA4BEE8C3F4E
74F7B9A44BED746E11007FAA038FC7A9530989DB60FE00E12C0551CDB3D6B724
3B565D471527DB6B00AFA72498B25EAB4518755CA1F450EB5AF7850035C64338
C480DEE6FCDB3B6717B5A0D470D545DBED352BF9FF5FCEECB584466574D11E53
32854568B0D73BEBDF78EC3A5DA8E558741CC8907EF69C0C895E8BA6E6BD33B8
8> |
267 <001C60D8A8C9B8517F68168A98203EFCD9567532AC6258643810F5E66D4
30757CF8B5519B408D26CCE55487DACA0078DCD34968A2D1BFA2620CD079C274
EAFC372F5553B> |
261 <001C60D8A8C9B757A3B7691E4ECA083FB33DCF6DEFBE07AF9BEB2B99D57
48E17543BBF7734A464930BAE965253FD972C3BEEEA75B348A496B865A850CCF
D1F481BAC840994F593CBE58149F65DBB92B3DE8C271E64CB25F39F925877CA7
71C6E5812A9AC8773906B94D5905E3FB383B93876D26C1FEC5C266D3A859A375
67D546228282CDAAA1DD8FDEB324B785F2302CFFCE4A534C355205BC38F40811
148E564FAD61B19B122D98385F0EFC014B271329D61C7BE3AEA3BF8E704291C4
2DB9BF5DA7A3743AE175E71DEAB401E36AA92417B4A66010EE47B10E319D3550
93536F42FDCCAD4314FD58F3CF1406BED89217311F095743F614E8FA985F125B
A45FAAA95057733A94D97A864A370070328BE5349541FE2BE3DB36C2669F5266
7AEE49C88A01BA0917FD2C02A006921C88BBC7912F9500CCEF0F0F8316136263
F44AABBD4E4BD2B054B8188E041F7DE23352BDD256C533075B38425D603CFA6B
6575DC7EE83BE7BD05487C0E7D56491290618186CB4587AA12A5B715570D690> |
276 <001C60D8A8C9B7E1F88EA38A31B4987032199D668407522F3CA782177D2
188E58257A4AEF66FA110883D382A88D99CA10BACD1EC7D92D591DE5712F7DC6
353D53071139DE9829F4A3D3FA88943387FEE228FF498158C64735ED2F05519B
0A9380A6CE9DAAC7015572A524F32613072705542292885B710FE9E224F1B3F5
5F66BF63F16528C7A491999A6B8BD4537B0E0C11982326149C1DE2B34AD0C4F8
06ADE61E4D8BDF69524CBE7FC7DE4564946A5B8F840D7FDFD3AD91381D6B6DC5
E7ED1CBCE44C95B85ACFCAF41150F26D6CF8F5C5D> |
256 <001C60D8A8C9B7B14CEFA879D6EA696FFCF0FDCD805D22B54413200F4FA
AE3A4091ED1963B1B569A0769084F9E8EE36B2F7C53B9A38819C57E66EDF7823
F7CF69E98256E2CC880F5FD572AF60AC34DD321B70D8B09DC5DF798C9D4FC463
B8A15FD2051D9793E40383ED2AA0CEAD74B979BD112FAD86E721FEECC3B6828D
95B8E45CF624E85C4B5ED34D6009E> |
!
end
end end
%ADOEndSubsetFont
reset_gvm
TVZNDO+STIXTwoText-Identity-H [7.9701 0 0 -7.9701 0 0 ]msf
-59.5313 573.458 mo
(\001\006\001\023\001\023\001\017\001\022\007$\007-\007-\001\015\001\015\001\002\001\013\007%\001\005\001\007\001\023\001\006\001\024\001\000\007%\001\007\001\016\007-)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/TVZNDM+FZSSJW--GB1-0-GBK-EUC-H-Identity-H uf
/TVZNDM+FZSSJW--GB1-0-GBK-EUC-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDL+STIXTwoMath-Identity-H-Identity-H uf
/TVZNDL+STIXTwoMath-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDR+STIXTwoMath-Identity-H-Identity-H uf
/TVZNDR+STIXTwoMath-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H-Identity-H uf
/TVZNDP+FZKTJW--GB1-0-GBK-EUC-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDO+STIXTwoText-Identity-H-Identity-H uf
/TVZNDO+STIXTwoText-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDQ+SourceHanSerifCN-Light-Identity-H-Identity-H uf
/TVZNDQ+SourceHanSerifCN-Light-Identity-H /CIDFont ur
reset_gvm
true set_gvm
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H-Identity-H uf
/TVZNDN+FZSSJW--GB1-0-GBK-EUC-H /CIDFont ur
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
